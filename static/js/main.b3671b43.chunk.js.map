{"version":3,"sources":["gamelib/util/ImagePreloader.ts","gamelib/util/SoundEffects.ts","gamelib/GameController.ts","gamecontainer/InfoDialog.tsx","gamecontainer/GameComponent.tsx","gamelib/behaviors/DefaultSprite.ts","gamelib/types/Point.ts","gamelib/types/Sprite.ts","gamelib/types/Rectangle.ts","gamelib/Scene.ts","gamelib/behaviors/SpriteSheet.ts","gamelib/behaviors/SpriteSheetBehavior.ts","sample/BouncingBall.ts","sample/space/OpenningSequence.ts","sample/space/sprites/Asteroids.ts","sample/space/SpaceGame.ts","Home.tsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["ImagePreloader","imageCache","Map","loadsCompleted","nLoads","loadCallback","callback","this","key","image","get","Error","images","des","Image","src","onload","_createOnLoad","name","newImage","canvas","document","createElement","ctx","getContext","height","width","drawImage","top","imgd","getImageData","pix","data","newColor","i","n","length","r","g","b","putImageData","output","toDataURL","makeTransparent","set","SoundEffects","effectPreloads","sounds","rate","_mute","effect","Howl","preload","sound","play","console","log","mute","Howler","GameController","gameInitializer","debug","keysPressed","imagePreloader","soundEffects","isShutdown","pause","readyCallback","_scene","gameEventListeners","preloadSounds","preLoadImages","preloadImages","registerCallback","_handleImagesLoaded","window","innerWidth","innerHeight","init","scene","transitionScene","newScene","that","addBehavior","handleKill","event","type","value","forEach","handler","gameEventListener","push","keyDown","keyUp","mouseDown","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","preventDefault","handleMouseClick","touchMove","touch","targetTouches","handleTouchMove","addEventListener","lastTime","restart","requestAnimationFrame","loop","time","removeEventListener","timeSinceLastAnimation","size","handleKeyPressed","save","paintBackground","paint","updateModel","restore","fillStyle","fillRect","useStyles","makeStyles","theme","createStyles","infoButton","InfoDialog","React","useState","open","setOpen","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","IconButton","edge","className","onClick","color","aria-label","Info","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","component","variant","DialogActions","Button","autoFocus","GameComponent","withStyles","root","flexGrow","controlButton","score","marginRight","spacing","title","link","textDecoration","backdrop","zIndex","drawer","props","canvasRef","createRef","gameController","state","imagesLoaded","current","setState","subscribeEvent","stopPropagation","Fragment","AppBar","position","style","background","boxShadow","Toolbar","Typography","to","handlePause","PlayCircleOutline","PauseCircleOutline","handleRestart","Refresh","handleMute","VolumeOff","VolumeUp","Backdrop","CircularProgress","ref","Component","DefaultSprite","isAlive","speed","angle","acceleration","canCollide","isFixedPosition","zOrder","behaviors","behavior","location","timeSinceLastUpdate","otherSprite","handleCollision","pointAsInt","point","Math","round","xySpeed","sprite","cos","sin","union","rect1","rect2","tx2","ty2","rx2","ry2","tx1","ty1","rx1","ry1","intersects","tw","th","rw","rh","tx","ty","rx","ry","remove","array","index","indexOf","splice","Scene","controller","modelSize","viewPort","wrapAround","sceneSpeed","collisionListeners","sprites","count","totalTime","filter","s","pointInRect","_validateSprite","comparator","low","high","mid","floor","c","insert","a","priorPosition","handleMovement","dx","tempArray","slice","pop","oldRect","pointSpeed","newX","newY","wrapped","newRect","_handleCollision","sign","error","removeSprite","collisionSprite","displayedSprites","pos","fillText","addSprite","undefined","SpriteSheet","rows","columns","row","column","w","h","translate","rotate","srcX","srcY","setTransform","SpriteSheetBehavior","spriteSheet","framesPerSecond","age","animateOnce","frame","frameCount","timePerFrame","createWall","isVertical","PI","random","BouncingBall","publishEvent","getSpritesAtPoint","sz","getImageFromCache","radius","rand","min","max","ball","launchOpenningSequence","minn","generateAsteroids","SpaceGame","appBar","container","marginTop","marginBottom","padding","up","maxWidth","media","githublink","marginLeft","Home","noWrap","Box","overflow","Grid","alignItems","justify","direction","Card","CardActionArea","CardMedia","CardContent","gutterBottom","App","path","Boolean","hostname","match","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","body","margin","ReactDOM","render","ThemeProvider","CssBaseline","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"qYAqCO,IAAMA,EAAb,iDACIC,WAA2C,IAAIC,IADnD,KAEIC,eAAuB,EAF3B,KAGIC,OAAgB,EAHpB,KAKYC,kBALZ,+DAOqBC,GACVC,KAAKJ,iBAAmBI,KAAKH,QAC5BE,IACJC,KAAKF,aAAeC,IAV5B,wCAasBE,GACd,IAAMC,EAAQF,KAAKN,WAAWS,IAAIF,GAElC,GADAD,KAAKH,UACDK,EACA,MAAME,MAAM,yBAA2BH,GAC3C,OAAOC,IAlBf,oCAqBkBG,GAA4B,IAAD,gBAEtBA,GAFsB,IAErC,IAAI,EAAJ,qBAAsB,CAAC,IAAfC,EAAc,QACZJ,EAAQ,IAAIK,MAClBP,KAAKH,SACLK,EAAMM,IAAMF,EAAIE,IAChBN,EAAMO,OAAST,KAAKU,cAAcR,EAAOI,EAAIK,OANZ,iCArB7C,oCA8B0BT,EAAwBD,GAAY,IAAD,OACrD,OAAO,WACH,IAAMW,EA9DlB,SAAyBV,GACrB,IAAMW,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAC9BJ,EAAOK,OAAShB,EAAMgB,OACtBL,EAAOM,MAAQjB,EAAMiB,MACrBH,EAAII,UAAUlB,EAAM,EAAE,GAKtB,IAJA,IAGImB,EAHEC,EAAON,EAAIO,aAAa,EAAG,EAAGrB,EAAMiB,MAAOjB,EAAMgB,QACjDM,EAAMF,EAAKG,KACXC,EAAc,EAAdA,EAAkB,EAAlBA,EAAsB,EAAtBA,EAA2B,EAExBC,EAAI,EAAGC,EAAIJ,EAAIK,OAAQF,EAAGC,EAAGD,GAAK,EAAG,CAC1C,IAAMG,EAAIN,EAAIG,GAAII,EAAIP,EAAIG,EAAE,GAAGK,EAAIR,EAAIG,EAAE,GAClC,IAAJA,IACCN,EAAM,CAACS,EAAEC,EAAEC,IAEZF,IAAMT,EAAK,IAAMU,IAAMV,EAAK,IAAMW,IAAMX,EAAK,KAE5CG,EAAIG,GAAKD,EACTF,EAAIG,EAAE,GAAKD,EACXF,EAAIG,EAAE,GAAKD,EACXF,EAAIG,EAAE,GAAKD,GAGnBV,EAAIiB,aAAaX,EAAM,EAAE,GACzB,IAAMY,EAASpB,SAASC,cAAc,OAEtC,OADAmB,EAAO1B,IAAMK,EAAOsB,UAAU,aACvBD,EAoCkBE,CAAgBlC,GACjCU,EAASH,OAAS,WACd,EAAKf,WAAW2C,IAAIpC,EAAKW,KACpB,EAAKhB,iBAAmB,EAAKC,QAAU,EAAKC,cAC7C,EAAKA,qBApCzB,K,QC7BqBwC,E,WAMnB,WAAaC,GAAsC,yBALjDC,OAA2B,IAAI7C,IAKiB,KAJhD8C,KAAc,EAIkC,KAFxCC,OAAgB,EAEwB,oBAC9BH,GAD8B,IAChD,IAAI,EAAJ,0BAAQI,EAAR,QACI3C,KAAKwC,OAAOH,IAAIM,EAAOhC,KAAM,IAAIiC,OAAK,CAACpC,IAAImC,EAAOnC,IAAIqC,SAAS,MAFnB,8BAGhD7C,KAAKyC,KAAO,EACZzC,KAAK0C,OAAQ,E,iDAGTzC,GACJ,IAAM6C,EAAQ9C,KAAKwC,OAAOrC,IAAIF,GAC3B6C,GACCA,EAAML,KAAKzC,KAAKyC,MAChBK,EAAMC,QAENC,QAAQC,IAAR,2BAAgChD,M,2BAIhB,OAAOD,KAAK0C,O,aAExBQ,GACRC,SAAOD,KAAKA,GACZlD,KAAK0C,MAAQQ,M,KCnBJE,EAAb,WAeI,WAAYC,GAAiC,yBAb7CC,OAAiB,EAa2B,KAZ5CC,YAAoC,IAAI5D,IAYI,KAX5C6D,oBAW4C,OAV5CC,kBAU4C,OAT5C5C,YAS4C,OAR5C6C,YAAqB,EAQuB,KAP5CC,OAAgB,EAO4B,KAN5CjB,OAAgB,EAM4B,KAJpCkB,mBAIoC,OAHpCC,YAGoC,OAFpCR,qBAEoC,OADpCS,mBAAuC,GAE3C9D,KAAKqD,gBAAkBA,EACvBrD,KAAKyD,aAAe,IAAInB,EAAae,EAAgBU,eAAiB,IACtE/D,KAAKwD,eAAiB,IAAI/D,EAC1BO,KAAKwD,eAAeQ,cAAcX,EAAgBY,eAnB1D,iDAsBSpD,EAA0B+C,GAA4B,IAAD,OACtD5D,KAAK4D,cAAgBA,EACrB5D,KAAKa,OAASA,EACdb,KAAKwD,eAAeU,kBAAkB,WAAO,EAAKC,2BAzB1D,gCA6BQ,IAAMtD,EAASb,KAAKa,OAIpB,GAHAA,EAAOM,MAAQiD,OAAOC,WACtBxD,EAAOK,OAASkD,OAAOE,YACvBtE,KAAKqD,gBAAgBkB,KAAKvE,OACtBA,KAAKwE,MACL,MAAMpE,MAAM,sCAlCxB,iCAqCeqE,EAAwBC,GAC/B,IAAMC,EAAO3E,KACbyE,EAAgBG,YAAY,CACxBC,WADwB,WAEpBF,EAAKH,MAAQE,KAGjB1E,KAAKwE,QAAUC,IACfzE,KAAKwE,MAAQC,KA7CzB,mCA4DiBK,GACN9E,KAAKsD,OACJN,QAAQC,IAAR,+BAAoC6B,EAAMC,KAA1C,aAAmDD,EAAME,MAAzD,MACJhF,KAAK8D,mBAAmBmB,SAAS,SAACC,GAAD,OAAaA,EAAQJ,QA/D9D,qCAkEmBK,GACXnF,KAAK8D,mBAAmBsB,KAAKD,KAnErC,4CA6EQ,IAAMR,EAAO3E,KACPa,EAASb,KAAKa,OACdwE,EAAU,SAACP,GAAD,OAAyBH,EAAKpB,YAAYlB,IAAIyC,EAAM7E,KAAK,IACnEqF,EAAQ,SAACR,GAAD,OAAyBH,EAAKpB,YAAYlB,IAAIyC,EAAM7E,KAAK,IACjEsF,EAAY,SAACC,GACf,IAAMC,EAAO5E,EAAO6E,wBACdC,EAAIH,EAAEI,QAAUH,EAAKI,KAAMC,EAAIN,EAAEO,QAAUN,EAAKpE,IACtDmE,EAAEQ,iBACCrB,EAAKrB,OACJN,QAAQC,IAAR,4BAAiC0C,EAAjC,YAAsCG,EAAtC,MACAnB,EAAKhB,OACLgB,EAAKH,MAAMyB,iBAAiBN,EAAEG,IAGhCI,EAAY,SAACV,GACf,IAAMC,EAAO5E,EAAO6E,wBACdS,EAAQX,EAAEY,cAAc,GACxBT,EAAIQ,EAAMP,QAAUH,EAAKI,KAAMC,EAAIK,EAAMJ,QAAUN,EAAKpE,IAC9DmE,EAAEQ,iBACCrB,EAAKrB,OACJN,QAAQC,IAAR,4BAAiC0C,EAAjC,YAAsCG,EAAtC,MACAnB,EAAKhB,OACLgB,EAAKH,MAAM6B,gBAAgBV,EAAEG,IAIrChF,SAASwF,iBAAiB,UAAWjB,GACrCvE,SAASwF,iBAAiB,QAAQhB,GAClCzE,EAAOyF,iBAAiB,YAAaf,GACrC1E,EAAOyF,iBAAiB,YAAaJ,GAAW,GAEhD,IAAIK,EAAW,EACfvG,KAAKwG,UAuCLC,uBArCA,SAASC,EAAKC,GACV,GAAGhC,EAAKjB,WAOJ,OANGiB,EAAKrB,OACJN,QAAQC,IAAI,kCAChBnC,SAAS8F,oBAAoB,UAAWvB,GACxCvE,SAAS8F,oBAAoB,QAAQtB,GACrCzE,EAAO+F,oBAAoB,YAAarB,QACxC1E,EAAO+F,oBAAoB,YAAaV,GAAW,GAGvD,IAAIW,EAA2BN,EAAeI,EAAOJ,EAAV,EAC3CA,EAAWI,GACRE,EAAyB,KAAOlC,EAAKhB,SAEpCkD,EAAyB,GAE7B,IAAM7F,EAAMH,EAAOI,WAAW,MACxB6F,EAAcjG,EAAOM,MAArB2F,EAAoCjG,EAAOK,OAC7C4F,IAAe1C,OAAOC,YAAcyC,IAAgB1C,OAAOE,aAI3DK,EAAK6B,UAGT7B,EAAKpB,YAAY0B,SAAQ,SAACD,EAAO/E,GAAR,OAAgB0E,EAAKH,MAAMuC,iBAAiB9G,MAErEe,EAAIgG,OAEJrC,EAAKsC,gBAAgBjG,GACrB2D,EAAKH,MAAM0C,MAAM,CAACvB,EAAE,EAAEG,EAAE,GAAI9E,EAAK6F,GACjClC,EAAKH,MAAM2C,YAAYN,GAEvB7F,EAAIoG,UAEJX,sBAAsBC,MAG1B1G,KAAK4D,kBArJb,sCAwJ4B5C,GACjBhB,KAAKwE,MAAMyC,gBACVjH,KAAKwE,MAAMyC,gBAAgBjG,IAE3BA,EAAIqG,UAAY,QAChBrG,EAAIsG,SAAS,EAAG,EAAGtH,KAAKwE,MAAMsC,KAAK3F,MAAOnB,KAAKwE,MAAMsC,KAAK5F,WA7JtE,0BAgDcsD,GACFxE,KAAKsD,OACLN,QAAQC,IAAR,oBAAyBuB,EAAM7D,OACnC6D,EAAMlB,MAAQtD,KAAKsD,MACnB,IAAMzC,EAASb,KAAKa,OACpB2D,EAAMsC,KAAO,CAAC3F,MAAMN,EAAQM,MAAOD,OAAOL,EAAQK,QAClDlB,KAAK6D,OAASW,GAtDtB,eAyDQ,OAAOxE,KAAK6D,SAzDpB,yBAqEaX,GACLlD,KAAK0C,MAAQQ,EACblD,KAAKyD,aAAaP,KAAOA,GAvEjC,eA0EQ,OAAOlD,KAAK0C,UA1EpB,K,4ICFM6E,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACbC,WAAY,QAMG,SAASC,IAAc,IAAD,EACXC,IAAMC,UAAS,GADJ,mBAC5BC,EAD4B,KACtBC,EADsB,KAE7BC,EAAUV,IACVE,EAAQS,cACRC,EAAaC,YAAcX,EAAMY,YAAYC,KAAK,OAMlDC,EAAc,WAClBP,GAAQ,IAGV,OACE,6BACE,kBAACQ,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQN,WAAYgB,QAVpC,WACtBX,GAAQ,IAS4EY,MAAM,UAAUC,aAAW,QAC3G,kBAACC,EAAA,EAAD,OAEF,kBAACC,EAAA,EAAD,CACEZ,WAAYA,EACZJ,KAAMA,EACNiB,QAAST,EACTU,kBAAgB,2BAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,2BAA2B,UAC3C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,8HAIA,6BAEA,kBAACC,EAAA,EAAD,CAAMC,UAAU,SAASC,QAAQ,QACjCb,QAAS,kBAAMvE,OAAO2D,KAAK,yCAD3B,qBAIA,6BAAS,6BACT,kBAACuB,EAAA,EAAD,CAAME,QAAQ,SAAd,wBAKF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQf,QAASJ,EAAaK,MAAM,UAAUe,WAAS,GACrD,wCCtDZ,IAuGgBC,EAvEMC,aAhCP,SAACpC,GAAD,OAAkBC,YAAa,CAC5CoC,KAAM,CACJC,SAAU,GAEZC,cAAe,GAEfC,MAAO,CACLC,YAAazC,EAAM0C,QAAQ,IAE7BC,MAAO,CACLL,SAAU,GAEZM,KAAK,CACHC,eAAgB,QAElBC,SAAU,CACRC,OAAQ/C,EAAM+C,OAAOC,OAAS,EAC9B7B,MAAO,YAeWiB,CAAA,kDAMpB,WAAYa,GAAa,IAAD,8BACtB,cAAMA,IALRC,UAAY9C,IAAM+C,YAIM,EAHxBC,oBAGwB,IAFxBC,WAEwB,EAEtB,EAAKD,eAAgB,IAAIzH,EAAesH,EAAMrH,iBAC9C,EAAKwH,eAAevH,OAAQ,EAC5B,EAAKwH,MAAQ,CAAEb,MAAM,EAAGc,cAAa,EAAOpH,OAAM,EAAOT,MAAK,GAJxC,EANJ,gEAYC,IAAD,OACZrC,EAASb,KAAK2K,UAAUK,QAC9BhL,KAAK6K,eAAetG,KAAK1D,GAAS,kBAAM,EAAKoK,SAAS,CAAEF,cAAa,OACrE/K,KAAK6K,eAAeK,gBAAgB,SAAC1F,GACrB,UAAXA,EAAET,MACH,EAAKkG,SAAS,CAAChB,MAAMzE,EAAER,aAjBT,oCAoBNQ,GACZA,EAAE2F,kBACFnL,KAAK6K,eAAerE,YAtBF,kCAwBRhB,GACVA,EAAE2F,kBACFnL,KAAK6K,eAAelH,OAAS3D,KAAK6K,eAAelH,MACjD3D,KAAKiL,SAAS,CAACtH,MAAO3D,KAAK6K,eAAelH,UA3BxB,iCA6BT6B,GACTA,EAAE2F,kBACFnL,KAAK6K,eAAe3H,MAAQlD,KAAK6K,eAAe3H,KAChDlD,KAAKiL,SAAS,CAAC/H,KAAMlD,KAAK6K,eAAe3H,SAhCvB,6CAmClBlD,KAAK6K,eAAenH,YAAa,IAnCf,+BAqCV,IAAD,OACCuE,EAAYjI,KAAK0K,MAAjBzC,QACR,OACA,kBAAC,IAAMmD,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,WAAY,cAAeC,UAAW,SACvE,kBAACC,EAAA,EAAD,KACE,kBAAC9D,EAAD,MACA,kBAAC+D,EAAA,EAAD,CAAYnC,QAAQ,KAAKZ,MAAM,UAAUF,UAAWT,EAAQmC,OAC5D,kBAAC,IAAD,CAAMwB,GAAG,WAAWlD,UAAWT,EAAQoC,MACvC,kBAACsB,EAAA,EAAD,CAAYnC,QAAQ,KAAKZ,MAAM,UAAUF,UAAWT,EAAQmC,OAA5D,WADA,gBAGA,kBAACuB,EAAA,EAAD,CAAYnC,QAAQ,QAAQZ,MAAM,UAAUF,UAAWT,EAAQgC,OAA/D,UACUjK,KAAK8K,MAAMb,OAErB,kBAACzB,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQ+B,cAAerB,QAAS,SAACnD,GAAD,OAAO,EAAKqG,YAAYrG,IAAIoD,MAAM,UAAUC,aAAW,QACtH7I,KAAK8K,MAAMnH,MAAQ,kBAACmI,EAAA,EAAD,MAAwB,kBAACC,EAAA,EAAD,OAEhD,kBAACvD,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQ+B,cAAerB,QAAS,SAACnD,GAAD,OAAO,EAAKwG,cAAcxG,IAAIoD,MAAM,UAAUC,aAAW,QAC3H,kBAACoD,EAAA,EAAD,OAEF,kBAACzD,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQ+B,cAAerB,QAAS,SAACnD,GAAD,OAAO,EAAK0G,WAAW1G,IAAIoD,MAAM,UAAUC,aAAW,QACrH7I,KAAK8K,MAAM5H,KAAO,kBAACiJ,EAAA,EAAD,MAAgB,kBAACC,EAAA,EAAD,SAI3C,kBAACC,EAAA,EAAD,CAAU3D,UAAWT,EAAQsC,SAAUxC,MAAO/H,KAAK8K,MAAMC,cACrD,kBAACuB,EAAA,EAAD,CAAkB1D,MAAM,aAE5B,4BAAQO,GAAG,SAASoD,IAAKvM,KAAK2K,iBAjEd,GAAkC9C,IAAM2E,Y,gBCxCjDC,EAAb,WAeC,WAAY9L,GAA6E,IAAjE2K,EAAgE,uDAAjD,CAAC3F,EAAE,EAAIG,EAAE,GAAMgB,EAAkC,uDAAxB,CAAC3F,MAAM,EAAKD,OAAO,GAAK,yBAdrFP,UAcqF,OAbrF2K,cAaqF,OAZrFxE,UAYqF,OAXrF4F,SAAkB,EAWmE,KATrFC,MAAe,EASsE,KARrFC,MAAe,EAQsE,KAPrFC,aAAsB,EAO+D,KANxFC,YAAqB,EAMmE,KALrFC,iBAA0B,EAK2D,KAJrFC,OAAgB,EAIqE,KAFhFC,UAAuB,GAGxBjN,KAAKW,KAAOA,EACZX,KAAKsL,SAAWA,EAChBtL,KAAK8G,KAAOA,EAlBpB,wDAqBaoG,GACFA,EAAS3I,MAAM2I,EAAS3I,KAAKvE,MAChCA,KAAKiN,UAAU7H,KAAK8H,KAvB5B,4BA0BUC,EAAgBnM,EAA+B6F,GAAiC,IAAD,OACjF7G,KAAKiN,UAAUhI,SAAS,SAACjD,GAAD,uBAAQA,EAAEkF,aAAV,aAAQ,OAAAlF,EAAU,EAAMmL,EAAUnM,EAAK6F,QA3BvE,kCA6BgBuG,GAA8B,IAAD,OACrCpN,KAAKiN,UAAUhI,SAAS,SAACjD,GAAD,uBAAQA,EAAEmF,mBAAV,aAAQ,OAAAnF,EAAgB,EAAMoL,QA9B9D,mCAiCsB,IAAD,OACbpN,KAAKiN,UAAUhI,SAAS,SAACjD,GAAD,uBAAQA,EAAE6C,kBAAV,aAAQ,OAAA7C,EAAe,QAlCvD,sCAqCqBqL,GAAyB,IAAD,OACrCrN,KAAKiN,UAAUhI,SAAS,SAACjD,GAAD,uBAAQA,EAAEsL,uBAAV,aAAQ,OAAAtL,EAAoB,EAAMqL,UAtClE,KCCO,SAASE,EAAWC,GACvB,MAAO,CAAC7H,EAAE8H,KAAKC,MAAMF,EAAM7H,GAAIG,EAAE2H,KAAKC,MAAMF,EAAM1H,ICqB/C,SAAS6H,EAAQC,GACpB,OAAGA,EAAOjB,OAASiB,EAAOhB,MACf,CAACjH,EAAGiI,EAAOjB,MAAQc,KAAKI,IAAID,EAAOhB,OAAQ9G,EAAG8H,EAAOjB,MAAQc,KAAKK,IAAIF,EAAOhB,QAC5E,CAACjH,EAAE,EAAEG,EAAE,GCtBhB,SAASiI,EAAMC,EAAiBC,GACnC,IAAIC,EAAMF,EAAMlH,KAAK3F,MACjBgN,EAAMH,EAAMlH,KAAK5F,OACrB,IAAKgN,EAAMC,GAAO,EAOd,OAAOF,EAEX,IAAIG,EAAMH,EAAMnH,KAAK3F,MACjBkN,EAAMJ,EAAMnH,KAAK5F,OACrB,IAAKkN,EAAMC,GAAO,EACd,OAAOL,EAEX,IAAIM,EAAMN,EAAM1C,SAAS3F,EACrB4I,EAAMP,EAAM1C,SAASxF,EACzBoI,GAAOI,EACPH,GAAOI,EACP,IAAMC,EAAMP,EAAM3C,SAAS3F,EACrB8I,EAAMR,EAAM3C,SAASxF,EAS3B,OANIwI,EAAME,IAAKF,EAAME,GACjBD,EAAME,IAAKF,EAAME,GACjBP,GAJJE,GAAOI,KAIQN,EAAME,GACjBD,GAJJE,GAAOI,KAIQN,EAAME,GAGd,CAAE/C,SAAS,CAAC3F,EAAE2I,EAAKxI,EAAEyI,GAAKzH,KAAK,CAAC3F,MAFvC+M,GAAOI,EAE2CpN,OADlDiN,GAAOI,IAKJ,SAASG,GAAWV,EAAiBC,GAExC,IAAIU,EAAKX,EAAMlH,KAAK3F,MAChByN,EAAKZ,EAAMlH,KAAK5F,OAChB2N,EAAKZ,EAAMnH,KAAK3F,MAChB2N,EAAKb,EAAMnH,KAAK5F,OACpB,GAAI2N,GAAM,GAAKC,GAAM,GAAKH,GAAM,GAAKC,GAAM,EACvC,OAAO,EAEX,IAAMG,EAAKf,EAAM1C,SAAS3F,EACpBqJ,EAAKhB,EAAM1C,SAASxF,EACpBmJ,EAAKhB,EAAM3C,SAAS3F,EACpBuJ,EAAKjB,EAAM3C,SAASxF,EAM1B,OAJAgJ,GAAMI,EACNP,GAAMI,EACNH,GAAMI,IAHNH,GAAMI,GAKQA,GAAMJ,EAAKE,KAChBD,EAAKI,GAAMJ,EAAKE,KAChBL,EAAKI,GAAMJ,EAAKM,KAChBL,EAAKI,GAAMJ,EAAKM,GCvC7B,SAASC,GAAOC,EAAanP,GACzB,IAAMoP,EAAQD,EAAME,QAAQrP,EAAK,GAC7BoP,GAAS,GACTD,EAAMG,OAAOF,EAAO,G,IAIPG,G,kDAYjB,WAAY7O,EAAa8O,GAAmE,IAAD,EAAvCC,EAAuC,uDAAxB,CAACvO,MAAM,EAAKD,OAAO,GAAK,4BACvF,cAAMP,IAXVgP,SAAiB,CAAChK,EAAE,EAAGG,EAAE,GAUkE,EAT3F2J,gBAS2F,IAR3FnM,OAAiB,EAQ0E,EAP9FsM,YAAqB,EAOyE,EAN9FC,WAAoB,EAM0E,EAL9FH,eAK8F,IAHtFI,mBAA8B,GAGwD,EAFtFC,QAAmB,GAEmE,EAyJ9FC,MAAO,EAzJuF,EA0J9FC,UAAW,EAxJJ,EAAKR,WAAaA,EAClB,EAAKC,UAAYA,EAHsE,E,6DAK1EzP,M,uCAGA0F,EAAUG,M,sCAEdH,EAAUG,M,wCAGR0H,GACjB,OAAOxN,KAAK+P,QAAQG,QAAQ,SAACC,GAAD,ODSvB,SAAqB3C,EAAa/H,GACrC,OAAO+H,EAAM7H,GAAKF,EAAK6F,SAAS3F,GAAK6H,EAAM7H,EAAIF,EAAK6F,SAAS3F,EAAIF,EAAKqB,KAAK3F,OACpEqM,EAAM1H,GAAKL,EAAK6F,SAASxF,GAAK0H,EAAM1H,EAAIL,EAAK6F,SAASxF,EAAIL,EAAKqB,KAAK5F,OCX1CkP,CAAY5C,EAAO2C,Q,gCAG7CvC,GACT5N,KAAKqQ,gBAAgBzC,GACjBA,EAAOZ,SACVY,EAAOZ,OAAS,GA1DnB,SAAmBoC,EAAWpK,EAASsL,GACtC,IAAIC,EAAK,EACT,GAAGnB,EAAMvN,OAAO,EAEf,IADA,IAAI2O,EAAKpB,EAAMvN,OACT0O,EAAMC,GAAK,CAChB,IAAIC,EAAMhD,KAAKiD,OAAQH,EAAIC,GAAM,GAC3BG,EAAIL,EAAWlB,EAAMqB,GAAMzL,GACjC,GAAG2L,EAAG,EACLJ,EAAME,EAAI,MACL,MAAIE,EAAG,GAER,CACJJ,EAAME,EACN,MAHAD,EAAOC,GAOVrB,EAAMG,OAAOgB,EAAK,EAAGvL,GA0CpB4L,CAAO5Q,KAAK+P,QAASnC,GAAQ,SAACiD,EAAE7O,GAAH,OAAS6O,EAAE7D,OAAUhL,EAAEgL,UACpDY,EAAOkD,cAAgBlD,EAAOtC,SAC1BsC,EAAON,iBACVtN,KAAK8P,mBAAmB1K,KAAKwI,K,mCAGlBA,GAAgB,IAAD,EAC3B,UAAAA,EAAO/I,kBAAP,cAAA+I,GACS5N,KAAKsD,OACJN,QAAQC,IAAR,wBAA6B2K,EAAOjN,KAApC,cAA8CiN,EAAOtC,SAAS3F,EAA9D,aAAoEiI,EAAOtC,SAASxF,EAApF,MACJqJ,GAAOnP,KAAK+P,QAASnC,GACrBuB,GAAOnP,KAAK8P,mBAAoBlC,K,kCAInC5N,KAAK+P,QAAU,GAClB/P,KAAK8P,mBAAqB,K,kCAGZ1C,GACd,mEAAkBA,GAGlBpN,KAAK+Q,eAAe3D,K,qCAGHA,GAGjB,IAFM,IAAM4D,EAAK5D,EAAoB,IACzB6D,EAAqBjR,KAAK+P,QAAQmB,QACvCD,EAAUpP,QAAQ,CACxB,IAAM+L,EAAgBqD,EAAUE,MAChC,GAAIvD,EAAOlB,QAAX,CAKA,GAAIkB,EAAOjB,MAAO,CACjB,IAAMyE,EAAU,CAAC9F,SAASiC,EAAWK,EAAOtC,UAAWxE,KAAK8G,EAAO9G,MAC7DuK,EAAa1D,EAAQC,GACvB0D,EAAO1D,EAAOtC,SAAS3F,EAAI0L,EAAW1L,EAAIqL,EAAKhR,KAAK6P,WACpD0B,EAAO3D,EAAOtC,SAASxF,EAAIuL,EAAWvL,EAAIkL,EAAKhR,KAAK6P,WAGpD2B,GAAU,EACd,GAAIxR,KAAK4P,WAAY,CACpB,IAAIzO,EAAQnB,KAAK8G,KAAK3F,MAClBD,EAASlB,KAAK8G,KAAK5F,OACI,IAAxBlB,KAAK0P,UAAUvO,QACjBA,EAAOnB,KAAK0P,UAAUvO,MACtBD,EAASlB,KAAK0P,UAAUxO,QAGrBoQ,EAAO,GACVA,EAAOnQ,EAAQyM,EAAO9G,KAAK3F,MAC3BqQ,GAAU,GACAF,EAAO1D,EAAO9G,KAAK3F,MAAQA,IACrCmQ,EAAO,EACPE,GAAU,GAEPD,EAAO,GACVA,EAAOrQ,EAAS0M,EAAO9G,KAAK5F,OAC5BsQ,GAAU,GACAD,EAAO3D,EAAO9G,KAAK5F,OAASA,IACtCqQ,EAAO,EACPC,GAAU,GAGZ5D,EAAOkD,cAAgBM,EAAQ9F,SAC/BsC,EAAOtC,SAAW,CAAC3F,EAAE2L,EAAMxL,EAAEyL,GAE7B,IAAIE,EAAU,CAACnG,SAAUiC,EAAWK,EAAOtC,UAAWxE,KAAM8G,EAAO9G,MAC9D0K,IACJC,EAAU1D,EAAMqD,EAASK,IAEvB7D,EAAOd,YACT9M,KAAK0R,iBAAiBD,EAAS7D,GAC5BA,EAAOf,eACNY,KAAKkE,KAAK/D,EAAOf,aACjBe,EAAOjB,SAAWc,KAAKkE,KAAK/D,EAC7BjB,OACFiB,EAAOjB,MAAQ,EAEfiB,EAAOjB,MAAQiB,EAAOjB,MAAQiB,EAAOf,cAIrCe,EAAOzG,aACTyG,EAAOzG,YAAYiG,GACpB,IACCpN,KAAKqQ,gBAAgBzC,GACpB,MAAOgE,GACR5O,QAAQC,IAAR,qDAA0D2K,EAAOjN,KAAjE,cAA2EiR,IAC3EhE,EAAOlB,SAAQ,EAEZkB,EAAOlB,SACV1M,KAAK6R,aAAajE,QA9DlB5N,KAAK6R,aAAajE,M,uCAkEK6D,EAAmB7D,GAE5C,IAAIkE,EACJ,GAAGlE,EAAON,gBACT,IAAI,IAAI3L,EAAG,EAAGA,EAAG3B,KAAK+P,QAAQlO,OAAOF,IAAI,CACxC,IAAM0L,EAAcrN,KAAK+P,QAAQpO,GACjC,GAAIiM,IAAWP,GAAeA,EAAYP,YACrC4B,GAAW+C,EAASpE,GAAc,CACrCO,EAAON,gBAAgBD,GACvByE,EAAkBzE,EAClB,OAKAyE,IACHA,EAAkBlE,GAEnB,IAAI,IAAIjM,EAAG,EAAGA,EAAG3B,KAAK8P,mBAAmBjO,OAAOF,IAAI,CACnD,IAAM0L,EAAcrN,KAAK8P,mBAAmBnO,GAC5C,GAAIiM,IAAWP,GACVqB,GAAW+C,EAASpE,GAAc,CACrCA,EAAYC,gBAAiBM,GAC7BkE,EAAkBzE,EAClB,OAKEyE,EAAgBpF,SACpB1M,KAAK6R,aAAaC,K,4BAKd3E,EAAgBnM,EAA+B6F,GAE9CsG,EAAW,CAACxH,EAAGwH,EAASxH,EAAI3F,KAAK2P,SAAShK,EAAGG,EAAEqH,EAASrH,EAAE9F,KAAK2P,SAAS7J,GAC9E,6DAAYqH,EAAUnM,EAAK6F,GAC3B,IAJyF,EAIrFkL,EAAkB,EAJmE,cAKvE/R,KAAK+P,SALkE,IAKzF,IAAI,EAAJ,qBAA+B,CAAC,IAAxBnC,EAAuB,QAC9B,IAAIA,EAAOlB,QACV,MAAMtM,MAAM,mDAAqDwN,GAClE,IAAIoE,EAAMzE,EAAWK,EAAOtC,UACvBsC,EAAOb,kBACViF,EAAM,CAACrM,EAAGqM,EAAIrM,EAAIwH,EAASxH,EAAGG,EAAGkM,EAAIlM,EAAIqH,EAASrH,IAEjDkM,EAAIrM,EAAI3F,KAAK8G,KAAK3F,OAAS6Q,EAAIlM,EAAI9F,KAAK8G,KAAK5F,QAC3C0M,EAAO9G,KAAK3F,MAAQ6Q,EAAIrM,EAAI,GAC5BiI,EAAO9G,KAAK5F,OAAS8Q,EAAIlM,EAAI,IAGlC8H,EAAO1G,MAAM8K,EAAKhR,EAAK6F,GACvBkL,MAlBwF,8BAoBtF/R,KAAKsD,UACFtD,KAAKgQ,MAAQ,MAAQ,GACzBhQ,KAAKiQ,UAAapJ,EAClB7G,KAAKgQ,MAAO,GAEZhQ,KAAKiQ,WAAYpJ,EAElB7F,EAAIqG,UAAY,MAChBrG,EAAIiR,SAAJ,eAAqBxE,KAAKC,MAAM,KAAQ1N,KAAKiQ,YAAajQ,KAAKgQ,QAA/D,2BAAyFhQ,KAAK+P,QAAQlO,OAAtG,+BAAmIkQ,GAAqB,GAAI/R,KAAK8G,KAAK5F,OAAQ,O,iCAIrK6O,GAAoB,IAAD,OAC7B,IAAIA,IAAYA,EAAQlO,OACvB,MAAMzB,MAAM,sDAAD,OAAuDJ,KAAKW,KAA5D,MACTX,KAAKsD,OACPN,QAAQC,IAAR,sBAA2B8M,EAAQlO,OAAnC,qBAAsDkO,EAAQ,GAAGpP,KAAjE,MAEDoP,EAAQ9K,SAAS,SAACkL,GAAD,OAAO,EAAK+B,UAAU/B,Q,sCAKxBvC,GACf,GAAGA,EAAOtC,SAAS3F,EAAI,GAAKiI,EAAOtC,SAASxF,EAAI,EAC/C,MAAM1F,MAAM,2BAAD,OAA4BwN,EAAOtC,SAAS3F,EAA5C,aAAkDiI,EAAOtC,SAASxF,EAAlE,MACZ,GAA2B,IAAxB9F,KAAK0P,UAAUvO,OACjB,GAAGyM,EAAOtC,SAAS3F,GAAK3F,KAAK0P,UAAUvO,OAASyM,EAAOtC,SAASxF,GAAK9F,KAAK0P,UAAUxO,OACnF,MAAMd,MAAM,mBAAD,OAAoBwN,EAAOtC,SAAS3F,EAApC,aAA0CiI,EAAOtC,SAASxF,EAA1D,qBAAwE9F,KAAK0P,UAAUvO,MAAvF,YAAgGnB,KAAK0P,UAAUxO,OAA/G,WACP,GAAG0M,EAAOtC,SAAS3F,GAAK3F,KAAK8G,KAAK3F,OAASyM,EAAOtC,SAASxF,GAAK9F,KAAK8G,KAAK5F,OAC/E,MAAMd,MAAM,mBAAD,OAAoBwN,EAAOtC,SAAS3F,EAApC,aAA0CiI,EAAOtC,SAASxF,EAA1D,uBAA0E9F,KAAK8G,KAAK3F,MAApF,YAA6FnB,KAAK8G,KAAK5F,OAAvG,OAEZ,GAAG0M,EAAO9G,KAAK3F,OAAQ,GAAKyM,EAAO9G,KAAK5F,QAAU,EACjD,MAAMd,MAAM,0BAAD,OAA2BwN,EAAO9G,KAAK3F,MAAvC,aAAiDyM,EAAO9G,KAAK5F,OAA7D,MACZ,QAAsBiR,IAAjBvE,EAAOjB,YAAyCwF,IAAjBvE,EAAOhB,YACrBuF,IAAjBvE,EAAOjB,YAAyCwF,IAAjBvE,EAAOhB,MAC1C,MAAMxM,MAAM,gBAAD,OAAiBwN,EAAOjB,MAAxB,uBAA4CiB,EAAOhB,MAAnD,8C,GA/NqBH,GC9BtB2F,GAAb,WAKI,WAAYlS,GAA6D,IAArCmS,EAAoC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,yBAJ/DD,UAI+D,OAH/DC,aAG+D,OAF/DpS,WAE+D,OAD/D4G,UAC+D,EACpE9G,KAAKE,MAAQA,EACbF,KAAKqS,KAAOA,EACZrS,KAAKsS,QAAUA,EACftS,KAAK8G,KAAO,CAAC3F,MAAMsM,KAAKiD,MAAM1Q,KAAKE,MAAMiB,MAAMnB,KAAKsS,SAChDpR,OAAQuM,KAAKiD,MAAM1Q,KAAKE,MAAMgB,OAAOlB,KAAKqS,OAVtD,kDAYUlF,EAAgBnM,GAAmF,IAApD4L,EAAmD,uDAArC,EAAE2F,EAAmC,uDAAxB,EAAGC,EAAqB,uDAAP,EAC7F,GAAGD,EAAI,GAAKA,EAAMvS,KAAKqS,MAAQG,EAAS,GAAKA,EAASxS,KAAKsS,QACvD,MAAMlS,MAAM,mDAAD,OAAoDmS,EAApD,YAA2DC,EAA3D,MACf,IAAMC,EAAIzS,KAAK8G,KAAK3F,MAAOuR,EAAI1S,KAAK8G,KAAK5F,OAOzC,GANG0L,IACC5L,EAAI2R,UAAUxF,EAASxH,EAAI8M,EAAI,EAAKtF,EAASrH,EAAG4M,EAAI,GACpD1R,EAAI4R,OAAOhG,GACXO,EAASxH,EAAI,EAAI8M,EAAI,EACrBtF,EAASrH,EAAI,EAAI4M,EAAI,GAEL,IAAjB1S,KAAKsS,SAA+B,IAAdtS,KAAKqS,KAC1BrR,EAAII,UAAUpB,KAAKE,MAAOiN,EAASxH,EAAGwH,EAASrH,EAAG2M,EAAIC,OACtD,CACA,IAAMG,EAAOpF,KAAKiD,MAAM1Q,KAAKE,MAAMiB,QAAUqR,EAAO,GAAGxS,KAAKsS,UACtDQ,EAAOrF,KAAKiD,MAAM1Q,KAAKE,MAAMgB,SAAWqR,EAAI,GAAGvS,KAAKqS,OAC1DrR,EAAII,UAAUpB,KAAKE,MAAO2S,EAAMC,EAAML,EAAGC,EAAGvF,EAASxH,EAAGwH,EAASrH,EAAG2M,EAAGC,GAExE9F,GACC5L,EAAI+R,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,KA9B5C,iCAkCQ,OAAO/S,KAAKqS,KAAKrS,KAAKsS,YAlC9B,KCIaU,GAAb,WAOC,WAAYC,GAA0B,yBANnCA,iBAMkC,OALlCC,gBAAyB,GAKS,KAJrCC,IAAa,EAIwB,KAHlCC,aAAsB,EAGY,KAFrCR,QAAiB,EAGhB5S,KAAKiT,YAAcA,EARrB,iDAUSrF,GACDA,EAAO9G,KAAO9G,KAAKiT,YAAYnM,OAXvC,4BAaU8G,EAAeT,EAAgBnM,EAA+B6F,GACtE,IAAIwM,EACJ,GAAGrT,KAAKkT,iBAAmD,IAAhClT,KAAKiT,YAAYK,WAAiB,CAC5D,IAAMC,EAAe,EAAMvT,KAAKkT,gBAChCG,EAAQ5F,KAAKiD,MAAQ1Q,KAAKmT,IAAII,EAAiBvT,KAAKiT,YAAYK,iBAEhED,EAAO,EAER,IAAMb,EAAS/E,KAAKiD,MAAM2C,EAAQrT,KAAKiT,YAAYX,SAAW,EACxDC,EAAM9E,KAAKiD,MAAO2C,EAAMrT,KAAKiT,YAAYX,SAAY,EACrD1F,EAASgB,EAAOhB,MAASgB,EAAOhB,MAAQ,EAC9C5M,KAAKiT,YAAY/L,MAAMiG,EAASnM,EAAI4L,EAAM2F,EAAIC,KAxBhD,kCA2Ba5E,EAAeR,GAC1B,IAAM4D,EAAK5D,EAAoB,IAC/BpN,KAAKmT,KAAOnC,EACThR,KAAKoT,aACHpT,KAAKmT,IAAMnT,KAAKiT,YAAYK,WAAatT,KAAKkT,kBAGjDtF,EAAOlB,SAAU,OAlCrB,KCKA,SAAS8G,GAAWlI,EAAgBxE,EAAW2M,GA6B3C,MA5Ba,CACT9S,KAAK,OACL2K,WACAxE,OACA4F,SAAQ,EACRxF,MAAO,SAASiG,EAAgBnM,EAA+B6F,GAC3D7F,EAAIqG,UAAa,kBACjBrG,EAAIsG,SAASgE,EAAS3F,EAAG2F,EAASxF,EAAGgB,EAAK3F,MAAO2F,EAAK5F,SAE1DoM,gBATS,SASOD,GACZ,IAAMV,EAAQgB,EAAQN,GACnBoG,GACI9G,EAAMhH,EAAE,EACR0H,EAAY/B,SAAS3F,EAAI3F,KAAKsL,SAAS3F,EAAI0H,EAAYvG,KAAK3F,MAE3DkM,EAAY/B,SAAS3F,EAAI3F,KAAKsL,SAAS3F,EAAI3F,KAAK8G,KAAK3F,MACzDkM,EAAY/B,SAASxF,EAAIuH,EAAYyD,cAAehL,EACpDuH,EAAYT,MAASa,KAAKiG,GAAKrG,EAAYT,MAA+B,IAArBa,KAAKkG,SAAW,MAElEhH,EAAM7G,EAAE,EACPuH,EAAY/B,SAASxF,EAAI9F,KAAKsL,SAASxF,EAAIuH,EAAYvG,KAAK5F,OAE5DmM,EAAY/B,SAASxF,EAAI9F,KAAKsL,SAASxF,EAAI9F,KAAK8G,KAAK5F,OACzDmM,EAAY/B,SAAS3F,EAAI0H,EAAYyD,cAAenL,EACpD0H,EAAYT,OAAU,EAAMS,EAAYT,MAA+B,IAArBa,KAAKkG,SAAW,OAO3E,IAAMC,GAAb,iDAEI3P,cAAgB,CAAC,CAACtD,KAAK,OAAQH,IAAI,2CAFvC,KAGIuD,cAAgB,CAAC,CAACpD,KAAK,OAAQH,IAAI,mCAClB,CAACG,KAAK,QAASH,IAAI,qCAJxC,iDAMMiP,GACJ,IAAMjL,EAAQ,IAAIgL,GAAM,gBAAgBC,GAClCA,EAAWjL,MAAQA,EACnB,IAAIyF,EAAO,EACXwF,EAAWoE,aAAa,CAAC9O,KAAK,QAASC,MAAOiF,IAC9CzF,EAAMyB,iBAAmB,SAASN,EAAUG,GACxC,IAAMiK,EAAUvL,EAAMsP,kBAAkB,CAACnO,IAAEG,MACxCiK,EAAQlO,OACPkO,EAAQG,QAAQ,SAACC,GAAD,OAAOA,EAAErD,cAAa7H,SAAS,SAACkL,GAC5C3L,EAAMqN,aAAa1B,GACnBV,EAAWoE,aAAa,CAAC9O,KAAK,QAASC,MAAOiF,MAC9CwF,EAAWhM,aAAaV,KAAK,YAGjC0M,EAAWoE,aAAa,CAAC9O,KAAK,QAASC,MAAOiF,MAC9CwF,EAAWhM,aAAaV,KAAK,WAGrCyB,EAAMoL,YAAa,EACnBpL,EAAMyC,gBAAkB,SAASjG,GACzBA,EAAIqG,UAAY,QAChBrG,EAAIsG,SAAS,EAAG,EAAG9C,EAAMsC,KAAK3F,MAAOqD,EAAMsC,KAAK5F,SAGxD,IAAM6S,EAAKvP,EAAMsC,KAGjBtC,EAAM0N,UAAWsB,GAAW,CAAC7N,EAAE,EAAEG,EAAE,GAAG,CAAC3E,MAAM4S,EAAG5S,MAF/B,EAE8CD,OAF9C,IAEgE,IACjFsD,EAAM0N,UAAWsB,GAAW,CAAC7N,EAAE,EAAEG,EAAEiO,EAAG7S,OAHrB,GAGsC,CAACC,MAAM4S,EAAG5S,MAAMD,OAHtD,IAGwE,IACzFsD,EAAM0N,UAAWsB,GAAW,CAAC7N,EAAE,EAAEG,EAAE,GAAG,CAAC3E,MAJtB,EAIqCD,OAAO6S,EAAG7S,OAJ/C,IAIiE,IAClFsD,EAAM0N,UAAWsB,GAAW,CAAC7N,EAAEoO,EAAG5S,MALjB,EAKgC2E,EAAE,GAAG,CAAC3E,MALtC,EAKqDD,OAAO6S,EAAG7S,OAL/D,IAKiF,IAOlG,IAJA,IAAMhB,EAAQuP,EAAWjM,eAAewQ,kBAAkB,QACpDf,EAAc,IAAIb,GAAYlS,EAAO,EAAG,GACxC+T,EAAShB,EAAYnM,KAAK3F,MAAM,EAChC+S,EAAQ,SAACC,EAAYC,GAAb,OAA4B3G,KAAKkG,UAAYS,EAAID,GAAOA,GAC9DxO,EAAE,EAAGA,EAAE,GAAGA,IAAI,CAClB,IAAM0O,EAAO,IAAI5H,EAAc,OAAQ,CAAC9G,EAAGuO,EAAKH,EAAG5S,MAAwB,GAAjB8S,EAb7C,GAaiEA,EAbjE,GAakFnO,EAAEoO,EAAKH,EAAG7S,OAAyB,GAAjB+S,EAbpG,GAawHA,EAbxH,KAcbI,EAAK3H,SAAU,EACf2H,EAAK1H,MAAwB,IAAhBc,KAAKkG,SAAe,IACjCU,EAAKzH,MAAQa,KAAKkG,SAAWlG,KAAKiG,GAAI,EACtCW,EAAKrH,OAAyB,GAAhBS,KAAKkG,SAAe,EAClCU,EAAKvH,YAAa,EAClBuH,EAAKzP,YAAY,IAAIoO,GAAoBC,IACzCoB,EAAKvN,KAAO,CAAC3F,MAAOkT,EAAKvN,KAAK3F,MAAO,EAAGD,OAAQmT,EAAKvN,KAAK5F,OAAQ,GAClEsD,EAAM0N,UAAUmC,QApD5B,KCvCO,SAASC,GAAuB7E,GACnC,IAAMjL,EAAQ,IAAIgL,GAAM,aAAaC,GACrCA,EAAWjL,MAAQA,EAEnBiL,EAAWoE,aAAa,CAAC9O,KAAK,QAASC,MAD5B,IAEXR,EAAMoL,YAAa,EACnBpL,EAAMyC,gBAAkB,SAASjG,GACzBA,EAAIqG,UAAY,QAChBrG,EAAIsG,SAAS,EAAG,EAAG9C,EAAMsC,KAAK3F,MAAOqD,EAAMsC,KAAK5F,SCJrD,SAA2BuO,EAA2BO,GAOzD,IANA,IAAMxL,EAAQiL,EAAWjL,MACnBuP,EAAKvP,EAAMsC,KACX5G,EAAQuP,EAAWjM,eAAewQ,kBAAkB,YACpDf,EAAc,IAAIb,GAAYlS,EAAO,EAAG,IACxCgU,EAAQ,SAACK,EAAaH,GAAd,OAA6B3G,KAAKkG,UAAYS,EAAIG,GAAQA,GAEhE5O,EAAE,EAAGA,EAAEqK,EAAMrK,IAAI,CACrB,IAAMkL,EAAI,IAAIpE,EAAc,WAAY,CAAC9G,EAAGuO,EAAKH,EAAG5S,MAF7C,SAE6D2E,EAAEoO,EAAKH,EAAG7S,OAFvE,WAGP2P,EAAEnE,SAAU,EACZmE,EAAElE,MAAwB,IAAhBc,KAAKkG,SAAe,GAC9B9C,EAAEjE,MAAQa,KAAKkG,SAAWlG,KAAKiG,GAAI,EACnC7C,EAAE7D,QAAU,EACZ6D,EAAE/D,YAAa,EACf+D,EAAEjM,YAAY,IAAIoO,GAAoBC,IACtCpC,EAAE/J,KAAO,CAAC3F,MAAO0P,EAAE/J,KAAK3F,MAAOD,OAAQ2P,EAAE/J,KAAK5F,QAC9CsD,EAAM0N,UAAUrB,IDTpB2D,CAAkB/E,EAAY,IER3B,IAAMgF,GAAb,iDAEIxQ,cAAgB,CAAC,CAACtD,KAAK,WAAYH,IAAI,2CAF3C,KAGIuD,cAAgB,CAAC,CAACpD,KAAK,OAAQH,IAAI,mCAClB,CAACG,KAAK,QAASH,IAAI,qCAJxC,iDAMMiP,GACE6E,GAAuB7E,OAP/B,K,qECIMlI,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrCiN,OAAQ,CACJpJ,SAAU,YAEdqJ,WAAS,GACLC,UAAWnN,EAAM0C,QAAQ,GACzB0K,aAAcpN,EAAM0C,QAAQ,GAC5B2K,QAASrN,EAAM0C,QAAQ,IAHlB,eAIJ1C,EAAMY,YAAY0M,GAAG,IAAyB,EAAnBtN,EAAM0C,QAAQ,IAAU,CAClDyK,UAAWnN,EAAM0C,QAAQ,GACzB0K,aAAcpN,EAAM0C,QAAQ,GAC5B2K,QAASrN,EAAM0C,QAAQ,KAPpB,2BASK,QATL,GAWTL,KAAM,CACFkL,SAAU,IACVH,aAAcpN,EAAM0C,QAAQ,IAEhC8K,MAAO,CACH/T,OAAQ,KAEZmJ,KAAK,CACDC,eAAgB,QAEpB4K,WAAW,CACPC,WAAY1N,EAAM0C,QAAQ,QAI1B,SAASiL,KACb,IAAMnN,EAAUV,KAEhB,OAEI,kBAAC,IAAM6D,SAAP,KACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,WAAW1C,MAAM,UAAUF,UAAWT,EAAQyM,QAC/D,kBAAChJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYnC,QAAQ,KAAKZ,MAAM,UAAUyM,QAAM,GAA/C,aAKJ,kBAACC,GAAA,EAAD,CAAK/L,UAAU,MAAMgM,SAAS,WAC5B,kBAACC,GAAA,EAAD,CAAMb,WAAS,EAACc,WAAW,SAASC,QAAU,SAASC,UAAU,SAASjN,UAAWT,EAAQ0M,WACzF,kBAACiB,GAAA,EAAD,CAAMlN,UAAWT,EAAQ6B,MACrB,kBAAC,IAAD,CAAM8B,GAAG,gBAAgBlD,UAAWT,EAAQoC,MACxC,kBAACwL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIpN,UAAWT,EAAQgN,MACnB/U,MAAM,0CACNkK,MAAM,uBAEV,kBAAC2L,GAAA,EAAD,KACI,kBAACpK,EAAA,EAAD,CAAYqK,cAAY,EAACxM,QAAQ,KAAKD,UAAU,MAAhD,sBAGA,kBAACoC,EAAA,EAAD,CAAYnC,QAAQ,QAAQZ,MAAM,gBAAgBW,UAAU,KAA5D,iFAQhB,kBAACqM,GAAA,EAAD,CAAMlN,UAAWT,EAAQ6B,MACrB,kBAAC,IAAD,CAAM8B,GAAG,iBAAiBlD,UAAWT,EAAQoC,MACzC,kBAACwL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIpN,UAAWT,EAAQgN,MACnB/U,MAAM,8CACNkK,MAAM,mBAEV,kBAAC2L,GAAA,EAAD,KACI,kBAACpK,EAAA,EAAD,CAAYqK,cAAY,EAACxM,QAAQ,KAAKD,UAAU,MAAhD,kBAGA,kBAACoC,EAAA,EAAD,CAAYnC,QAAQ,QAAQZ,MAAM,gBAAgBW,UAAU,KAA5D,oFAOhB,kBAAC,IAAD,CAAYA,UAAU,SAASC,QAAQ,QAAQd,UAAWT,EAAQiN,WACpEvM,QAAS,kBAAMvE,OAAO2D,KAAK,yCADzB,wBCpFG,SAASkO,KACtB,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,kBACZ,kBAAC,EAAD,CAAe7S,gBAAiB,IAAIoR,MAEpC,kBAAC,IAAD,CAAOyB,KAAK,iBACZ,kBAAC,EAAD,CAAe7S,gBAAiB,IAAIuQ,MAEpC,kBAAC,IAAD,CAAOsC,KAAK,YACV,kBAACd,GAAD,SCXQe,QACW,cAA7B/R,OAAO+I,SAASiJ,UAEe,UAA7BhS,OAAO+I,SAASiJ,UAEhBhS,OAAO+I,SAASiJ,SAASC,MACvB,2D,mBCGS5O,GAlBD6O,aAAe,CAC3BC,WAAY,CACVC,WAAY,eAEZC,UAAW,CAEPC,eAAgB,CACd,UAAW,CACTC,KAAM,CACFxV,MAAO,OACPD,OAAQ,OACR0V,OAAQ,UCJxBC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAetP,MAAOA,IAEpB,kBAACuP,EAAA,EAAD,MACA,kBAACf,GAAD,OAEFnV,SAASmW,cAAc,UFmHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA5F,GACL5O,QAAQ4O,MAAMA,EAAM6F,c","file":"static/js/main.b3671b43.chunk.js","sourcesContent":["\nexport interface PreloadImage{\n    name:string;\n    src:string;\n}\n\n\nfunction makeTransparent(image: HTMLImageElement):HTMLImageElement  {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n    canvas.height = image.height;\n    canvas.width = image.width;\n    ctx.drawImage(image,0,0);\n    const imgd = ctx.getImageData(0, 0, image.width, image.height);\n    const pix = imgd.data;\n    const newColor = {r:0,g:0,b:0, a:0};\n    let top:number[]\n    for (let i = 0, n = pix.length; i <n; i += 4) {\n        const r = pix[i], g = pix[i+1],b = pix[i+2];\n        if(i===0){\n            top = [r,g,b];\n        }\n        if(r === top![0] && g === top![1] && b === top![2]){ \n            // Change the white to whatever.\n            pix[i] = newColor.r;\n            pix[i+1] = newColor.g;\n            pix[i+2] = newColor.b;\n            pix[i+3] = newColor.a;\n        }\n    }\n    ctx.putImageData(imgd, 0,0);\n    const output = document.createElement('img');\n    output.src = canvas.toDataURL('image/png');\n    return output;\n}\n\n\nexport class ImagePreloader{\n    imageCache: Map<string,HTMLImageElement> = new Map();\n    loadsCompleted:number =0;\n    nLoads:number = 0;\n\n    private loadCallback?:() => void;\n\n    registerCallback(callback:() => void  ){\n        if(this.loadsCompleted === this.nLoads)\n            callback();\n        this.loadCallback = callback;\n    }\n    \n    getImageFromCache(key:string):HTMLImageElement{\n        const image = this.imageCache.get(key);\n        this.nLoads++;\n        if(!image)\n            throw Error(\"unable to load image: \" + key);\n        return image;\n    }\n    \n    preLoadImages(images:PreloadImage[]):void{\n        \n        for(let des of images){\n            const image = new Image();\n            this.nLoads++;\n            image.src = des.src;\n            image.onload = this._createOnLoad(image, des.name);\n        }\n    }\n    private _createOnLoad(image:HTMLImageElement, key:string){\n        return () => {\n            const newImage = makeTransparent(image);\n            newImage.onload = () => {\n                this.imageCache.set(key, newImage);\n                if(++this.loadsCompleted === this.nLoads && this.loadCallback){\n                    this.loadCallback();\n                }\n            }\n        };\n    }\n}\n\n//export var __IMAGEPRELOADER__:ImagePreloader = new ImagePreloader();\n","import { Howl, Howler } from 'howler';\n\n\nexport interface PreloadSoundEffect{\n    name:string;\n    src:string;\n}\n\nexport default class SoundEffects {\n    sounds:Map<string, Howl> = new Map();\n    rate:number = 1.0;\n\n    private _mute:boolean = false;\n\n  constructor (effectPreloads:PreloadSoundEffect[]) {\n    for(let effect of effectPreloads )\n        this.sounds.set(effect.name, new Howl({src:effect.src,preload: true}) );\n    this.rate = 1.0;\n    this._mute = false;\n  }\n\n  play (key:string) {\n    const sound = this.sounds.get(key);\n    if(sound){\n        sound.rate(this.rate);\n        sound.play();\n    }else{\n        console.log(`Sound not found! ${key}`);\n    }\n  }\n\n  get mute ():boolean { return this._mute; }\n\n  set mute (mute:boolean) {\n    Howler.mute(mute);\n    this._mute = mute;\n  }\n}\n","import Scene from './Scene';\nimport { ImagePreloader } from './util/ImagePreloader';\nimport { GameInitializer } from './GameInitializer';\nimport SoundEffects from './util/SoundEffects';\nimport { debug } from 'console';\n\nexport interface GameEvent{\n    type:string;\n    value:any;\n}\n\nexport interface HandleGameEvent{\n    (event:GameEvent):void;\n}\n\n\nexport class GameController{\n\n    debug: boolean = false;\n    keysPressed: Map<string, boolean> = new Map();\n    imagePreloader:ImagePreloader;\n    soundEffects:SoundEffects;\n    canvas?:HTMLCanvasElement;\n    isShutdown:boolean = false;\n    pause:boolean = false;\n    _mute:boolean = false;\n\n    private readyCallback?: () => void;\n    private _scene?: Scene;\n    private gameInitializer:GameInitializer;\n    private gameEventListeners:HandleGameEvent[] = [];\n    constructor(gameInitializer:GameInitializer){\n        this.gameInitializer = gameInitializer;\n        this.soundEffects = new SoundEffects(gameInitializer.preloadSounds || []);\n        this.imagePreloader = new ImagePreloader();\n        this.imagePreloader.preLoadImages(gameInitializer.preloadImages);\n    }\n\n    init(canvas:HTMLCanvasElement, readyCallback: () => void) {\n        this.readyCallback = readyCallback;\n        this.canvas = canvas;  \n        this.imagePreloader.registerCallback( ()=>{  this._handleImagesLoaded()});\n    }\n\n    restart(){\n        const canvas = this.canvas!;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.gameInitializer.init(this);\n        if(!this.scene)\n            throw Error(\"Game Initializer must set scene.\");\n    }\n\n    transition(transitionScene: Scene, newScene: Scene) {\n        const that = this;\n        transitionScene.addBehavior({\n            handleKill() {\n                that.scene = newScene;\n            }\n        });\n        if (this.scene !== transitionScene)\n            this.scene = transitionScene;\n    }\n\n    set scene(scene: Scene) {\n        if (this.debug)\n            console.log(`SetScene: ${scene.name}`);\n        scene.debug = this.debug;\n        const canvas = this.canvas;\n        scene.size = {width:canvas!.width, height:canvas!.height};\n        this._scene = scene;\n    }\n    get scene(): Scene {\n        return this._scene!;\n    }\n\n    publishEvent(event:GameEvent){\n        if(this.debug)\n            console.log(`Publish Game Event: {${event.type}, ${event.value}}`);\n        this.gameEventListeners.forEach( (handler) => handler(event));\n    }\n\n    subscribeEvent(gameEventListener:HandleGameEvent){\n        this.gameEventListeners.push(gameEventListener);\n    }\n    set mute(mute:boolean){\n        this._mute = mute;\n        this.soundEffects.mute = mute;\n    }\n    get mute(){\n        return this._mute;\n    }\n    private _handleImagesLoaded(){\n        const that = this;\n        const canvas = this.canvas!;\n        const keyDown = (event:KeyboardEvent) => that.keysPressed.set(event.key, true);\n        const keyUp = (event:KeyboardEvent) => that.keysPressed.set(event.key, true);\n        const mouseDown = (e:MouseEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const x = e.clientX - rect.left, y = e.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`MouseDown Event: (${x},${y})`);\n            if(!that.pause){\n                that.scene.handleMouseClick(x,y)\n            }\n        };\n        const touchMove = (e:TouchEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            const x = touch.clientX - rect.left, y = touch.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`TouchMove Event: (${x},${y})`);\n            if(!that.pause){\n                that.scene.handleTouchMove(x,y);\n            }\n        };\n        \n        document.addEventListener('keydown', keyDown);\n        document.addEventListener('keyup',keyUp);\n        canvas.addEventListener('mousedown', mouseDown);\n        canvas.addEventListener(\"touchmove\", touchMove, false);\n\n        let lastTime = 0;\n        this.restart();\n        \n        function loop(time: number) {\n            if(that.isShutdown){\n                if(that.debug)\n                    console.log(\"shutting down game controller.\");\n                document.removeEventListener('keydown', keyDown);\n                document.removeEventListener('keyup',keyUp);\n                canvas.removeEventListener('mousedown', mouseDown);\n                canvas.removeEventListener(\"touchmove\", touchMove, false);\n                return;\n            }\n            let timeSinceLastAnimation = (!lastTime) ? 0: time - lastTime;\n            lastTime = time;\n            if(timeSinceLastAnimation > 100 || that.pause){\n                //assume animation thread was paused due to moving off window/browser\n                timeSinceLastAnimation = 0;\n            }\n            const ctx = canvas.getContext('2d')!;\n            const size = {width:canvas.width, height: canvas.height};\n            if (size.width !== window.innerWidth || size.height !== window.innerHeight) {\n                // If window size is changed this is called to resize the canvas\n                // It is not called via the resize event as that can fire to often an\n                // debounce makes it feel sluggish so is called from main loop.\n                that.restart();\n            }\n\n            that.keysPressed.forEach((value, key) => that.scene.handleKeyPressed(key));\n\n            ctx.save(); //Freeze redraw\n\n            that.paintBackground(ctx);\n            that.scene.paint({x:0,y:0}, ctx, timeSinceLastAnimation);\n            that.scene.updateModel(timeSinceLastAnimation);\n\n            ctx.restore();//now do redraw\n\n            requestAnimationFrame(loop);\n        }\n        requestAnimationFrame(loop);\n        this.readyCallback!();\n    }\n\n    private paintBackground(ctx: CanvasRenderingContext2D) {\n        if(this.scene.paintBackground)\n            this.scene.paintBackground(ctx);\n        else{\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.scene.size.width, this.scene.size.height);\n        }\n    }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { IconButton, Link } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\ninfoButton: {\n    //marginRight: theme.spacing(1),\n  },\n})\n);\n\nexport default function InfoDialog() {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton edge=\"start\" className={classes.infoButton} onClick={handleClickOpen} color=\"primary\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Cicles\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          A simple 2D game library for JavaScript to teach my kids programming.   \n          A demo space game implemented using the library.\n        \n          <br></br>\n          \n          <Link component=\"button\" variant=\"body2\"\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </Link>\n          <br></br><br></br>\n          <Link variant=\"body2\">\n          nickzinn@gmail.com\n          </Link>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            <b>CLOSE</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './GameComponent.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PauseCircleOutline, PlayCircleOutline, Refresh, VolumeUp, VolumeOff } from '@material-ui/icons';\nimport { GameController} from '../gamelib/GameController';\nimport { CircularProgress, createStyles, Theme, WithStyles, withStyles, Backdrop } from '@material-ui/core';\nimport InfoDialog from './InfoDialog';\nimport { GameInitializer } from '../gamelib/GameInitializer';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  controlButton: {\n  },\n  score: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link:{\n    textDecoration: 'none'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n  gameInitializer:GameInitializer;\n}\n\ninterface IState{\n  score:number;\n  imagesLoaded:boolean;\n  pause:boolean;\n  mute:boolean;\n}\n\nconst GameComponent = withStyles(styles)( class extends React.Component<Props> {\n \n  canvasRef = React.createRef<HTMLCanvasElement>();\n  gameController:GameController;\n  state:IState;\n\n  constructor(props:Props){\n    super(props);\n    this.gameController= new GameController(props.gameInitializer);\n    this.gameController.debug = true;\n    this.state = { score:0, imagesLoaded:false, pause:false, mute:false};\n  }\n  componentDidMount() { \n    const canvas = this.canvasRef.current;\n    this.gameController.init(canvas!, () => this.setState({ imagesLoaded:true }));\n    this.gameController.subscribeEvent( (e) => {\n      if(e.type === 'score')\n        this.setState({score:e.value});\n    })\n  }\n  handleRestart(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.restart();\n  }\n  handlePause(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.pause = !this.gameController.pause;\n    this.setState({pause: this.gameController.pause});\n  }\n  handleMute(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.mute = !this.gameController.mute;\n    this.setState({mute: this.gameController.mute});  \n  }\n  componentWillUnmount(){\n    this.gameController.isShutdown = true;\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n    <React.Fragment>\n      <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar>\n          <InfoDialog></InfoDialog>\n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\n          <Link to=\"/circles\" className={classes.link}> \n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>Circles</Typography>           </Link>\n          </Typography>\n          <Typography variant=\"body1\" color=\"primary\" className={classes.score}>\n            Score: {this.state.score}\n          </Typography>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handlePause(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.pause ? <PlayCircleOutline /> : <PauseCircleOutline />}\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleRestart(e)} color=\"primary\" aria-label=\"menu\">\n            <Refresh />\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleMute(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.mute ? <VolumeOff /> : <VolumeUp />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Backdrop className={classes.backdrop} open={!this.state.imagesLoaded } >\n          <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <canvas id='Canvas' ref={this.canvasRef} />\n    </React.Fragment>\n  );\n  }\n});\n\nexport  default GameComponent;","import { Point } from \"../types/Point\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Size } from \"../types/Size\";\nimport { Behavior } from \"../types/Behavior\";\n\nexport class DefaultSprite implements Sprite{\n    name:string;\n    position:Point;\n    size:Size;\n    isAlive:boolean = true;\n\t\n    speed:number = 0.0;\n    angle:number = 0.0;\n    acceleration:number = 0.0;\n\tcanCollide:boolean = false;\n    isFixedPosition:boolean = false;\n    zOrder:number = 0;\n\t\n\tprivate behaviors:Behavior[] = [];\n\t\n\tconstructor(name:string,position:Point={x:0.0,y:0.0}, size:Size={width:0.0, height:0.0}){\n        this.name = name;\n        this.position = position;\n        this.size = size;\n\t}\n\t\n\taddBehavior(behavior:Behavior){\n        if(behavior.init) behavior.init(this);\n        this.behaviors.push(behavior);\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n        this.behaviors.forEach( (b) =>  b.paint?.(this, location, ctx, timeSinceLastAnimation));\n    }\n    updateModel(timeSinceLastUpdate: number) {\n        this.behaviors.forEach( (b) =>  b.updateModel?.(this, timeSinceLastUpdate));\n    }\n    \n    handleKill():void{\n        this.behaviors.forEach( (b) =>  b.handleKill?.(this));\n    }\n    \n    handleCollision?(otherSprite:Sprite):void{\n        this.behaviors.forEach( (b) =>  b.handleCollision?.(this, otherSprite));\n    }\n}","\nexport interface Point{\n    x:number;\n    y:number;\n}\n\nexport function pointAsInt(point:Point): Point{\n    return {x:Math.round(point.x), y:Math.round(point.y)};\n}","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Sprite{\n    name:string;\n    position:Point;\n    size:Size;\n    isAlive:boolean;\n    speed?: number;\n    angle?: number;\n    acceleration?: number;\n    priorPosition?:Point;\n    zOrder?:number\n\n    //optional properties\n\tcanCollide?: boolean;\n\tisFixedPosition?: boolean;\n\t\n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void;\n\n    updateModel?(timeSinceLastUpdate: number):void;\n\t\t\n\thandleKill?():void;\n    \n    handleCollision?(otherSprite:Sprite):void;\n    \n}\n\nexport function xySpeed(sprite:Sprite): Point{\n    if(sprite.speed && sprite.angle)\n        return {x: sprite.speed * Math.cos(sprite.angle), y: sprite.speed * Math.sin(sprite.angle)};\n    else return {x:0,y:0};\n}\n\n\nexport function centerPosition(sprite:Sprite): Point{\n    return {x: sprite.position.x + sprite.size.width/2, y: sprite.position.y + sprite.size.height/2};\n}\n\n","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Rectangle{\n    position:Point;\n    size:Size;\n\n}\n\nexport function union(rect1:Rectangle, rect2:Rectangle):Rectangle{\n    let tx2 = rect1.size.width;\n    let ty2 = rect1.size.height;\n    if ((tx2 | ty2) < 0) {\n        // This rectangle has negative dimensions...\n        // If r has non-negative dimensions then it is the answer.\n        // If r is non-existant (has a negative dimension), then both\n        // are non-existant and we can return any non-existant rectangle\n        // as an answer.  Thus, returning r meets that criterion.\n        // Either way, r is our answer.\n        return rect2;\n    }\n    let rx2 = rect2.size.width;\n    let ry2 = rect2.size.height;\n    if ((rx2 | ry2) < 0) {\n        return rect1;\n    }\n    let tx1 = rect1.position.x;\n    let ty1 = rect1.position.y;\n    tx2 += tx1;\n    ty2 += ty1;\n    const rx1 = rect2.position.x;\n    const ry1 = rect2.position.y;\n    rx2 += rx1;\n    ry2 += ry1;\n    if (tx1 > rx1) tx1 = rx1;\n    if (ty1 > ry1) ty1 = ry1;\n    if (tx2 < rx2) tx2 = rx2;\n    if (ty2 < ry2) ty2 = ry2;\n    tx2 -= tx1;\n    ty2 -= ty1;\n    return { position:{x:tx1, y:ty1},size:{width:tx2, height:ty2}};\n\n}\n\nexport function intersects(rect1:Rectangle, rect2:Rectangle):boolean{\n\n    let tw = rect1.size.width;\n    let th = rect1.size.height;\n    let rw = rect2.size.width;\n    let rh = rect2.size.height;\n    if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\n        return false;\n    }\n    const tx = rect1.position.x;\n    const ty = rect1.position.y;\n    const rx = rect2.position.x;\n    const ry = rect2.position.y;\n    rw += rx;\n    rh += ry;\n    tw += tx;\n    th += ty;\n    //      overflow || intersect\n    return ((rw < rx || rw > tx) &&\n            (rh < ry || rh > ty) &&\n            (tw < tx || tw > rx) &&\n            (th < ty || th > ry));\n}\n\nexport function pointInRect(point:Point, rect:Rectangle):boolean{\n    return point.x >= rect.position.x && point.x < rect.position.x + rect.size.width\n        && point.y >= rect.position.y && point.y < rect.position.y + rect.size.height;\n}","import { GameController } from \"./GameController\";\nimport { DefaultSprite } from \"./behaviors/DefaultSprite\";\nimport { Point, pointAsInt } from \"./types/Point\";\nimport { Sprite, xySpeed } from \"./types/Sprite\";\nimport { Size } from \"./types/Size\";\nimport { union, Rectangle, intersects, pointInRect } from \"./types/Rectangle\";\n\nfunction insert<T>(array:T[], value:T, comparator: (a:T, b:T)=>number){\n\tlet low =0;\n\tif(array.length>0){\n\t\tlet high=array.length;\n\t\twhile(low < high){\n\t\t\tlet mid = Math.floor( (low+high)/2);\n\t\t\tconst c = comparator(array[mid], value);\n\t\t\tif(c <0){\n\t\t\t\tlow = mid+1;\n\t\t\t}else if( c> 0){\n\t\t\t\thigh = mid;\n\t\t\t}else{\n\t\t\t\tlow = mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tarray.splice(low, 0, value);\n}\nfunction remove(array:any[], key:any){\n    const index = array.indexOf(key, 0);\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n}\n\nexport default class Scene extends DefaultSprite{\n\n    viewPort:Point = {x:0, y:0};\n    controller:GameController;\n    debug: boolean = false;\n\twrapAround:boolean = false;\n\tsceneSpeed:number = 1.0;\n\tmodelSize:Size;\n\n\tprivate collisionListeners:Sprite[] = [];\n\tprivate sprites:Sprite[] = [];\n    \n    constructor(name:string, controller:GameController, modelSize:Size={width:0.0, height:0.0}){\n        super(name);\n        this.controller = controller;\n        this.modelSize = modelSize;\n    }\n    handleKeyPressed(key: string): void {\n    }\n\n    handleMouseClick(x:number, y:number){\n    }\n\thandleTouchMove(x:number, y:number){\n    }\n\n\tgetSpritesAtPoint(point:Point):Sprite[]{\n\t\treturn this.sprites.filter( (s) => pointInRect(point, s) );\n\t}\n\n\taddSprite(sprite:Sprite) {\n\t\tthis._validateSprite(sprite);\n\t\tif(!sprite.zOrder)\n\t\t\tsprite.zOrder = 0;\n\t\tinsert(this.sprites, sprite, (a,b) => a.zOrder! - b.zOrder!);\n\t\tsprite.priorPosition = sprite.position;\n\t\tif (sprite.handleCollision)\n\t\t\tthis.collisionListeners.push(sprite);\n\t}\n\n\tremoveSprite(sprite:Sprite) {\n\t\tsprite.handleKill?.();\n        if(this.debug)\n            console.log(`Remove sprite(${sprite.name}) (${sprite.position.x}, ${sprite.position.y})`);\n        remove(this.sprites, sprite);\n        remove(this.collisionListeners, sprite);\n\t}\n\n\tpublic resetGame() {\n\t    this.sprites = [];\n\t\tthis.collisionListeners = [];\n\t}\n\n    updateModel(timeSinceLastUpdate: number) {\n\t\tsuper.updateModel(timeSinceLastUpdate);\n        \n        // handle movements and check collision\n\t\tthis.handleMovement(timeSinceLastUpdate);\n\t}\n\n    handleMovement(timeSinceLastUpdate: number) {\n        const dx = timeSinceLastUpdate/1000.0;\n        const tempArray:Sprite[] = this.sprites.slice();\n\t\twhile (tempArray.length) {\n\t\t\tconst sprite:Sprite = tempArray.pop()!;\n\t\t\tif(!sprite.isAlive){\n\t\t\t\t// remove any dead sprites.\n\t\t\t\tthis.removeSprite(sprite);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (sprite.speed) {\n\t\t\t\tconst oldRect = {position:pointAsInt(sprite.position), size:sprite.size};\n\t\t\t\tconst pointSpeed = xySpeed(sprite);\n\t\t\t\tlet newX = sprite.position.x + pointSpeed.x * dx * this.sceneSpeed;\n\t\t\t\tlet newY = sprite.position.y + pointSpeed.y * dx * this.sceneSpeed;\n\n\t\t\t\t// handle wrap around\n\t\t\t\tlet wrapped = false;\n\t\t\t\tif (this.wrapAround) {\n\t\t\t\t\tlet width = this.size.width;\n\t\t\t\t\tlet height = this.size.height;\n\t\t\t\t\tif(this.modelSize.width !==0){\n\t\t\t\t\t\twidth= this.modelSize.width;\n\t\t\t\t\t\theight = this.modelSize.height;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (newX < 0) {\n\t\t\t\t\t\tnewX = width - sprite.size.width;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t} else if (newX + sprite.size.width > width) {\n\t\t\t\t\t\tnewX = 0;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (newY < 0) {\n\t\t\t\t\t\tnewY = height - sprite.size.height;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t} else if (newY + sprite.size.height > height) {\n\t\t\t\t\t\tnewY = 0;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsprite.priorPosition = oldRect.position;\n\t\t\t\tsprite.position = {x:newX, y:newY};\n\t\t\t\t// check collisions\n\t\t\t\tlet newRect = {position: pointAsInt(sprite.position), size: sprite.size};\n\t\t\t\tif (!wrapped)\n\t\t\t\t\tnewRect = union(oldRect, newRect);\n\t\t\t\t\n\t\t\t\tif(sprite.canCollide)\n\t\t\t\t\tthis._handleCollision(newRect, sprite);\n\t\t\t\tif (sprite.acceleration) {\n\t\t\t\t\tif (Math.sign(sprite.acceleration\n\t\t\t\t\t\t\t+ sprite.speed) !== Math.sign(sprite\n\t\t\t\t\t\t\t.speed))\n\t\t\t\t\t\tsprite.speed = 0;\n\t\t\t\t\telse\n\t\t\t\t\t\tsprite.speed = sprite.speed + sprite.acceleration;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(sprite.updateModel)\n\t\t\t\tsprite.updateModel(timeSinceLastUpdate);\n\t\t\ttry {\n\t\t\t\tthis._validateSprite(sprite);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(`Sprite position not valid.  Killing spite (${sprite.name}). ${error}`);\n\t\t\t\tsprite.isAlive=false;\n\t\t\t}\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthis.removeSprite(sprite);\n\t\t}\n\t}\n\n\tprivate _handleCollision( newRect:Rectangle, sprite:Sprite) {\n\t\t//need to make this more sophisticated so it doesn't break out after one collision.\n\t\tlet collisionSprite;\n\t\tif(sprite.handleCollision){\n\t\t\tfor(let i =0; i< this.sprites.length;i++){\n\t\t\t\tconst otherSprite = this.sprites[i];\n\t\t\t\tif (sprite !== otherSprite && otherSprite.canCollide) {\n\t\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\t\tsprite.handleCollision(otherSprite);\n\t\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!collisionSprite)\n\t\t\tcollisionSprite = sprite;\n\t\t\n\t\tfor(let i =0; i< this.collisionListeners.length;i++){\n\t\t\tconst otherSprite = this.collisionListeners[i];\n\t\t\tif (sprite !== otherSprite) {\n\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\totherSprite.handleCollision!(sprite);\n\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!collisionSprite.isAlive) {\n\t\t\tthis.removeSprite(collisionSprite);\n\t\t}\n\t}\n\tcount =0;\n\ttotalTime =0;\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void {\n        //enable you to embed a scene as a sprite in another scene\n        location = {x: location.x + this.viewPort.x, y:location.y+this.viewPort.y}; \n\t\tsuper.paint(location, ctx, timeSinceLastAnimation);\n\t\tlet displayedSprites =0\n\t\tfor(let sprite of this.sprites){\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthrow Error(\"No Dead Sprites Should Make it to render step.\\n\" + sprite);\n\t\t\tlet pos = pointAsInt(sprite.position);\n\t\t\t\tif(!sprite.isFixedPosition){\n\t\t\t\t\tpos = {x: pos.x - location.x, y: pos.y - location.y}\n\t\t\t\t}\n\t\t\tif(pos.x > this.size.width || pos.y > this.size.height \n\t\t\t\t|| (sprite.size.width + pos.x < 0)\n\t\t\t\t|| (sprite.size.height + pos.y < 0)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsprite.paint(pos, ctx, timeSinceLastAnimation);\n\t\t\tdisplayedSprites++;\n\t\t}\n\t\tif(this.debug){\n\t\t\tif(++this.count % 300 === 0){\n\t\t\t\tthis.totalTime  = timeSinceLastAnimation;\n\t\t\t\tthis.count =1;\n\t\t\t}else{\n\t\t\t\tthis.totalTime +=timeSinceLastAnimation;\n\t\t\t}\n\t\t\tctx.fillStyle = \"red\"\n\t\t\tctx.fillText(`FPS: ${Math.round(1000 / (this.totalTime/ ++this.count))} Alive Sprites: ${this.sprites.length} On Screen Sprites: ${displayedSprites}` , 10, this.size.height -10);\n\t\t}\n\t}\n\n\taddSprites(sprites:Sprite[] ) {\n\t\tif(!sprites || !sprites.length)\n\t\t\tthrow Error(`Attempting to add empty array of sprites in scene (${this.name})`);\n\t\tif(this.debug){\n\t\t\tconsole.log(`Bulk adding ${sprites.length} of type (${sprites[0].name})`)\n\t\t}\n\t\tsprites.forEach( (s) => this.addSprite(s) )\n\t}\n\n\tpaintBackground?(ctx: CanvasRenderingContext2D):void;\n\t\n\t_validateSprite(sprite:Sprite){\n\t\tif(sprite.position.x < 0 || sprite.position.y < 0 )\n\t\t\tthrow Error(`Sprite position less 0 (${sprite.position.x}, ${sprite.position.y})`);\n\t\tif(this.modelSize.width !==0){\n\t\t\tif(sprite.position.x >= this.modelSize.width || sprite.position.y >= this.modelSize.height)\n\t\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y}) > model(${this.modelSize.width},${this.modelSize.height})`);\n\t\t}else if(sprite.position.x >= this.size.width || sprite.position.y >= this.size.height) {\n\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y})  > screen(${this.size.width},${this.size.height}) `);\n\t\t}\n\t\tif(sprite.size.width <=0 || sprite.size.height <= 0)\n\t\t\tthrow Error(`Sprite size too small (${sprite.size.width}, ${sprite.size.height})`);\n\t\tif( (sprite.speed !== undefined &&  sprite.angle === undefined) \n\t\t\t|| (sprite.speed === undefined &&  sprite.angle !== undefined))\n\t\t\tthrow Error(`Either speed(${sprite.speed}) and angle(${sprite.angle}) are both defined or both undefined.`)\n\t}\n\n}","import { Size } from \"../types/Size\";\nimport { Point } from \"../types/Point\";\n\nexport class SpriteSheet{\n    readonly rows:number;\n    readonly columns:number;\n    readonly image:HTMLImageElement;\n    readonly size:Size;\n    constructor(image:HTMLImageElement, rows:number = 1, columns:number =1) {\n        this.image = image;\n        this.rows = rows;\n        this.columns = columns;\n        this.size = {width:Math.floor(this.image.width/this.columns),\n            height: Math.floor(this.image.height/this.rows)}\n    }\n    paint(location:Point, ctx: CanvasRenderingContext2D, angle:number= 0,row:number=1, column:number=1):void{\n        if(row<1 || row > this.rows || column < 1 || column > this.columns)\n            throw Error(`Row and columns of sprite need to be in bounds (${row},${column})`);\n        const w = this.size.width, h = this.size.height;\n        if(angle){\n            ctx.translate(location.x + w / 2.0, location.y+ h / 2.0);\n            ctx.rotate(angle);\n            location.x = 0 - w / 2.0;\n            location.y = 0 - h / 2.0;\n        }\n        if(this.columns === 1 && this.rows === 1)\n            ctx.drawImage(this.image, location.x, location.y, w , h);\n        else{\n            const srcX = Math.floor(this.image.width * ((column-1)/this.columns));\n            const srcY = Math.floor(this.image.height * ((row-1)/this.rows));\n            ctx.drawImage(this.image, srcX, srcY, w, h, location.x, location.y, w, h);\n        }\n        if(angle){\n            ctx.setTransform(1, 0, 0, 1, 0, 0);    \n        }\n    }\n    get frameCount():number{\n        return this.rows*this.columns;\n    }\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { SpriteSheet } from \"./SpriteSheet\";\n\n\n\nexport class SpriteSheetBehavior implements Behavior{\n    spriteSheet:SpriteSheet;\n    framesPerSecond:number = 10;\n\tage:number = 0;\n    animateOnce:boolean = false;\n\trotate:boolean = false;\n\n\tconstructor(spriteSheet:SpriteSheet) {\n\t\tthis.spriteSheet = spriteSheet;\n\t}\n    init(sprite:Sprite){\n        sprite.size = this.spriteSheet.size;\n\t}\n    paint(sprite:Sprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n\t\tlet frame;\n\t\tif(this.framesPerSecond && this.spriteSheet.frameCount !== 0){\n\t\t\tconst timePerFrame = 1.0 / this.framesPerSecond;\n\t\t\tframe = Math.floor( (this.age/timePerFrame ) % this.spriteSheet.frameCount);\n\t\t}else{\n\t\t\tframe =0;\n\t\t}\n\t\tconst column = Math.floor(frame % this.spriteSheet.columns) + 1;\n\t\tconst row = Math.floor( frame/this.spriteSheet.columns ) + 1 ;\n\t\tconst angle = (sprite.angle) ? sprite.angle : 0;\n\t\tthis.spriteSheet.paint(location,ctx,angle,row,column);\t\t\n\n\t}\n\tupdateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n\t\tconst dx = timeSinceLastUpdate/1000;\n\t\tthis.age += dx;\n\t\tif(this.animateOnce){\n\t\t\tif (this.age > this.spriteSheet.frameCount / this.framesPerSecond) {\n\t\t\t\t// System.out.println(\"FPS:\" + getFramesPerSecond()\n\t\t\t\t// \t\t+ \"\\tFC:\" + getFrameCount() + \"\\tage:\" + age);\n\t\t\t\tsprite.isAlive = false;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { GameController } from \"../gamelib/GameController\";\nimport { Point } from \"../gamelib/types/Point\";\nimport Scene from \"../gamelib/Scene\";\nimport { Sprite, xySpeed } from \"../gamelib/types/Sprite\";\nimport { Size } from \"../gamelib/types/Size\";\nimport { DefaultSprite } from \"../gamelib/behaviors/DefaultSprite\";\nimport { GameInitializer } from \"../gamelib/GameInitializer\";\nimport { SpriteSheet } from \"../gamelib/behaviors/SpriteSheet\";\nimport { SpriteSheetBehavior } from \"../gamelib/behaviors/SpriteSheetBehavior\";\n\n\n\nfunction createWall(position:Point, size:Size, isVertical:boolean):Sprite{\n    const wall = {\n        name:'wall',\n        position,\n        size,\n        isAlive:true,\n        paint: function(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n            ctx.fillStyle =  \"\trgb(50,50,50)\";\n            ctx.fillRect(position.x, position.y, size.width, size.height);\n        },\n        handleCollision(otherSprite:Sprite):void{\n            const speed = xySpeed(otherSprite);\n            if(isVertical){\n                if(speed.x>0)\n                   otherSprite.position.x = this.position.x - otherSprite.size.width;\n                else\n                    otherSprite.position.x = this.position.x + this.size.width;\n                otherSprite.position.y = otherSprite.priorPosition!.y;\n                otherSprite.angle =  Math.PI - otherSprite.angle! + (Math.random() - .5 )*.2;\n            }else{\n                if(speed.y>0)\n                    otherSprite.position.y = this.position.y - otherSprite.size.height;\n                else\n                    otherSprite.position.y = this.position.y + this.size.height;\n                otherSprite.position.x = otherSprite.priorPosition!.x;\n                otherSprite.angle =  -1.0 * otherSprite.angle! + (Math.random() - .5 )*.2;\n            }\n        }\n    };\n    return wall;\n}\n\nexport class BouncingBall implements GameInitializer{\n\n    preloadImages = [{name:'ball', src:'/circles/assets/images/ball-sheet2.png'}];\n    preloadSounds = [{name:'boop', src:'/circles/assets/sounds/boop.m4a'}\n                    ,{name:'error', src:'/circles/assets/sounds/error.m4a'}];\n\n\tinit(controller:GameController):void {\n\t\tconst scene = new Scene('bouncing ball',controller);\n        controller.scene = scene;\n        let score =0;\n        controller.publishEvent({type:'score', value:(score)});\n        scene.handleMouseClick = function(x:number, y:number){\n            const sprites = scene.getSpritesAtPoint({x,y});\n            if(sprites.length){\n                sprites.filter( (s) => s.canCollide ).forEach( (s) => {\n                    scene.removeSprite(s);\n                    controller.publishEvent({type:'score', value:(score++)});\n                    controller.soundEffects.play('boop');\n                } );\n            }else{ \n                controller.publishEvent({type:'score', value:(score--)});\n                controller.soundEffects.play('error');\n            }\n        }\n        scene.wrapAround = false;\n        scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n                ctx.fillStyle = 'black';\n                ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n        }\n\n        const sz = scene.size;\n        const wallSize = 4;\n        //create walls\n        scene.addSprite( createWall({x:0,y:0},{width:sz.width-wallSize,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:sz.height-wallSize},{width:sz.width,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n        scene.addSprite( createWall({x:sz.width-wallSize,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n\n        //add balls\n        const image = controller.imagePreloader.getImageFromCache('ball');\n        const spriteSheet = new SpriteSheet(image, 4, 8);\n        const radius = spriteSheet.size.width/2;\n        const rand =  (min:number, max:number) => Math.random() * (max-min) + min;\n        for(let x=0; x<30;x++){\n            const ball = new DefaultSprite('ball', {x: rand(sz.width-(radius+wallSize)*2, radius+wallSize),y:rand(sz.height-(radius+wallSize)*2, radius+wallSize)});\n            ball.isAlive = true;\n            ball.speed = Math.random() * 250+100;\n            ball.angle = Math.random() * Math.PI *2;\n            ball.zOrder = Math.random() * 10 -5;\n            ball.canCollide = true;\n            ball.addBehavior(new SpriteSheetBehavior(spriteSheet));\n            ball.size = {width: ball.size.width -2, height: ball.size.height -2}\n            scene.addSprite(ball);\t\n        }\n\t}\n}","import { GameController } from \"../../gamelib/GameController\";\nimport Scene from \"../../gamelib/Scene\";\nimport { generateAsteroids } from \"./sprites/Asteroids\";\n\n\nexport function launchOpenningSequence(controller:GameController){\n    const scene = new Scene('space game',controller);\n    controller.scene = scene;\n    let score =0;\n    controller.publishEvent({type:'score', value:(score)});\n    scene.wrapAround = true;\n    scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n            ctx.fillStyle = 'black';\n            ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n    }\n\n    generateAsteroids(controller, 30);\n}","import { GameController } from \"../../../gamelib/GameController\";\nimport { SpriteSheet } from \"../../../gamelib/behaviors/SpriteSheet\";\nimport { DefaultSprite } from \"../../../gamelib/behaviors/DefaultSprite\";\nimport { SpriteSheetBehavior } from \"../../../gamelib/behaviors/SpriteSheetBehavior\";\n\n\n\n\n\nexport function generateAsteroids(controller:GameController, count:number){\n    const scene = controller.scene;\n    const sz = scene.size;\n    const image = controller.imagePreloader.getImageFromCache('asteroid');\n    const spriteSheet = new SpriteSheet(image, 2, 10);\n    const rand =  (minn:number, max:number) => Math.random() * (max-minn) + minn;\n    const min =100;\n    for(let x=0; x<count;x++){\n        const a = new DefaultSprite('asteroid', {x: rand(sz.width-min, min),y:rand(sz.height-min, min)});\n        a.isAlive = true;\n        a.speed = Math.random() * 200+50;\n        a.angle = Math.random() * Math.PI *2;\n        a.zOrder = -1;\n        a.canCollide = true;\n        a.addBehavior(new SpriteSheetBehavior(spriteSheet));\n        a.size = {width: a.size.width, height: a.size.height}\n        scene.addSprite(a);\t\n    }\n}","import { GameInitializer } from \"../../gamelib/GameInitializer\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { launchOpenningSequence } from \"./OpenningSequence\";\n\n\n\n\n\nexport class SpaceGame implements GameInitializer{\n\n    preloadImages = [{name:'asteroid', src:'/circles/assets/images/asteroidtw8.png'}];\n    preloadSounds = [{name:'boop', src:'/circles/assets/sounds/boop.m4a'}\n                    ,{name:'error', src:'/circles/assets/sounds/error.m4a'}];\n\n\tinit(controller:GameController):void {\n        launchOpenningSequence(controller);        \n\t}\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link  as ReactLink, Box } from '@material-ui/core';\nimport {  AppBar, Toolbar,Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n      },\n    container:{\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n        overflowY:'auto',\n    },\n    root: {\n        maxWidth: 345,\n        marginBottom: theme.spacing(6),\n    },\n    media: {\n        height: 140,\n    },\n    link:{\n        textDecoration: 'none'\n    },\n    githublink:{\n        marginLeft: theme.spacing(3),\n    }\n}));\n\nexport  function Home() {\n    const classes = useStyles();\n\n    return (\n\n        <React.Fragment>\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Circles\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box component=\"div\" overflow=\"visible\">\n        <Grid container alignItems=\"center\" justify = \"center\" direction=\"column\" className={classes.container} >\n            <Card className={classes.root}>\n                <Link to=\"/circles/ball\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/balls-screen.png\"\n                            title=\"Play Bouncing Ball\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Bouncing Ball\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Try to catch the balls.  If you miss your score goes down, so be careful!\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n\n            <Card className={classes.root}>\n                <Link to=\"/circles/space\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/asteroids-screen.png\"\n                            title=\"Play Asteroids\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Asteroids\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Shoot all the asteroids.   Use W-A-S-D to move around and space bar to fire.\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n            <ReactLink  component=\"button\" variant=\"body2\" className={classes.githublink}\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </ReactLink>\n        </Grid>\n        </Box>\n</React.Fragment>\n    );\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport GameComponent from './gamecontainer/GameComponent';\nimport { BouncingBall } from './sample/BouncingBall';\nimport { SpaceGame } from './sample/space/SpaceGame';\nimport { Home } from './Home';\n\nexport default function App() {\n  return (\n    <Router>\n        <Switch>\n          <Route path=\"/circles/space\">\n          <GameComponent gameInitializer={new SpaceGame()} ></GameComponent>\n          </Route>\n          <Route path=\"/circles/ball\">\n          <GameComponent gameInitializer={new BouncingBall()} ></GameComponent>\n          </Route>\n          <Route path=\"/circles\">\n            <Home />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Electrolize',\n  },\n    overrides: {\n\n        MuiCssBaseline: {\n          '@global': {\n            body: {\n                width: '100%',\n                height: '100%',\n                margin: '0',\n            }\n          },\n        },\n      },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-electrolize';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}