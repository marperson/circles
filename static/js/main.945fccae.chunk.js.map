{"version":3,"sources":["gamelib/behaviors/DefaultSprite.ts","gamelib/types/Point.ts","gamelib/types/Sprite.ts","gamelib/types/Rectangle.ts","gamelib/Scene.ts","gamelib/behaviors/SpriteSheet.ts","gamelib/behaviors/SpriteSheetBehavior.ts","sample/BouncingBall.ts","gamelib/util/ImagePreloader.ts","gamelib/util/SoundEffects.ts","gamelib/GameController.ts","InfoDialog.tsx","GameComponent.tsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["DefaultSprite","position","x","y","size","width","height","isAlive","speed","angle","acceleration","canCollide","isFixedPosition","zOrder","behaviors","this","behavior","init","push","location","ctx","timeSinceLastAnimation","forEach","b","paint","timeSinceLastUpdate","updateModel","handleKill","otherSprite","handleCollision","pointAsInt","point","Math","round","xySpeed","sprite","cos","sin","union","rect1","rect2","tx2","ty2","rx2","ry2","tx1","ty1","rx1","ry1","intersects","tw","th","rw","rh","tx","ty","rx","ry","remove","array","key","index","indexOf","splice","Scene","controller","modelSize","viewPort","debug","wrapAround","sceneSpeed","collisionListeners","sprites","count","totalTime","filter","s","rect","pointInRect","_validateSprite","value","comparator","low","length","high","mid","floor","c","insert","a","priorPosition","console","log","handleMovement","dx","tempArray","slice","pop","oldRect","pointSpeed","newX","newY","wrapped","newRect","_handleCollision","sign","error","removeSprite","collisionSprite","i","displayedSprites","Error","pos","fillStyle","fillText","addSprite","undefined","SpriteSheet","image","rows","columns","row","column","w","h","translate","rotate","drawImage","srcX","srcY","setTransform","SpriteSheetBehavior","spriteSheet","framesPerSecond","age","animateOnce","frame","frameCount","timePerFrame","createWall","isVertical","fillRect","PI","random","BouncingBall","preloadImages","name","src","preloadSounds","scene","score","publishEvent","type","handleMouseClick","getSpritesAtPoint","soundEffects","play","paintBackground","sz","imagePreloader","getImageFromCache","radius","rand","min","max","ball","addBehavior","ImagePreloader","imageCache","Map","loadsCompleted","nLoads","loadCallback","callback","get","images","des","Image","onload","_createOnLoad","newImage","canvas","document","createElement","getContext","top","imgd","getImageData","pix","data","newColor","n","r","g","putImageData","output","toDataURL","makeTransparent","set","SoundEffects","effectPreloads","sounds","rate","_mute","effect","Howl","preload","sound","mute","Howler","GameController","gameInitializer","keysPressed","isShutdown","pause","readyCallback","_scene","gameEventListeners","preLoadImages","registerCallback","_handleImagesLoaded","window","innerWidth","innerHeight","transitionScene","newScene","that","event","handler","gameEventListener","addEventListener","delete","e","getBoundingClientRect","clientX","left","clientY","preventDefault","touch","targetTouches","handleTouchMove","lastTime","restart","requestAnimationFrame","loop","time","handleKeyPressed","save","restore","constructor","useStyles","makeStyles","theme","createStyles","infoButton","marginRight","spacing","InfoDialog","React","useState","open","setOpen","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","IconButton","edge","className","onClick","color","aria-label","Info","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","component","variant","DialogActions","Button","autoFocus","GameComponent","withStyles","root","flexGrow","controlButton","title","props","canvasRef","createRef","gameController","state","imagesLoaded","current","setState","subscribeEvent","stopPropagation","Fragment","AppBar","style","background","boxShadow","Toolbar","Typography","handlePause","PlayCircleOutline","PauseCircleOutline","handleRestart","Refresh","handleMute","VolumeOff","VolumeUp","gutterBottom","CircularProgress","ref","Component","App","Boolean","hostname","match","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","body","margin","ReactDOM","render","ThemeProvider","CssBaseline","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.945fccae.chunk.js","sourcesContent":["import { Point } from \"../types/Point\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Size } from \"../types/Size\";\nimport { Behavior } from \"../types/Behavior\";\n\nexport class DefaultSprite implements Sprite{\n    position:Point;\n    size:Size;\n    isAlive:boolean = true;\n\t\n    speed:number = 0.0;\n    angle:number = 0.0;\n    acceleration:number = 0.0;\n\tcanCollide:boolean = false;\n    isFixedPosition:boolean = false;\n    zOrder:number = 0;\n\t\n\tprivate behaviors:Behavior[] = [];\n\t\n\tconstructor(position:Point={x:0.0,y:0.0}, size:Size={width:0.0, height:0.0}){\n        this.position = position;\n        this.size = size;\n\t}\n\t\n\taddBehavior(behavior:Behavior){\n        if(behavior.init) behavior.init(this);\n        this.behaviors.push(behavior);\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n        this.behaviors.forEach( (b) =>  b.paint?.(this, location, ctx, timeSinceLastAnimation));\n    }\n    updateModel(timeSinceLastUpdate: number) {\n        this.behaviors.forEach( (b) =>  b.updateModel?.(this, timeSinceLastUpdate));\n    }\n    \n    handleKill():void{\n        this.behaviors.forEach( (b) =>  b.handleKill?.(this));\n    }\n    \n    handleCollision?(otherSprite:Sprite):void{\n        this.behaviors.forEach( (b) =>  b.handleCollision?.(this, otherSprite));\n    }\n}","\nexport interface Point{\n    x:number;\n    y:number;\n}\n\nexport function pointAsInt(point:Point): Point{\n    return {x:Math.round(point.x), y:Math.round(point.y)};\n}","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Sprite{\n    position:Point;\n    size:Size;\n    isAlive:boolean;\n    speed?: number;\n    angle?: number;\n    acceleration?: number;\n    priorPosition?:Point;\n    zOrder?:number\n\n    //optional properties\n\tcanCollide?: boolean;\n\tisFixedPosition?: boolean;\n\t\n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void;\n\n    updateModel?(timeSinceLastUpdate: number):void;\n\t\t\n\thandleKill?():void;\n    \n    handleCollision?(otherSprite:Sprite):void;\n    \n}\n\nexport function xySpeed(sprite:Sprite): Point{\n    if(sprite.speed && sprite.angle)\n        return {x: sprite.speed * Math.cos(sprite.angle), y: sprite.speed * Math.sin(sprite.angle)};\n    else return {x:0,y:0};\n}\n\n\nexport function centerPosition(sprite:Sprite): Point{\n    return {x: sprite.position.x + sprite.size.width/2, y: sprite.position.y + sprite.size.height/2};\n}\n\n","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Rectangle{\n    position:Point;\n    size:Size;\n\n}\n\nexport function union(rect1:Rectangle, rect2:Rectangle):Rectangle{\n    let tx2 = rect1.size.width;\n    let ty2 = rect1.size.height;\n    if ((tx2 | ty2) < 0) {\n        // This rectangle has negative dimensions...\n        // If r has non-negative dimensions then it is the answer.\n        // If r is non-existant (has a negative dimension), then both\n        // are non-existant and we can return any non-existant rectangle\n        // as an answer.  Thus, returning r meets that criterion.\n        // Either way, r is our answer.\n        return rect2;\n    }\n    let rx2 = rect2.size.width;\n    let ry2 = rect2.size.height;\n    if ((rx2 | ry2) < 0) {\n        return rect1;\n    }\n    let tx1 = rect1.position.x;\n    let ty1 = rect1.position.y;\n    tx2 += tx1;\n    ty2 += ty1;\n    const rx1 = rect2.position.x;\n    const ry1 = rect2.position.y;\n    rx2 += rx1;\n    ry2 += ry1;\n    if (tx1 > rx1) tx1 = rx1;\n    if (ty1 > ry1) ty1 = ry1;\n    if (tx2 < rx2) tx2 = rx2;\n    if (ty2 < ry2) ty2 = ry2;\n    tx2 -= tx1;\n    ty2 -= ty1;\n    return { position:{x:tx1, y:ty1},size:{width:tx2, height:ty2}};\n\n}\n\nexport function intersects(rect1:Rectangle, rect2:Rectangle):boolean{\n\n    let tw = rect1.size.width;\n    let th = rect1.size.height;\n    let rw = rect2.size.width;\n    let rh = rect2.size.height;\n    if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\n        return false;\n    }\n    const tx = rect1.position.x;\n    const ty = rect1.position.y;\n    const rx = rect2.position.x;\n    const ry = rect2.position.y;\n    rw += rx;\n    rh += ry;\n    tw += tx;\n    th += ty;\n    //      overflow || intersect\n    return ((rw < rx || rw > tx) &&\n            (rh < ry || rh > ty) &&\n            (tw < tx || tw > rx) &&\n            (th < ty || th > ry));\n}\n\nexport function pointInRect(point:Point, rect:Rectangle):boolean{\n    return point.x >= rect.position.x && point.x < rect.position.x + rect.size.width\n        && point.y >= rect.position.y && point.y < rect.position.y + rect.size.height;\n}","import { GameController } from \"./GameController\";\nimport { DefaultSprite } from \"./behaviors/DefaultSprite\";\nimport { Point, pointAsInt } from \"./types/Point\";\nimport { Sprite, xySpeed } from \"./types/Sprite\";\nimport { Size } from \"./types/Size\";\nimport { union, Rectangle, intersects, pointInRect } from \"./types/Rectangle\";\n\nfunction insert<T>(array:T[], value:T, comparator: (a:T, b:T)=>number){\n\tlet low =0;\n\tif(array.length>0){\n\t\tlet high=array.length;\n\t\twhile(low < high){\n\t\t\tlet mid = Math.floor( (low+high)/2);\n\t\t\tconst c = comparator(array[mid], value);\n\t\t\tif(c <0){\n\t\t\t\tlow = mid+1;\n\t\t\t}else if( c> 0){\n\t\t\t\thigh = mid;\n\t\t\t}else{\n\t\t\t\tlow = mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tarray.splice(low, 0, value);\n}\nfunction remove(array:any[], key:any){\n    const index = array.indexOf(key, 0);\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n}\n\nexport default class Scene extends DefaultSprite{\n\n    viewPort:Point = {x:0, y:0};\n    controller:GameController;\n    debug: boolean = false;\n\twrapAround:boolean = false;\n\tsceneSpeed:number = 1.0;\n\tmodelSize:Size;\n\n\tprivate collisionListeners:Sprite[] = [];\n\tprivate sprites:Sprite[] = [];\n    \n    constructor(controller:GameController, modelSize:Size={width:0.0, height:0.0}){\n        super();\n        this.controller = controller;\n        this.modelSize = modelSize;\n    }\n    handleKeyPressed(key: string): void {\n    }\n\n    handleMouseClick(x:number, y:number){\n    }\n\thandleTouchMove(x:number, y:number){\n    }\n\n\tgetSpritesAtPoint(point:Point):Sprite[]{\n\t\treturn this.sprites.filter( (s) => pointInRect(point, s) );\n\t}\n\n\taddSprite(sprite:Sprite) {\n\t\tthis._validateSprite(sprite);\n\t\tif(!sprite.zOrder)\n\t\t\tsprite.zOrder = 0;\n\t\tinsert(this.sprites, sprite, (a,b) => a.zOrder! - b.zOrder!);\n\t\tsprite.priorPosition = sprite.position;\n\t\tif (sprite.handleCollision)\n\t\t\tthis.collisionListeners.push(sprite);\n\t}\n\n\tremoveSprite(sprite:Sprite) {\n\t\tsprite.handleKill?.();\n        if(this.debug)\n            console.log(`Remove sprite (${sprite.position.x}, ${sprite.position.y})`);\n        remove(this.sprites, sprite);\n        remove(this.collisionListeners, sprite);\n\t}\n\n\tpublic resetGame() {\n\t    this.sprites = [];\n\t\tthis.collisionListeners = [];\n\t}\n\n    updateModel(timeSinceLastUpdate: number) {\n\t\tsuper.updateModel(timeSinceLastUpdate);\n        \n        // handle movements and check collision\n\t\tthis.handleMovement(timeSinceLastUpdate);\n\t}\n\n    handleMovement(timeSinceLastUpdate: number) {\n        const dx = timeSinceLastUpdate/1000.0;\n        const tempArray:Sprite[] = this.sprites.slice();\n\t\twhile (tempArray.length) {\n\t\t\tconst sprite:Sprite = tempArray.pop()!;\n\t\t\tif(!sprite.isAlive){\n\t\t\t\t// remove any dead sprites.\n\t\t\t\tthis.removeSprite(sprite);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (sprite.speed) {\n\t\t\t\tconst oldRect = {position:pointAsInt(sprite.position), size:sprite.size};\n\t\t\t\tconst pointSpeed = xySpeed(sprite);\n\t\t\t\tlet newX = sprite.position.x + pointSpeed.x * dx * this.sceneSpeed;\n\t\t\t\tlet newY = sprite.position.y + pointSpeed.y * dx * this.sceneSpeed;\n\n\t\t\t\t// handle wrap around\n\t\t\t\tlet wrapped = false;\n\t\t\t\tif (this.wrapAround) {\n\t\t\t\t\tlet width = this.size.width;\n\t\t\t\t\tlet height = this.size.height;\n\t\t\t\t\tif(this.modelSize.width !==0){\n\t\t\t\t\t\twidth= this.modelSize.width;\n\t\t\t\t\t\theight = this.modelSize.height;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (newX < 0) {\n\t\t\t\t\t\tnewX = width - sprite.size.width;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t} else if (newX + sprite.size.width > width) {\n\t\t\t\t\t\tnewX = 0;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (newY < 0) {\n\t\t\t\t\t\tnewY = height - sprite.size.height;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t} else if (newY + sprite.size.height > height) {\n\t\t\t\t\t\tnewY = 0;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsprite.priorPosition = oldRect.position;\n\t\t\t\tsprite.position = {x:newX, y:newY};\n\t\t\t\t// check collisions\n\t\t\t\tlet newRect = {position: pointAsInt(sprite.position), size: sprite.size};\n\t\t\t\tif (!wrapped)\n\t\t\t\t\tnewRect = union(oldRect, newRect);\n\t\t\t\t\n\t\t\t\tif(sprite.canCollide)\n\t\t\t\t\tthis._handleCollision(newRect, sprite);\n\t\t\t\tif (sprite.acceleration) {\n\t\t\t\t\tif (Math.sign(sprite.acceleration\n\t\t\t\t\t\t\t+ sprite.speed) !== Math.sign(sprite\n\t\t\t\t\t\t\t.speed))\n\t\t\t\t\t\tsprite.speed = 0;\n\t\t\t\t\telse\n\t\t\t\t\t\tsprite.speed = sprite.speed + sprite.acceleration;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(sprite.updateModel)\n\t\t\t\tsprite.updateModel(timeSinceLastUpdate);\n\t\t\ttry {\n\t\t\t\tthis._validateSprite(sprite);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"Sprite position not valid.  Killing spite. \" + error);\n\t\t\t\tsprite.isAlive=false;\n\t\t\t}\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthis.removeSprite(sprite);\n\t\t}\n\t}\n\n\tprivate _handleCollision( newRect:Rectangle, sprite:Sprite) {\n\t\t//need to make this more sophisticated so it doesn't break out after one collision.\n\t\tlet collisionSprite;\n\t\tif(sprite.handleCollision){\n\t\t\tfor(let i =0; i< this.sprites.length;i++){\n\t\t\t\tconst otherSprite = this.sprites[i];\n\t\t\t\tif (sprite !== otherSprite && otherSprite.canCollide) {\n\t\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\t\tsprite.handleCollision(otherSprite);\n\t\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!collisionSprite)\n\t\t\tcollisionSprite = sprite;\n\t\t\n\t\tfor(let i =0; i< this.collisionListeners.length;i++){\n\t\t\tconst otherSprite = this.collisionListeners[i];\n\t\t\tif (sprite !== otherSprite) {\n\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\totherSprite.handleCollision!(sprite);\n\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!collisionSprite.isAlive) {\n\t\t\tthis.removeSprite(collisionSprite);\n\t\t}\n\t}\n\tcount =0;\n\ttotalTime =0;\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void {\n        //enable you to embed a scene as a sprite in another scene\n        location = {x: location.x + this.viewPort.x, y:location.y+this.viewPort.y}; \n\t\tsuper.paint(location, ctx, timeSinceLastAnimation);\n\t\tlet displayedSprites =0\n\t\tfor(let sprite of this.sprites){\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthrow Error(\"No Dead Sprites Should Make it to render step.\\n\" + sprite);\n\t\t\tlet pos = pointAsInt(sprite.position);\n\t\t\t\tif(!sprite.isFixedPosition){\n\t\t\t\t\tpos = {x: pos.x - location.x, y: pos.y - location.y}\n\t\t\t\t}\n\t\t\tif(pos.x > this.size.width || pos.y > this.size.height \n\t\t\t\t|| (sprite.size.width + pos.x < 0)\n\t\t\t\t|| (sprite.size.height + pos.y < 0)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsprite.paint(pos, ctx, timeSinceLastAnimation);\n\t\t\tdisplayedSprites++;\n\t\t}\n\t\tif(this.debug){\n\t\t\tif(++this.count % 300 === 0){\n\t\t\t\tthis.totalTime  = timeSinceLastAnimation;\n\t\t\t\tthis.count =1;\n\t\t\t}else{\n\t\t\t\tthis.totalTime +=timeSinceLastAnimation;\n\t\t\t}\n\t\t\tctx.fillStyle = \"red\"\n\t\t\tctx.fillText(`FPS: ${Math.round(1000 / (this.totalTime/ ++this.count))} Alive Sprites: ${this.sprites.length} On Screen Sprites: ${displayedSprites}` , 10, this.size.height -10);\n\t\t}\n\t}\n\n\taddSprites(sprites:Sprite[] ) {\n\t\tsprites.forEach( (s) => this.addSprite(s) )\n\t}\n\n\tpaintBackground?(ctx: CanvasRenderingContext2D):void;\n\t\n\t_validateSprite(sprite:Sprite){\n\t\tif(sprite.position.x < 0 || sprite.position.y < 0 )\n\t\t\tthrow Error(`Sprite position less 0 (${sprite.position.x}, ${sprite.position.y})`);\n\t\tif(this.modelSize.width !==0){\n\t\t\tif(sprite.position.x >= this.modelSize.width || sprite.position.y >= this.modelSize.height)\n\t\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y}) > model(${this.modelSize.width},${this.modelSize.height})`);\n\t\t}else if(sprite.position.x >= this.size.width || sprite.position.y >= this.size.height) {\n\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y})  > screen(${this.size.width},${this.size.height}) `);\n\t\t}\n\t\tif(sprite.size.width <=0 || sprite.size.height <= 0)\n\t\t\tthrow Error(`Sprite size too small (${sprite.size.width}, ${sprite.size.height})`);\n\t\tif( (sprite.speed !== undefined &&  sprite.angle === undefined) \n\t\t\t|| (sprite.speed === undefined &&  sprite.angle !== undefined))\n\t\t\tthrow Error(`Either speed(${sprite.speed}) and angle(${sprite.angle}) are both defined or both undefined.`)\n\t}\n\n}","import { Size } from \"../types/Size\";\nimport { Point } from \"../types/Point\";\n\nexport class SpriteSheet{\n    readonly rows:number;\n    readonly columns:number;\n    readonly image:HTMLImageElement;\n    readonly size:Size;\n    constructor(image:HTMLImageElement, rows:number = 1, columns:number =1) {\n        this.image = image;\n        this.rows = rows;\n        this.columns = columns;\n        this.size = {width:Math.floor(this.image.width/this.columns),\n            height: Math.floor(this.image.height/this.rows)}\n    }\n    paint(location:Point, ctx: CanvasRenderingContext2D, angle:number= 0,row:number=1, column:number=1):void{\n        if(row<1 || row > this.rows || column < 1 || column > this.columns)\n            throw Error(`Row and columns of sprite need to be in bounds (${row},${column})`);\n        const w = this.size.width, h = this.size.height;\n        if(angle){\n            ctx.translate(location.x + w / 2.0, location.y+ h / 2.0);\n            ctx.rotate(angle);\n            location.x = 0 - w / 2.0;\n            location.y = 0 - h / 2.0;\n        }\n        if(this.columns === 1 && this.rows === 1)\n            ctx.drawImage(this.image, location.x, location.y, w , h);\n        else{\n            const srcX = Math.floor(this.image.width * ((column-1)/this.columns));\n            const srcY = Math.floor(this.image.height * ((row-1)/this.rows));\n            ctx.drawImage(this.image, srcX, srcY, w, h, location.x, location.y, w, h);\n        }\n        if(angle){\n            ctx.setTransform(1, 0, 0, 1, 0, 0);    \n        }\n    }\n    get frameCount():number{\n        return this.rows*this.columns;\n    }\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { SpriteSheet } from \"./SpriteSheet\";\n\n\n\nexport class SpriteSheetBehavior implements Behavior{\n    spriteSheet:SpriteSheet;\n    framesPerSecond:number = 10;\n\tage:number = 0;\n    animateOnce:boolean = false;\n\trotate:boolean = false;\n\n\tconstructor(spriteSheet:SpriteSheet) {\n\t\tthis.spriteSheet = spriteSheet;\n\t}\n    init(sprite:Sprite){\n        sprite.size = this.spriteSheet.size;\n\t}\n    paint(sprite:Sprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n\t\tlet frame;\n\t\tif(this.framesPerSecond && this.spriteSheet.frameCount !== 0){\n\t\t\tconst timePerFrame = 1.0 / this.framesPerSecond;\n\t\t\tframe = Math.floor( (this.age/timePerFrame ) % this.spriteSheet.frameCount);\n\t\t}else{\n\t\t\tframe =0;\n\t\t}\n\t\tconst column = Math.floor(frame % this.spriteSheet.columns) + 1;\n\t\tconst row = Math.floor( frame/this.spriteSheet.columns ) + 1 ;\n\t\tconst angle = (sprite.angle) ? sprite.angle : 0;\n\t\tthis.spriteSheet.paint(location,ctx,angle,row,column);\t\t\n\n\t}\n\tupdateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n\t\tconst dx = timeSinceLastUpdate/1000;\n\t\tthis.age += dx;\n\t\tif(this.animateOnce){\n\t\t\tif (this.age > this.spriteSheet.frameCount / this.framesPerSecond) {\n\t\t\t\t// System.out.println(\"FPS:\" + getFramesPerSecond()\n\t\t\t\t// \t\t+ \"\\tFC:\" + getFrameCount() + \"\\tage:\" + age);\n\t\t\t\tsprite.isAlive = false;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { GameController } from \"../gamelib/GameController\";\nimport { Point } from \"../gamelib/types/Point\";\nimport Scene from \"../gamelib/Scene\";\nimport { Sprite, xySpeed } from \"../gamelib/types/Sprite\";\nimport { Size } from \"../gamelib/types/Size\";\nimport { DefaultSprite } from \"../gamelib/behaviors/DefaultSprite\";\nimport { GameInitializer } from \"../gamelib/GameInitializer\";\nimport { SpriteSheet } from \"../gamelib/behaviors/SpriteSheet\";\nimport { SpriteSheetBehavior } from \"../gamelib/behaviors/SpriteSheetBehavior\";\n\n\n\nfunction createWall(position:Point, size:Size, isVertical:boolean):Sprite{\n    const wall = {\n        position,\n        size,\n        isAlive:true,\n        paint: function(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n            ctx.fillStyle =  \"\trgb(50,50,50)\";\n            ctx.fillRect(position.x, position.y, size.width, size.height);\n        },\n        handleCollision(otherSprite:Sprite):void{\n            const speed = xySpeed(otherSprite);\n            if(isVertical){\n                if(speed.x>0)\n                   otherSprite.position.x = this.position.x - otherSprite.size.width;\n                else\n                    otherSprite.position.x = this.position.x + this.size.width;\n                otherSprite.position.y = otherSprite.priorPosition!.y;\n                otherSprite.angle =  Math.PI - otherSprite.angle! + (Math.random() - .5 )*.2;\n            }else{\n                if(speed.y>0)\n                    otherSprite.position.y = this.position.y - otherSprite.size.height;\n                else\n                    otherSprite.position.y = this.position.y + this.size.height;\n                otherSprite.position.x = otherSprite.priorPosition!.x;\n                otherSprite.angle =  -1.0 * otherSprite.angle! + (Math.random() - .5 )*.2;\n            }\n        }\n    };\n    return wall;\n}\n\nexport class BouncingBall implements GameInitializer{\n\n    preloadImages = [{name:'ball', src:'/circles/assets/images/ball-sheet2.png'}];\n    preloadSounds = [{name:'boop', src:'/circles/assets/sounds/boop.m4a'}\n                    ,{name:'error', src:'/circles/assets/sounds/error.m4a'}];\n\n\tinit(controller:GameController):void {\n\t\tconst scene = new Scene(controller);\n        controller.scene = scene;\n        let score =0;\n        controller.publishEvent({type:'score', value:(score)});\n        scene.handleMouseClick = function(x:number, y:number){\n            const sprites = scene.getSpritesAtPoint({x,y});\n            if(sprites.length){\n                sprites.filter( (s) => s.canCollide ).forEach( (s) => {\n                    scene.removeSprite(s);\n                    controller.publishEvent({type:'score', value:(score++)});\n                    controller.soundEffects.play('boop');\n                } );\n            }else{ \n                controller.publishEvent({type:'score', value:(score--)});\n                controller.soundEffects.play('error');\n            }\n        }\n        scene.wrapAround = false;\n        scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n                ctx.fillStyle = 'black';\n                ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n        }\n\n        const sz = scene.size;\n        const wallSize = 4;\n        //create walls\n        scene.addSprite( createWall({x:0,y:0},{width:sz.width-wallSize,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:sz.height-wallSize},{width:sz.width,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n        scene.addSprite( createWall({x:sz.width-wallSize,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n\n        //add balls\n        const image = controller.imagePreloader.getImageFromCache('ball');\n        const spriteSheet = new SpriteSheet(image, 4, 8);\n        const radius = spriteSheet.size.width/2;\n        const rand =  (min:number, max:number) => Math.random() * (max-min) + min;\n        for(let x=0; x<30;x++){\n            const ball = new DefaultSprite({x: rand(sz.width-(radius+wallSize)*2, radius+wallSize),y:rand(sz.height-(radius+wallSize)*2, radius+wallSize)});\n            ball.isAlive = true;\n            ball.speed = Math.random() * 250+100;\n            ball.angle = Math.random() * Math.PI *2;\n            ball.zOrder = Math.random() * 10 -5;\n            ball.canCollide = true;\n            ball.addBehavior(new SpriteSheetBehavior(spriteSheet));\n            ball.size = {width: ball.size.width -2, height: ball.size.height -2}\n            scene.addSprite(ball);\t\n        }\n\t}\n}","\nexport interface PreloadImage{\n    name:string;\n    src:string;\n}\n\n\nfunction makeTransparent(image: HTMLImageElement):HTMLImageElement  {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n    canvas.height = image.height;\n    canvas.width = image.width;\n    ctx.drawImage(image,0,0);\n    const imgd = ctx.getImageData(0, 0, image.width, image.height);\n    const pix = imgd.data;\n    const newColor = {r:0,g:0,b:0, a:0};\n    let top:number[]\n    for (let i = 0, n = pix.length; i <n; i += 4) {\n        const r = pix[i], g = pix[i+1],b = pix[i+2];\n        if(i===0){\n            top = [r,g,b];\n        }\n        if(r === top![0] && g === top![1] && b === top![2]){ \n            // Change the white to whatever.\n            pix[i] = newColor.r;\n            pix[i+1] = newColor.g;\n            pix[i+2] = newColor.b;\n            pix[i+3] = newColor.a;\n        }\n    }\n    ctx.putImageData(imgd, 0,0);\n    const output = document.createElement('img');\n    output.src = canvas.toDataURL('image/png');\n    return output;\n}\n\n\nexport class ImagePreloader{\n    imageCache: Map<string,HTMLImageElement> = new Map();\n    loadsCompleted:number =0;\n    nLoads:number = 0;\n\n    private loadCallback?:() => void;\n\n    registerCallback(callback:() => void  ){\n        if(this.loadsCompleted === this.nLoads)\n            callback();\n        this.loadCallback = callback;\n    }\n    \n    getImageFromCache(key:string):HTMLImageElement{\n        const image = this.imageCache.get(key);\n        this.nLoads++;\n        if(!image)\n            throw Error(\"unable to load image: \" + key);\n        return image;\n    }\n    \n    preLoadImages(images:PreloadImage[]):void{\n        \n        for(let des of images){\n            const image = new Image();\n            this.nLoads++;\n            image.src = des.src;\n            image.onload = this._createOnLoad(image, des.name);\n        }\n    }\n    private _createOnLoad(image:HTMLImageElement, key:string){\n        return () => {\n            const newImage = makeTransparent(image);\n            newImage.onload = () => {\n                this.imageCache.set(key, newImage);\n                if(++this.loadsCompleted === this.nLoads && this.loadCallback){\n                    this.loadCallback();\n                }\n            }\n        };\n    }\n}\n\n//export var __IMAGEPRELOADER__:ImagePreloader = new ImagePreloader();\n","import { Howl, Howler } from 'howler';\n\n\nexport interface PreloadSoundEffect{\n    name:string;\n    src:string;\n}\n\nexport default class SoundEffects {\n    sounds:Map<string, Howl> = new Map();\n    rate:number = 1.0;\n\n    private _mute:boolean = false;\n\n  constructor (effectPreloads:PreloadSoundEffect[]) {\n    for(let effect of effectPreloads )\n        this.sounds.set(effect.name, new Howl({src:effect.src,preload: true}) );\n    this.rate = 1.0;\n    this._mute = false;\n  }\n\n  play (key:string) {\n    const sound = this.sounds.get(key);\n    if(sound){\n        sound.rate(this.rate);\n        sound.play();\n    }else{\n        console.log(`Sound not found! ${key}`);\n    }\n  }\n\n  get mute ():boolean { return this._mute; }\n\n  set mute (mute:boolean) {\n    Howler.mute(mute);\n    this._mute = mute;\n  }\n}\n","import Scene from './Scene';\nimport { ImagePreloader } from './util/ImagePreloader';\nimport { GameInitializer } from './GameInitializer';\nimport SoundEffects from './util/SoundEffects';\n\nexport interface GameEvent{\n    type:string;\n    value:any;\n}\n\nexport interface HandleGameEvent{\n    (event:GameEvent):void;\n}\n\n\nexport class GameController{\n\n    debug: boolean = false;\n    keysPressed: Map<string, boolean> = new Map();\n    imagePreloader:ImagePreloader;\n    soundEffects:SoundEffects;\n    canvas?:HTMLCanvasElement;\n    isShutdown:boolean = false;\n    pause:boolean = false;\n    _mute:boolean = false;\n\n    private readyCallback?: () => void;\n    private _scene?: Scene;\n    private gameInitializer:GameInitializer;\n    private gameEventListeners:HandleGameEvent[] = [];\n    constructor(gameInitializer:GameInitializer){\n        this.gameInitializer = gameInitializer;\n        this.soundEffects = new SoundEffects(gameInitializer.preloadSounds || []);\n        this.imagePreloader = new ImagePreloader();\n        this.imagePreloader.preLoadImages(gameInitializer.preloadImages);\n    }\n\n    init(canvas:HTMLCanvasElement, readyCallback: () => void) {\n        this.readyCallback = readyCallback;\n        this.canvas = canvas;  \n        this.imagePreloader.registerCallback( ()=>{  this._handleImagesLoaded()});\n    }\n\n    restart(){\n        const canvas = this.canvas!;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.gameInitializer.init(this);\n        if(!this.scene)\n            throw Error(\"Game Initializer must set scene.\");\n    }\n\n    transition(transitionScene: Scene, newScene: Scene) {\n        const that = this;\n        transitionScene.addBehavior({\n            handleKill() {\n                that.scene = newScene;\n            }\n        });\n        if (this.scene !== transitionScene)\n            this.scene = transitionScene;\n    }\n\n    set scene(scene: Scene) {\n        if (this.debug)\n            console.log(`SetScene: ${scene.constructor.name}`);\n        scene.debug = this.debug;\n        const canvas = this.canvas;\n        scene.size = {width:canvas!.width, height:canvas!.height};\n        this._scene = scene;\n    }\n    get scene(): Scene {\n        return this._scene!;\n    }\n\n    publishEvent(event:GameEvent){\n        this.gameEventListeners.forEach( (handler) => handler(event));\n    }\n\n    subscribeEvent(gameEventListener:HandleGameEvent){\n        this.gameEventListeners.push(gameEventListener);\n    }\n    set mute(mute:boolean){\n        this._mute = mute;\n        this.soundEffects.mute = mute;\n    }\n    get mute(){\n        return this._mute;\n    }\n    private _handleImagesLoaded(){\n        const that = this;\n        const canvas = this.canvas!;\n        \n        document.addEventListener('keydown', (event) => {\n            that.keysPressed.set(event.key, true);\n        });\n        document.addEventListener('keyup', (event) => {\n            that.keysPressed.delete(event.key);\n        });\n\n        canvas.addEventListener('mousedown', function (e) {\n            const rect = canvas.getBoundingClientRect();\n            const x = e.clientX - rect.left, y = e.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`MouseDown Event: (${x},${y})`);\n            if(!that.pause){\n                that.scene.handleMouseClick(x,y)\n            }\n        });\n        document.addEventListener(\"touchmove\", function (e) {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            const x = touch.clientX - rect.left, y = touch.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`TouchMove Event: (${x},${y})`);\n            if(!that.pause){\n                that.scene.handleTouchMove(x,y);\n            }\n        }, false);\n\n        let lastTime = 0;\n        this.restart();\n        \n        function loop(time: number) {\n            if(that.isShutdown)\n                return;\n            let timeSinceLastAnimation = (!lastTime) ? 0: time - lastTime;\n            lastTime = time;\n            if(timeSinceLastAnimation > 100 || that.pause){\n                //assume animation thread was paused due to moving off window/browser\n                timeSinceLastAnimation = 0;\n            }\n            const ctx = canvas.getContext('2d')!;\n            const size = {width:canvas.width, height: canvas.height};\n            if (size.width !== window.innerWidth || size.height !== window.innerHeight) {\n                // If window size is changed this is called to resize the canvas\n                // It is not called via the resize event as that can fire to often an\n                // debounce makes it feel sluggish so is called from main loop.\n                that.restart();\n            }\n\n            that.keysPressed.forEach((value, key) => that.scene.handleKeyPressed(key));\n\n            ctx.save(); //Freeze redraw\n\n            that.paintBackground(ctx);\n            that.scene.paint({x:0,y:0}, ctx, timeSinceLastAnimation);\n            that.scene.updateModel(timeSinceLastAnimation);\n\n            ctx.restore();//now do redraw\n\n            requestAnimationFrame(loop);\n        }\n        requestAnimationFrame(loop);\n        this.readyCallback!();\n    }\n\n    private paintBackground(ctx: CanvasRenderingContext2D) {\n        if(this.scene.paintBackground)\n            this.scene.paintBackground(ctx);\n        else{\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.scene.size.width, this.scene.size.height);\n        }\n    }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { IconButton, Link } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\ninfoButton: {\n    marginRight: theme.spacing(1),\n  },\n})\n);\n\nexport default function InfoDialog() {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton edge=\"start\" className={classes.infoButton} onClick={handleClickOpen} color=\"primary\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Cicles\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          A simple 2D game library for JavaScript to teach my kids programming.   \n          A demo space game implemented using the library.\n        \n          <br></br>\n          \n          <Link component=\"button\" variant=\"body2\"\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </Link>\n          <br></br><br></br>\n          <Link variant=\"body2\">\n          nickzinn@gmail.com\n          </Link>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            <b>CLOSE</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport './GameComponent.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PauseCircleOutline, PlayCircleOutline, Refresh, VolumeUp, VolumeOff } from '@material-ui/icons';\nimport { BouncingBall } from './sample/BouncingBall';\nimport { GameController} from './gamelib/GameController';\nimport { CircularProgress, createStyles, Theme, WithStyles, withStyles } from '@material-ui/core';\nimport InfoDialog from './InfoDialog';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  controlButton: {\n  },\n  score: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n}\n\ninterface IState{\n  score:number;\n  imagesLoaded:boolean;\n  pause:boolean;\n  mute:boolean;\n}\n\nconst GameComponent = withStyles(styles)( class extends React.Component<Props> {\n \n  canvasRef = React.createRef<HTMLCanvasElement>();\n  gameController:GameController;\n  state:IState;\n\n  constructor(props:Props){\n    super(props);\n    this.gameController= new GameController(new BouncingBall());\n    this.gameController.debug = true;\n    this.state = { score:0, imagesLoaded:false, pause:false, mute:false};\n  }\n  componentDidMount() { \n    const canvas = this.canvasRef.current;\n    this.gameController.init(canvas!, () => this.setState({ imagesLoaded:true }));\n    this.gameController.subscribeEvent( (e) => {\n      if(e.type === 'score')\n        this.setState({score:e.value});\n    })\n  }\n  handleRestart(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.restart();\n  }\n  handlePause(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.pause = !this.gameController.pause;\n    this.setState({pause: this.gameController.pause});\n  }\n  handleMute(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.mute = !this.gameController.mute;\n    this.setState({mute: this.gameController.mute});  \n  }\n  componentWillUnmount(){\n    this.gameController.isShutdown = true;\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n    <React.Fragment>\n      <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar>\n          <InfoDialog></InfoDialog>\n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\n            Circles\n          </Typography>\n          <Typography variant=\"h6\" color=\"primary\" className={classes.score}>\n            Score: {this.state.score}\n          </Typography>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handlePause(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.pause ? <PlayCircleOutline /> : <PauseCircleOutline />}\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleRestart(e)} color=\"primary\" aria-label=\"menu\">\n            <Refresh />\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleMute(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.mute ? <VolumeOff /> : <VolumeUp />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      {!this.state.imagesLoaded &&\n                <React.Fragment>\n                    <Typography variant=\"h2\" gutterBottom>\n                    Loading images...\n                    </Typography>\n                    <CircularProgress />\n                    </React.Fragment>        \n                }\n            <canvas id='Canvas' ref={this.canvasRef} />\n    </React.Fragment>\n  );\n  }\n});\n\nexport  default GameComponent;","import React from 'react';\nimport GameComponent from './GameComponent';\n\n\nfunction App() {\n\n  return (\n      <GameComponent></GameComponent>\n  );\n\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Electrolize',\n  },\n    overrides: {\n\n        MuiCssBaseline: {\n          '@global': {\n            body: {\n                width: '100%',\n                height: '100%',\n                margin: '0',\n            }\n          },\n        },\n      },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-electrolize';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}