{"version":3,"sources":["gamelib/util/ImagePreloader.ts","gamelib/util/SoundEffects.ts","gamelib/tiles/TileMap.ts","gamelib/tiles/TileAtlas.ts","gamelib/GameController.ts","gamecontainer/InfoDialog.tsx","gamecontainer/GameComponent.tsx","gamelib/sprites/DefaultSprite.ts","gamelib/types/Point.ts","gamelib/types/Rectangle.ts","gamelib/types/Vector.ts","gamelib/Scene.ts","gamelib/sprites/behaviors/SpriteSheetBehavior.ts","gamelib/sprites/AnimatedSprite.ts","gamelib/sprites/CountdownSprite.ts","gamelib/sprites/TitleSprite.ts","sample/BouncingBall.ts","sample/space/sprites/Asteroids.ts","sample/space/sprites/Radar.ts","gamelib/sprites/behaviors/SpriteExpirationBehavior.ts","sample/space/sprites/Explosion.ts","sample/space/sprites/Ship.ts","gamelib/sprites/behaviors/TimedBehavior.ts","gamelib/sprites/behaviors/BlendImageBehavior.ts","sample/space/sprites/Player.ts","sample/space/sprites/Enemy.ts","gamelib/sprites/behaviors/TrailingEffectBehavior.ts","sample/space/sprites/Missle.ts","gamelib/sprites/behaviors/FadeOutBehavior.ts","gamelib/sprites/behaviors/FadeInBehavior.ts","sample/space/MainGameScene.ts","sample/space/BetweenLevelScene.ts","sample/space/OpeningSequence.ts","sample/space/SpaceGame.ts","Home.tsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["VALID_TYPES","ImagePreloader","imageCache","Map","loadsCompleted","nLoads","loadCallback","callback","this","key","spriteSheet","get","Error","image","images","des","indexOf","type","Image","src","onload","_createOnLoad","noTransparent","_cache","newImage","canvas","document","createElement","ctx","getContext","height","width","drawImage","top","imgd","getImageData","pix","data","newColor","i","n","length","r","g","b","putImageData","output","toDataURL","makeTransparent","rows","columns","sheet","SpriteSheetImpl","set","name","description","size","frameCount","srcSize","Math","floor","scale","_preRenderScaledImage","frame","angle","source","dest","column","row","fixColumn","fixRow","min","x","position","y","angleOffset","translate","rotate","srcX","srcY","setTransform","w","h","SoundEffects","effectPreloads","sounds","rate","_mute","effect","Howl","preload","sound","play","console","log","mute","Howler","TileMap","tileAtlas","logicGrid","tileSize","undefined","worldSize","age","forEach","a","convertLogicMapStringToIndex","calcDefaultTileSize","layer","index","nameToIndexMap","getRowAtY","getColumnAtX","getTilesAt","id","getTile","camera","timeSinceLastAnimation","frameCount60FPS","startRow","endRow","startColumn","endColumn","wsz","tsz","x1","y1","tile","paint","grid","StaticTile","TileAtlas","imagePreloader","tiles","getSpriteSheetFromCache","push","logicMap","rv","array","Array","j","addTile","GameController","gameInitializer","debug","keysPressed","soundEffects","isShutdown","pause","touchEvent","readyCallback","_scene","events","gameEventListeners","_timer","preloadSounds","preLoadImages","preloadImages","registerCallback","_handleImagesLoaded","window","innerWidth","innerHeight","init","scene","event","value","gameEventListener","that","keyDown","preventDefault","keyUp","delete","mouseDown","e","rect","getBoundingClientRect","clientX","left","clientY","handleMouseClick","mouseMove","mouseUp","touchMove","touch","targetTouches","touchEnd","touchStart","touchCancel","addEventListener","lastTime","restart","requestAnimationFrame","loop","time","removeEventListener","_updateScene","handleKeyPressed","handleTouch","save","restore","updateModel","queueMicrotask","handler","isAlive","handleKill","useStyles","makeStyles","theme","createStyles","infoButton","InfoDialog","React","useState","open","setOpen","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","IconButton","edge","className","onClick","color","aria-label","Info","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Link","component","variant","DialogActions","Button","autoFocus","GameComponent","withStyles","root","flexGrow","homeButton","textTransform","controlButton","score","marginRight","spacing","title","backdrop","zIndex","drawer","props","canvasRef","createRef","gameController","state","imagesLoaded","current","setState","subscribeEvent","stopPropagation","Fragment","AppBar","style","background","boxShadow","Toolbar","to","Typography","handlePause","PlayCircleOutline","PauseCircleOutline","handleRestart","Refresh","handleMute","VolumeOff","VolumeUp","Backdrop","CircularProgress","ref","Component","DefaultSprite","speed","acceleration","canCollide","isFixedPosition","zOrder","behaviors","behavior","splice","location","beforePaint","paintStep","afterPaint","timeSinceLastUpdate","slice","pointAsInt","point","round","union","rect1","rect2","tx2","ty2","rx2","ry2","tx1","ty1","rx1","ry1","intersects","tw","th","rw","rh","tx","ty","rx","ry","centerPosition","vectorToXYSpeed","vector","cos","sin","addVectors","vector1","vector2","xy","speed1","speed2","atan2","hypot","remove","Scene","controller","modelSize","tileMap","viewPort","wrapAround","sceneSpeed","sprites","collisionListeners","count","totalTime","filter","s","pointInRect","sprite","_handleWrap","_validateSprite","comparator","low","high","mid","c","insert","priorPosition","handleCollision","logicalGrid","setWorldSize","handleMovement","dx","tempArray","pop","newRect","oldRect","pointSpeed","newPosition","wrapped","sign","_handleCollision","error","removeSprite","collisionSprite","otherSprite","paintBackground","displayedSprites","pos","fillStyle","font","fillText","fillRect","addSprite","SpriteSheetBehavior","animateOnce","framesPerSecond","abs","getAngle","PI","timePerFrame","AnimatedSprite","spriteSheetBehavior","addBehavior","CountdownSprite","timeInMillis","fontStyle","fontHeight","toString","displayTime","TitleSprite","subtitle1","subtitle2","oldFont","shadowText","txt","measure","measureText","hpos","subHeight","createWall","isVertical","random","BouncingBall","launchInstructions","publishEvent","getSpritesAtPoint","sz","rand","max","randPosition","ball","radius","countdown","launchGameOverScene","launchGame","win","generateOpenningSequenceAsteroids","minn","Radar","margin","strokeStyle","strokeRect","topX","topY","SpriteExpirationBehavior","expirationTime","newSmallExplosion","newExplosion","newBigExplosion","explosion","Ship","shipAngle","lastMissleFired","amount","newVector","TimedBehavior","removeBehavior","handleTimeUp","SUPPORTED_BLEND_METHODS","BlendImageBehavior","blendAmount","compositeOperation","includes","center","w2","h2","location2","globalAlpha","globalCompositeOperation","Player","shield","viewport","shieldSpriteSheet","hit","Enemy","xDist","player","yDist","distance","requiredHeading","crossproduct","level","fire","move","TrailingEffectBehavior","alpha","delay","lastLocation","oldAlpha","Missle","owner","expiration","missleHit","FadeOutBehavior","FadeInBehavior","MainGameScene","_score","stars","alienCount","setTiles","fill","area","addSprites","roids","generateGameAsteroids","ship","missle","right","highscore","launchOpeningSequence","launchBetweenLevelsScene","hitPoints","gameOver","animateShield","nextLevel","SpaceGame","appBar","container","marginTop","marginBottom","padding","up","maxWidth","media","link","textDecoration","githublink","marginLeft","Home","noWrap","Box","overflow","Grid","alignItems","justify","direction","Card","CardActionArea","CardMedia","CardContent","gutterBottom","App","hashType","path","Boolean","hostname","match","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","body","h5","fontSize","ReactDOM","render","ThemeProvider","CssBaseline","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"oYAgBMA,EAAc,CAAC,SAAU,UAAW,UAgCnC,IAAMC,EAAb,iDACIC,WAA0C,IAAIC,IADlD,KAEIC,eAAuB,EAF3B,KAGIC,OAAgB,EAHpB,KAKYC,kBALZ,+DAOqBC,GACVC,KAAKJ,iBAAmBI,KAAKH,QAC5BE,IACJC,KAAKF,aAAeC,IAV5B,8CAa4BE,GACpB,IAAMC,EAAcF,KAAKN,WAAWS,IAAIF,GACxC,IAAIC,EACA,MAAME,MAAM,yBAA2BH,GAC3C,OAAOC,IAjBf,wCAmBsBD,GACd,IAAMC,EAAcF,KAAKN,WAAWS,IAAIF,GACxC,IAAIC,EACA,MAAME,MAAM,yBAA2BH,GAC3C,OAAOC,EAAYG,QAvB3B,oCA0BkBC,GAA4B,IAAD,gBAEtBA,GAFsB,IAErC,IAAI,EAAJ,qBAAsB,CAAC,IAAfC,EAAc,QAClB,IAAsC,IAAnCf,EAAYgB,QAAQD,EAAIE,MACvB,MAAML,MAAM,iBAAD,OAAkBG,EAAIE,OACrC,IAAMJ,EAAQ,IAAIK,MAClBV,KAAKH,SACLQ,EAAMM,IAAMJ,EAAII,IAChBN,EAAMO,OAASZ,KAAKa,cAAcR,EAAOE,IARR,iCA1B7C,oCAqC0BF,EAAwBE,GAAkB,IAAD,OAC3D,OAAO,WACH,GAAGA,EAAIO,cACH,EAAKC,OAAOV,EAAOE,EAAnB,OACC,CACD,IAAMS,EAxEtB,SAAyBX,GACrB,IAAMY,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAC9BJ,EAAOK,OAASjB,EAAMiB,OACtBL,EAAOM,MAAQlB,EAAMkB,MACrBH,EAAII,UAAUnB,EAAM,EAAE,GAKtB,IAJA,IAGIoB,EAHEC,EAAON,EAAIO,aAAa,EAAG,EAAGtB,EAAMkB,MAAOlB,EAAMiB,QACjDM,EAAMF,EAAKG,KACXC,EAAc,EAAdA,EAAkB,EAAlBA,EAAsB,EAAtBA,EAA2B,EAExBC,EAAI,EAAGC,EAAIJ,EAAIK,OAAQF,EAAGC,EAAGD,GAAK,EAAG,CAC1C,IAAMG,EAAIN,EAAIG,GAAII,EAAIP,EAAIG,EAAE,GAAGK,EAAIR,EAAIG,EAAE,GAClC,IAAJA,IACCN,EAAM,CAACS,EAAEC,EAAEC,IAEZF,IAAMT,EAAK,IAAMU,IAAMV,EAAK,IAAMW,IAAMX,EAAK,KAE5CG,EAAIG,GAAKD,EACTF,EAAIG,EAAE,GAAKD,EACXF,EAAIG,EAAE,GAAKD,EACXF,EAAIG,EAAE,GAAKD,GAGnBV,EAAIiB,aAAaX,EAAM,EAAE,GACzB,IAAMY,EAASpB,SAASC,cAAc,OAEtC,OADAmB,EAAO3B,IAAMM,EAAOsB,UAAU,aACvBD,EA8CsBE,CAAgBnC,GACjCW,EAASJ,OAAU,EAAKG,OAAOC,EAAUT,OA3CzD,6BA+CmBF,EAAwBE,GAAkB,IAAD,OACpD,OAAO,WACH,IAAMkC,EAAQlC,EAAIkC,KAAQlC,EAAIkC,KAAO,EAC/BC,EAAWnC,EAAImC,QAAWnC,EAAImC,QAAS,EAEvCC,EAAQ,IAAIC,EAAgBvC,EAAOoC,EAAMC,EAASnC,GACxD,EAAKb,WAAWmD,IAAItC,EAAIuC,KAAMH,KACzB,EAAK/C,iBAAmB,EAAKC,QAAU,EAAKC,cAC7C,EAAKA,oBAvDrB,KA6DM8C,E,WAWF,WAAYvC,EAAwBoC,EAAaC,EAAgBK,GAA2B,yBAVnFN,UAUkF,OATlFC,aASkF,OARlFM,UAQkF,OAPlFvC,UAOkF,OANlFwC,gBAMkF,OAJ3FF,iBAI2F,OAH3F1C,WAG2F,OAFnF6C,aAEmF,EACvFlD,KAAKK,MAAQA,EACbL,KAAKyC,KAAOA,EACZzC,KAAK0C,QAAUA,EACf1C,KAAKkD,QAAU,CAAC3B,MAAM4B,KAAKC,MAAMpD,KAAKK,MAAMkB,MAAMvB,KAAK0C,SACnDpB,OAAQ6B,KAAKC,MAAMpD,KAAKK,MAAMiB,OAAOtB,KAAKyC,OAC3CM,EAAYM,OACXrD,KAAKgD,KAAO,CAACzB,MAAM4B,KAAKC,MAAMpD,KAAKkD,QAAQ3B,MAAQwB,EAAYM,OAAQ/B,OAAO6B,KAAKC,MAAMpD,KAAKkD,QAAQ5B,OAASyB,EAAYM,QAC3HrD,KAAKsD,sBAAsBP,EAAYM,QAEvCrD,KAAKgD,KAAOhD,KAAKkD,QAErBlD,KAAK+C,YAAcA,EACnB/C,KAAKS,KAAOsC,EAAYtC,KACxBT,KAAKiD,WAAajD,KAAKyC,KAAKzC,KAAK0C,Q,kDAE/BtB,EAA+BmC,EAAcC,EAAcC,EAAkBC,GAC/E,IAAIC,EAAQC,EAEiB,WAA1B5D,KAAK+C,YAAYtC,MAChBkD,EAAU3D,KAAK+C,YAAYc,UAAa7D,KAAK+C,YAAYc,UAAY,EACrED,EAAO5D,KAAK+C,YAAYe,OAAU9D,KAAK+C,YAAYe,OAAS,EAC5DN,EAAO,IAEPD,EAAQJ,KAAKY,IAAIR,EAAOvD,KAAKiD,WAAW,GACxCU,EAASR,KAAKC,MAAMG,EAAQvD,KAAK0C,SACjCkB,EAAMT,KAAKC,MAAOG,EAAMvD,KAAK0C,UAGjC,IAAIsB,EAAIN,EAAKO,SAASD,EAAGE,EAAGR,EAAKO,SAASC,EAC1C,GAAGN,EAAI,GAAKA,GAAO5D,KAAKyC,MAAQkB,EAAS,GAAKA,GAAU3D,KAAK0C,QACzD,MAAMtC,MAAM,mDAAD,OAAoDwD,EAApD,YAA2DD,EAA3D,MACZ3D,KAAK+C,YAAYoB,cAChBX,GAASxD,KAAK+C,YAAYoB,aAC3BX,IACCpC,EAAIgD,UAAUJ,EAAIhE,KAAKgD,KAAKzB,MAAQ,EAAK2C,EAAGlE,KAAKgD,KAAK1B,OAAS,GAC/DF,EAAIiD,OAAOb,GACXQ,EAAI,EAAIhE,KAAKgD,KAAKzB,MAAQ,EAC1B2C,EAAI,EAAIlE,KAAKgD,KAAK1B,OAAS,GAG/B,IAAMgD,EAAOnB,KAAKC,MAAMpD,KAAKK,MAAMkB,OAAUoC,EAAQ3D,KAAK0C,UAAYe,EAAOQ,SAASD,EAChFO,EAAOpB,KAAKC,MAAMpD,KAAKK,MAAMiB,QAAWsC,EAAK5D,KAAKyC,OAASgB,EAAOQ,SAASC,EAC7E9C,EAAII,UAAUxB,KAAKK,MAAOiE,EAAMC,EAAMd,EAAOT,KAAKzB,MAAOkC,EAAOT,KAAK1B,OAChE0C,EAAGE,EAAGR,EAAKV,KAAKzB,MAAOmC,EAAKV,KAAK1B,QACvCkC,GACCpC,EAAIoD,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,K,4CAGVnB,GAAc,IAAD,OACjCpC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MACxBhB,EAAQL,KAAKK,MAEboE,EAAItB,KAAKC,MAAM/C,EAAMkB,MAAQ8B,GAASqB,EAAIvB,KAAKC,MAAM/C,EAAMiB,OAAS+B,GAC1EpC,EAAOK,OAASoD,EAChBzD,EAAOM,MAAQkD,EACfrD,EAAII,UAAUxB,KAAKK,MAAO,EAAG,EAAGA,EAAMkB,MAAOlB,EAAMiB,OAAQ,EAAG,EAAGmD,EAAGC,GACpE,IAAMpC,EAASpB,SAASC,cAAc,OACtCmB,EAAO3B,IAAMM,EAAOsB,UAAU,aAC9BD,EAAO1B,OAAS,WACZ,EAAKsC,QAAU,CAAC3B,MAAM4B,KAAKC,MAAMqB,EAAE,EAAK/B,SACpCpB,OAAQ6B,KAAKC,MAAMsB,EAAE,EAAKjC,OAC9B,EAAKpC,MAAQiC,O,aC/KJqC,E,WAMnB,WAAaC,GAAsC,yBALjDC,OAA2B,IAAIlF,IAKiB,KAJhDmF,KAAc,EAIkC,KAFxCC,OAAgB,EAEwB,oBAC9BH,GAD8B,IAChD,IAAI,EAAJ,0BAAQI,EAAR,QACIhF,KAAK6E,OAAOhC,IAAImC,EAAOlC,KAAM,IAAImC,OAAK,CAACtE,IAAIqE,EAAOrE,IAAIuE,SAAS,MAFnB,8BAGhDlF,KAAK8E,KAAO,EACZ9E,KAAK+E,OAAQ,E,iDAGT9E,GACJ,IAAMkF,EAAQnF,KAAK6E,OAAO1E,IAAIF,GAC3BkF,GACCA,EAAML,KAAK9E,KAAK8E,MAChBK,EAAMC,QAENC,QAAQC,IAAR,2BAAgCrF,M,2BAIhB,OAAOD,KAAK+E,O,aAExBQ,GACRC,SAAOD,KAAKA,GACZvF,KAAK+E,MAAQQ,M,KCCJE,EAAb,WAWI,WAAYC,EAAqBjD,EAAaC,EAAgBiD,GAA2D,IAArCC,EAAoC,4DAAVC,EAAU,yBAVxHD,cAUwH,OATxHF,eASwH,OARxHjD,UAQwH,OAPxHC,aAOwH,OAJvGiD,eAIuG,OAF/GG,eAE+G,OA2ChHC,IAAK,EA1CTJ,EAAUK,SAAS,SAACC,GAChB,IAAIA,GAAMxD,EAAKC,IAAYuD,EAAEhE,OACzB,MAAM7B,MAAM,oBAAD,QAAsB6F,GAAKA,EAAEhE,OAA7B,gCAA2DQ,EAA3D,qBAA4EC,EAA5E,UAEnB1C,KAAK0F,UAAYA,EACjB1F,KAAKyC,KAAOA,EACZzC,KAAK0C,QAAUA,EACf1C,KAAK2F,UAAYD,EAAUQ,6BAA6BP,GACxD3F,KAAK4F,cAAyBC,IAAbD,EAA0BA,EAAWO,EAAoBnG,KAAK2F,UAAWD,GAC1F1F,KAAK8F,UAAY,CAACvE,MAAOvB,KAAK4F,SAASrE,MAAQmB,EAASpB,OAAQtB,KAAK4F,SAAStE,OAASmB,GArB/F,oDAwBYK,EAAasD,EAAcxC,EAAYD,GAC3C,IAAM0C,EAAQrG,KAAK0F,UAAUY,eAAenG,IAAI2C,GAChD,IAAIuD,EACA,MAAMjG,MAAM,kBAChBJ,KAAK2F,UAAUS,GAAOpG,KAAKyC,KAAOmB,EAAMD,GAAU0C,IA5B1D,iCA+BeD,EAAcxC,EAAYD,GACjC3D,KAAK2F,UAAUS,GAAOpG,KAAKyC,KAAOmB,EAAMD,IA9DtB,IA8B1B,gCAmCcO,GACN,OAAOf,KAAKC,MAAMc,EAAGlE,KAAK4F,SAAStE,UApC3C,mCAuCiB0C,GACT,OAAOb,KAAKC,MAAMY,EAAGhE,KAAK4F,SAASrE,SAxC3C,yCA2CuB0C,EAAgBmC,GAC/B,IAAMxC,EAAM5D,KAAKuG,UAAUtC,EAASC,GAC9BP,EAAS3D,KAAKwG,aAAavC,EAASD,GAC1C,OAAOhE,KAAKyG,WAAW7C,EAAKD,EAAQyC,KA9C5C,iCAiDexC,EAAYD,EAAeyC,GAClC,IAAMM,EAAK1G,KAAK2F,UAAUS,GAAOpG,KAAKyC,KAAOmB,EAAMD,GACnD,OAjFkB,IAiFV+C,OAAqBb,EAAY7F,KAAK0F,UAAUiB,QAAQD,KAnDxE,4BAuDUE,EAAgBxF,EAA+ByF,GACjD7G,KAAK+F,KAAKc,EAOV,IANA,IAAMC,EAAkB3D,KAAKC,MAAMpD,KAAK+F,KAAO,IAAK,KAC9CgB,EAAW/G,KAAKuG,UAAUK,EAAO3C,SAASC,GAC1C8C,EAAShH,KAAKuG,UAAUK,EAAO3C,SAASC,EAAI0C,EAAO5D,KAAK1B,QACxD2F,EAAcjH,KAAKwG,aAAaI,EAAO3C,SAASD,GAChDkD,EAAYlH,KAAKwG,aAAcI,EAAO3C,SAASD,EAAI4C,EAAO5D,KAAKzB,OAC/D4F,EAAMnH,KAAK8F,UAAWsB,EAAMpH,KAAK4F,SAC/BjC,EAASsD,EAAatD,GAASuD,EAAWvD,IAC9C,IAAI,IAAIC,EAAMmD,EAAUnD,GAAKoD,EAAQpD,IAAM,CAEvC,IAAIa,EAAGtB,KAAKY,IAAKqD,EAAI7F,MAAO4F,EAAI5F,MAAUoC,EAAUyD,EAAI7F,OACpDmD,EAAGvB,KAAKY,IAAKqD,EAAI9F,OAAQ6F,EAAI7F,OAAWsC,EAAOwD,EAAI9F,QAEnD+F,EAAO1D,EAAUyD,EAAI7F,MAAUqF,EAAO3C,SAASD,EAC/CsD,EAAO1D,EAAOwD,EAAI9F,OAAWsF,EAAO3C,SAASC,EAE7CI,EAAK,EAAGC,EAAK,EAEjB,KAAG8C,EAAK,IACJ/C,GAAa,EAAN+C,EAEPA,EAAI,GADJ5C,GAAKH,IAEG,QAGTgD,EAAK,IACJ/C,GAAa,EAAN+C,EAEPA,EAAI,GADJ5C,GAAKH,IAEG,OAGT8C,EAAG5C,EAAImC,EAAO5D,KAAKzB,QAClBkD,GAAO4C,EAAK5C,EAAKmC,EAAO5D,KAAKzB,QACvB,MAGP+F,EAAG5C,EAAIkC,EAAO5D,KAAK1B,SAClBoD,GAAO4C,EAAK5C,EAAKkC,EAAO5D,KAAK1B,SACvB,IAGV,IAAI,IAAI8E,EAAQ,EAAGA,EAAMpG,KAAK2F,UAAU1D,OAAQmE,IAAQ,CACpD,IAAMmB,EAAOvH,KAAKyG,WAAW7C,EAAKD,EAAQyC,GACvCmB,GACCA,EAAKC,MAAMpG,EAAK0F,EAAiB,EAAG,CAAC7C,SAAS,CAACD,EAAEM,EAAMJ,EAAEK,GAAOvB,KAAM,CAACzB,MAAMkD,EAAGnD,OAAOoD,IAAK,CAACT,SAAS,CAACD,EAAEqD,EAAInD,EAAEoD,GAAKtE,KAAM,CAACzB,MAAMkD,EAAGnD,OAAOoD,WArGnK,KA8GA,SAASyB,EAAoBR,EAAsBD,GAC/C,IADwE,EACpEW,OAA2BR,EADyC,cAExDF,GAFwD,IAExE,IAAI,EAAJ,qBAA0B,CAAC,IAAD,EAAlB8B,EAAkB,sBACTA,GADS,IACtB,IAAI,EAAJ,qBAAkB,CAAC,IAAX1F,EAAU,QACd,IAhJc,IAgJXA,EAAiB,CAChBsE,EAAQtE,EACR,QAJc,gCAF8C,8BAUxE,QAAa8D,IAAVQ,EACC,MAAMjG,MAAM,wBAGhB,OADasF,EAAUiB,QAAQN,GACnBrD,K,ICzJV0E,E,WAKF,WAAY5E,EAAa5C,GAAyB,yBAJlD4C,UAIiD,OAHjDE,UAGiD,OAFjD9C,iBAEiD,EAC7CF,KAAKE,YAAcA,EACnBF,KAAKgD,KAAO9C,EAAY8C,KACxBhD,KAAK8C,KAAOA,E,kDAGV1B,EAA+B0F,EAAwBtD,EAAcC,EAAkBC,GACzF1D,KAAKE,YAAYsH,MAAMpG,EAAK0F,EAAiBtD,EAAOC,EAAQC,O,KAIvDiE,EAAb,WAKI,WAAYC,GAA+B,yBAJ3CC,MAAe,GAI2B,KAH1CvB,eAAqC,IAAI3G,IAGC,KAF1CiI,oBAE0C,EACtC5H,KAAK4H,eAAiBA,EAN9B,oDASYvB,GACJ,OAAOrG,KAAK6H,MAAMxB,KAV1B,8BAYYvD,GACJ,IAAM5C,EAAcF,KAAK4H,eAAeE,wBAAwBhF,GAC1DyE,EAAO,IAAIG,EAAW5E,EAAM5C,GAC5BmG,EAAQrG,KAAK6H,MAAME,KAAKR,GAAO,EAErC,OADAvH,KAAKsG,eAAezD,IAAI0E,EAAKzE,KAAMuD,GAC5BA,IAjBf,mDAmBiC2B,GAEzB,IADA,IAAMC,EAAgB,GACdlG,EAAE,EAAGA,EAAGiG,EAAS/F,OAAQF,IAAI,CAEjC,IADA,IAAMmG,EAAQ,IAAIC,MAAcH,EAASjG,GAAGE,QACpCmG,EAAE,EAAGA,EAAEJ,EAASjG,GAAGE,OAAQmG,IAAI,CACnC,IAAMtF,EAAOkF,EAASjG,GAAGqG,GACrB/B,OAAK,EACLvD,GAAwB,IAAhBA,EAAKb,YAIA4D,KADbQ,EAAQrG,KAAKsG,eAAenG,IAAI2C,MAE5BuD,EAAQrG,KAAKqI,QAAQvF,IAJzBuD,GD5CM,ECmDV6B,EAAME,GAAK/B,EAEf4B,EAAGlG,GAAKmG,EAEZ,OAAOD,MAtCf,KCNaK,EAAb,WAmBI,WAAYC,GAAmB,yBAjB/BC,OAAiB,EAiBa,KAhB9BC,YAAoC,IAAI9I,IAgBV,KAf9BiI,oBAe8B,OAd9Bc,kBAc8B,OAb9BzH,YAa8B,OAZ9B0H,YAAqB,EAYS,KAX9BC,OAAgB,EAWc,KAV9BL,qBAU8B,OAT9BM,gBAS8B,OAR9BnD,eAQ8B,OANtBX,OAAgB,EAMM,KALtB+D,mBAKsB,OAJtBC,YAIsB,OAHtBC,OAAqB,GAGC,KADtBC,mBAAuC,GACjB,KAwJtBC,OAAQ,EAvJZlJ,KAAKuI,gBAAkBA,EACvBvI,KAAK0I,aAAe,IAAI/D,EAAa4D,EAAgBY,eAAiB,IACtEnJ,KAAK4H,eAAiB,IAAInI,EAC1BO,KAAK4H,eAAewB,cAAcb,EAAgBc,eAClDrJ,KAAK0F,UAAY,IAAIiC,EAAU3H,KAAK4H,gBAxB5C,iDA2BS3G,EAA0B6H,GAA4B,IAAD,OACtD9I,KAAK8I,cAAgBA,EACrB9I,KAAKiB,OAASA,EACdjB,KAAK4H,eAAe0B,kBAAkB,WAAO,EAAKC,2BA9B1D,gCAkCQ,IAAMtI,EAASjB,KAAKiB,OAIpB,GAHAA,EAAOM,MAAQiI,OAAOC,WACtBxI,EAAOK,OAASkI,OAAOE,YACvB1J,KAAKuI,gBAAgBoB,KAAK3J,OACtBA,KAAK4J,MACL,MAAMxJ,MAAM,sCAvCxB,mCAuDiByJ,GACN7J,KAAKwI,OACAnD,QAAQC,IAAR,+BAAoCuE,EAAMpJ,KAA1C,aAAmDoJ,EAAMC,MAAzD,MACR9J,KAAKgJ,OAAOjB,KAAK8B,KA1DzB,qCA6DmBE,GACX/J,KAAKiJ,mBAAmBlB,KAAKgC,KA9DrC,4CAuEkC,IAAD,OACnBC,EAAOhK,KACPiB,EAASjB,KAAKiB,OACdgJ,EAAU,SAACJ,GAAyBA,EAAMK,iBAAkB,EAAKzB,YAAY5F,IAAIgH,EAAM5J,KAAK,IAC5FkK,EAAQ,SAACN,GAAyBA,EAAMK,iBAAkBF,EAAKvB,YAAY2B,OAAOP,EAAM5J,MACxFoK,EAAY,SAACC,GACf,IAAMC,EAAOtJ,EAAOuJ,wBACdxG,EAAIsG,EAAEG,QAAUF,EAAKG,KAAMxG,EAAIoG,EAAEK,QAAUJ,EAAK9I,IACtD6I,EAAEJ,iBACCF,EAAKxB,OACJnD,QAAQC,IAAR,4BAAiCtB,EAAjC,YAAsCE,EAAtC,OACA8F,EAAKpB,OAASoB,EAAKJ,QACnBI,EAAKJ,MAAMgB,iBAAiB5G,EAAEE,GAC9B,EAAK2E,WAAa,CAAC7E,IAAEE,OAGvB2G,EAAY,SAACP,GACf,IAAMC,EAAOtJ,EAAOuJ,wBACpBF,EAAEJ,iBACC,EAAKrB,aACJ,EAAKA,WAAa,CAAC7E,EAAEsG,EAAEG,QAAUF,EAAKG,KAAKxG,EAAEoG,EAAEK,QAAUJ,EAAK9I,OAEhEqJ,EAAU,SAACR,GACb,EAAKzB,gBAAahD,EAClByE,EAAEJ,kBAEAa,EAAY,SAACT,GACf,IAAMC,EAAOtJ,EAAOuJ,wBACdQ,EAAQV,EAAEW,cAAc,GAC9BX,EAAEJ,iBACF,EAAKrB,WAAa,CAAC7E,EAAEgH,EAAMP,QAAUF,EAAKG,KAAMxG,EAAG8G,EAAML,QAAUJ,EAAK9I,MAEtEyJ,EAAW,SAACZ,GACd,EAAKzB,gBAAahD,EAClByE,EAAEJ,kBAEAiB,EAAa,SAACb,GAChB,IAAMC,EAAOtJ,EAAOuJ,wBACdQ,EAAQV,EAAEW,cAAc,GAC9BX,EAAEJ,iBACF,EAAKrB,WAAa,CAAC7E,EAAEgH,EAAMP,QAAUF,EAAKG,KAAMxG,EAAG8G,EAAML,QAAUJ,EAAK9I,MACpEuI,EAAKpB,OAASoB,EAAKJ,OACnBI,EAAKJ,MAAMgB,iBAAiB,EAAK/B,WAAW7E,EAAE,EAAK6E,WAAW3E,IAEhEkH,EAAc,SAACd,GACjB,EAAKzB,gBAAahD,EAClByE,EAAEJ,kBAGNV,OAAO6B,iBAAiB,UAAWpB,GACnCT,OAAO6B,iBAAiB,QAAQlB,GAChClJ,EAAOoK,iBAAiB,YAAahB,GACrCpJ,EAAOoK,iBAAiB,YAAaR,GACrC5J,EAAOoK,iBAAiB,UAAWP,GACnC7J,EAAOoK,iBAAiB,YAAaN,GAAW,GAChD9J,EAAOoK,iBAAiB,WAAYH,GAAU,GAC9CjK,EAAOoK,iBAAiB,cAAeD,GAAa,GACpDnK,EAAOoK,iBAAiB,aAAcF,GAAY,GAElD,IAAIG,EAAW,EACftL,KAAKuL,UAoCLC,uBAlCA,SAASC,EAAKC,GACV,GAAG1B,EAAKrB,WAYJ,OAXGqB,EAAKxB,OACJnD,QAAQC,IAAI,kCAChBkE,OAAOmC,oBAAoB,UAAW1B,GACtCT,OAAOmC,oBAAoB,QAAQxB,GACnClJ,EAAO0K,oBAAoB,YAAatB,GACxCpJ,EAAO0K,oBAAoB,YAAad,GACxC5J,EAAO0K,oBAAoB,UAAWb,GACtC7J,EAAO0K,oBAAoB,YAAaZ,GAAW,GACnD9J,EAAO0K,oBAAoB,WAAYT,GAAU,GACjDjK,EAAO0K,oBAAoB,cAAeP,GAAa,QACvDnK,EAAO0K,oBAAoB,aAAcR,GAAY,GAGzD,IAAItE,EAA2ByE,EAAeI,EAAOJ,EAAV,EAC3CA,EAAWI,GACR7E,EAAyB,KAAOmD,EAAKpB,SAEpC/B,EAAyB,GAE7B,IAAMzF,EAAMH,EAAOI,WAAW,MACxB2B,EAAc/B,EAAOM,MAArByB,EAAoC/B,EAAOK,OAC7C0B,IAAewG,OAAOC,YAAczG,IAAgBwG,OAAOE,aAI3DM,EAAKuB,UAGTvB,EAAK4B,aAAaxK,EAAKyF,GAEvB2E,sBAAsBC,MAG1BzL,KAAK8I,kBAxKb,mCA4KyB1H,EAA6ByF,GAA+B,IAAD,OA0B5E,GAzBA7G,KAAKyI,YAAYzC,SAAQ,SAAC8D,EAAO7J,GAC1B,EAAKuI,OACJnD,QAAQC,IAAR,4BAAiCrF,IAErC,EAAK2J,MAAMiC,iBAAiB5L,MAE7BD,KAAK6I,YACJ7I,KAAK4J,MAAMkC,YAAY9L,KAAK6I,WAAW7E,EAAEhE,KAAK6I,WAAW3E,GAG7D9C,EAAI2K,OACJ/L,KAAK4J,MAAMpC,MAAM,CAACxD,EAAE,EAAEE,EAAE,GAAI9C,EAAKyF,GACjCzF,EAAI4K,UAEJhM,KAAK4J,MAAMqC,YAAYpF,IAGjB7G,KAAKkJ,QAAUrC,GAA0B,MAC3C2C,OAAO0C,gBAAgB,WACnB,EAAKlD,OAAOhD,SAAS,SAAC6D,GAAD,OAAW,EAAKZ,mBAAmBjD,SAAS,SAACmG,GAAD,OAAaA,EAAQtC,SACtF,EAAKb,OAAS,MAElBhJ,KAAKkJ,OAAS,IAGdlJ,KAAK4J,MAAMwC,UACRpM,KAAKwI,OACJnD,QAAQC,IAAR,wBAA6BtF,KAAK4J,MAAM9G,OAC5C9C,KAAK4J,MAAMyC,cACPrM,KAAK4J,MAAMwC,SACX,MAAMhM,MAAM,kDAAD,OAAmDJ,KAAK4J,MAAM9G,KAA9D,QA3M3B,0BA0Cc8G,GACF5J,KAAKwI,OACLnD,QAAQC,IAAR,oBAAyBsE,EAAM9G,OACnC8G,EAAMpB,MAAQxI,KAAKwI,MACnB,IAAMvH,EAASjB,KAAKiB,OACpB2I,EAAM5G,KAAO,CAACzB,MAAMN,EAAQM,MAAOD,OAAOL,EAAQK,QAClDtB,KAAK+I,OAASa,EACd5J,KAAK6I,gBAAahD,GAjD1B,eAoDQ,OAAO7F,KAAK+I,SApDpB,yBAgEaxD,GACLvF,KAAK+E,MAAQQ,EACbvF,KAAK0I,aAAanD,KAAOA,GAlEjC,eAqEQ,OAAOvF,KAAK+E,UArEpB,K,4ICHMuH,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACbC,WAAY,QAMG,SAASC,IAAc,IAAD,EACXC,IAAMC,UAAS,GADJ,mBAC5BC,EAD4B,KACtBC,EADsB,KAE7BC,EAAUV,IACVE,EAAQS,cACRC,EAAaC,YAAcX,EAAMY,YAAYC,KAAK,OAMlDC,EAAc,WAClBP,GAAQ,IAGV,OACE,6BACE,kBAACQ,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQN,WAAYgB,QAVpC,WACtBX,GAAQ,IAS4EY,MAAM,UAAUC,aAAW,QAC3G,kBAACC,EAAA,EAAD,OAEF,kBAACC,EAAA,EAAD,CACEZ,WAAYA,EACZJ,KAAMA,EACNiB,QAAST,EACTU,kBAAgB,2BAEhB,kBAACC,EAAA,EAAD,CAAavH,GAAG,2BAA2B,UAC3C,kBAACwH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,8HAIA,6BAEA,kBAACC,EAAA,EAAD,CAAMC,UAAU,SAASC,QAAQ,QACjCZ,QAAS,kBAAMlE,OAAOsD,KAAK,yCAD3B,qBAIA,6BAAS,6BACT,kBAACsB,EAAA,EAAD,CAAME,QAAQ,SAAd,wBAKF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQd,QAASJ,EAAaK,MAAM,UAAUc,WAAS,GACrD,wCCtDZ,IA2GgBC,EA3EMC,aAhCP,SAACnC,GAAD,OAAkBC,YAAa,CAC5CmC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,cAAe,QAEjBC,cAAe,GAEfC,MAAO,CACLC,YAAa1C,EAAM2C,QAAQ,IAE7BC,MAAO,CACLP,SAAU,GAEZQ,SAAU,CACRC,OAAQ9C,EAAM8C,OAAOC,OAAS,EAC9B5B,MAAO,YAeWgB,CAAA,kDAMpB,WAAYa,GAAgB,IAAD,8BACzB,cAAMA,IALRC,UAAY7C,IAAM8C,YAIS,EAH3BC,oBAG2B,IAF3BC,WAE2B,EAEzB,EAAKD,eAAgB,IAAIrH,EAAkBkH,EAAMjH,iBAEjD,EAAKqH,MAAQ,CAAEX,MAAM,EAAGY,cAAa,EAAOjH,OAAM,EAAOrD,MAAK,GAJrC,EANP,gEAYC,IAAD,OACZtE,EAASjB,KAAKyP,UAAUK,QAC9B9P,KAAK2P,eAAehG,KAAK1I,GAAS,kBAAM,EAAK8O,SAAS,CAAEF,cAAa,OACrE7P,KAAK2P,eAAeK,gBAAgB,SAAC1F,GACrB,UAAXA,EAAE7J,MACH,EAAKsP,SAAS,CAACd,MAAM3E,EAAER,aAjBT,oCAoBNQ,GACZA,EAAE2F,kBACFjQ,KAAK2P,eAAepE,YAtBF,kCAwBRjB,GACVA,EAAE2F,kBACFjQ,KAAK2P,eAAe/G,OAAS5I,KAAK2P,eAAe/G,MACjD5I,KAAK+P,SAAS,CAACnH,MAAO5I,KAAK2P,eAAe/G,UA3BxB,iCA6BT0B,GACTA,EAAE2F,kBACFjQ,KAAK2P,eAAepK,MAAQvF,KAAK2P,eAAepK,KAChDvF,KAAK+P,SAAS,CAACxK,KAAMvF,KAAK2P,eAAepK,SAhCvB,6CAmClBvF,KAAK2P,eAAehH,YAAa,IAnCf,+BAqCV,IAAD,OACCqE,EAAYhN,KAAKwP,MAAjBxC,QACR,OACA,kBAAC,IAAMkD,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQlM,SAAS,SAASmM,MAAO,CAAEC,WAAY,cAAeC,UAAW,SACvE,kBAACC,EAAA,EAAD,CAASjC,QAAQ,SACf,kBAAC3B,EAAD,MACA,kBAAC6B,EAAA,EAAD,CAAQH,UAAWD,IAAMoC,GAAG,IAAI/C,UAAWT,EAAQ8B,YACnD,kBAAC2B,EAAA,EAAD,CAAYnC,QAAQ,KAAKX,MAAM,UAAYF,UAAWT,EAAQoC,OAA9D,YAIA,kBAACqB,EAAA,EAAD,CAAYnC,QAAQ,KAAKX,MAAM,UAAUF,UAAWT,EAAQoC,OAA5D,QAGA,kBAACqB,EAAA,EAAD,CAAYnC,QAAQ,KAAKX,MAAM,UAAUF,UAAWT,EAAQiC,OAA5D,UACUjP,KAAK4P,MAAMX,OAErB,kBAAC1B,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQgC,cAAetB,QAAS,SAACpD,GAAD,OAAO,EAAKoG,YAAYpG,IAAIqD,MAAM,UAAUC,aAAW,QACtH5N,KAAK4P,MAAMhH,MAAQ,kBAAC+H,EAAA,EAAD,MAAwB,kBAACC,EAAA,EAAD,OAEhD,kBAACrD,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQgC,cAAetB,QAAS,SAACpD,GAAD,OAAO,EAAKuG,cAAcvG,IAAIqD,MAAM,UAAUC,aAAW,QAC3H,kBAACkD,EAAA,EAAD,OAEF,kBAACvD,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWT,EAAQgC,cAAetB,QAAS,SAACpD,GAAD,OAAO,EAAKyG,WAAWzG,IAAIqD,MAAM,UAAUC,aAAW,QACrH5N,KAAK4P,MAAMrK,KAAO,kBAACyL,EAAA,EAAD,MAAgB,kBAACC,EAAA,EAAD,SAI3C,kBAACC,EAAA,EAAD,CAAUzD,UAAWT,EAAQqC,SAAUvC,MAAO9M,KAAK4P,MAAMC,cACrD,kBAACsB,EAAA,EAAD,CAAkBxD,MAAM,aAE5B,4BAAQjH,GAAG,SAAS0K,IAAKpR,KAAKyP,iBArEd,GAAiE7C,IAAMyE,Y,kBCxChFC,GAAb,WAeC,WAAYxO,GAA6E,IAAjEmB,EAAgE,uDAAjD,CAACD,EAAE,EAAIE,EAAE,GAAMlB,EAAkC,uDAAxB,CAACzB,MAAM,EAAKD,OAAO,GAAK,yBAdrFwB,UAcqF,OAbrFmB,cAaqF,OAZrFjB,UAYqF,OAXrFoJ,SAAkB,EAWmE,KATrFmF,MAAe,EASsE,KARrF/N,MAAe,EAQsE,KAPrFgO,aAAsB,EAO+D,KANxFC,YAAqB,EAMmE,KALrFC,iBAA0B,EAK2D,KAJrFC,OAAgB,EAIqE,KAFhFC,UAAuB,GAGxB5R,KAAK8C,KAAOA,EACZ9C,KAAKiE,SAAWA,EAChBjE,KAAKgD,KAAOA,EAlBpB,wDAqBa6O,GACFA,EAASlI,MAAMkI,EAASlI,KAAK3J,MAChCA,KAAK4R,UAAU7J,KAAK8J,KAvB5B,qCA0BmBA,GACX,IAAM9P,EAAI/B,KAAK4R,UAAUpR,QAAQqR,GACjC,IAAU,IAAP9P,EACC,MAAM3B,MAAM,uBAChBJ,KAAK4R,UAAUE,OAAO/P,EAAE,KA9BhC,4BAiCUgQ,EAAgB3Q,EAA+ByF,GAAiC,IAAD,OACjF7G,KAAK4R,UAAU5L,SAAS,SAAC5D,GAAD,uBAAQA,EAAE4P,mBAAV,aAAQ,OAAA5P,EAAgB,EAAM2P,EAAU3Q,EAAKyF,MACrE7G,KAAKiS,UAAUF,EAAU3Q,EAAKyF,GAC9B7G,KAAK4R,UAAU5L,SAAS,SAAC5D,GAAD,uBAAQA,EAAE8P,kBAAV,aAAQ,OAAA9P,EAAe,EAAM2P,EAAU3Q,EAAKyF,QApC5E,gCAsCckL,EAAgB3Q,EAA+ByF,GAAiC,IAAD,OACrF7G,KAAK4R,UAAU5L,SAAS,SAAC5D,GAAD,uBAAQA,EAAEoF,aAAV,aAAQ,OAAApF,EAAU,EAAM2P,EAAU3Q,EAAKyF,QAvCvE,kCAyCgBsL,GAA8B,IAAD,OACrCnS,KAAK4R,UAAUQ,QAAQpM,SAAS,SAAC5D,GAAD,uBAAQA,EAAE6J,mBAAV,aAAQ,OAAA7J,EAAgB,EAAM+P,QA1CtE,mCA6CsB,IAAD,OACbnS,KAAK4R,UAAU5L,SAAS,SAAC5D,GAAD,uBAAQA,EAAEiK,kBAAV,aAAQ,OAAAjK,EAAe,UA9CvD,KCAO,SAASiQ,GAAWC,GACvB,MAAO,CAACtO,EAAEb,KAAKoP,MAAMD,EAAMtO,GAAIE,EAAEf,KAAKoP,MAAMD,EAAMpO,ICG/C,SAASsO,GAAMC,EAAiBC,GACnC,IAAIC,EAAMF,EAAMzP,KAAKzB,MACjBqR,EAAMH,EAAMzP,KAAK1B,OACrB,IAAKqR,EAAMC,GAAO,EAOd,OAAOF,EAEX,IAAIG,EAAMH,EAAM1P,KAAKzB,MACjBuR,EAAMJ,EAAM1P,KAAK1B,OACrB,IAAKuR,EAAMC,GAAO,EACd,OAAOL,EAEX,IAAIM,EAAMN,EAAMxO,SAASD,EACrBgP,EAAMP,EAAMxO,SAASC,EACzByO,GAAOI,EACPH,GAAOI,EACP,IAAMC,EAAMP,EAAMzO,SAASD,EACrBkP,EAAMR,EAAMzO,SAASC,EAS3B,OANI6O,EAAME,IAAKF,EAAME,GACjBD,EAAME,IAAKF,EAAME,GACjBP,GAJJE,GAAOI,KAIQN,EAAME,GACjBD,GAJJE,GAAOI,KAIQN,EAAME,GAGd,CAAE7O,SAAS,CAACD,EAAE+O,EAAK7O,EAAE8O,GAAKhQ,KAAK,CAACzB,MAFvCoR,GAAOI,EAE2CzR,OADlDsR,GAAOI,IAKJ,SAASG,GAAWV,EAAiBC,GAExC,IAAIU,EAAKX,EAAMzP,KAAKzB,MAChB8R,EAAKZ,EAAMzP,KAAK1B,OAChBgS,EAAKZ,EAAM1P,KAAKzB,MAChBgS,EAAKb,EAAM1P,KAAK1B,OACpB,GAAIgS,GAAM,GAAKC,GAAM,GAAKH,GAAM,GAAKC,GAAM,EACvC,OAAO,EAEX,IAAMG,EAAKf,EAAMxO,SAASD,EACpByP,EAAKhB,EAAMxO,SAASC,EACpBwP,EAAKhB,EAAMzO,SAASD,EACpB2P,EAAKjB,EAAMzO,SAASC,EAM1B,OAJAqP,GAAMI,EACNP,GAAMI,EACNH,GAAMI,IAHNH,GAAMI,GAKQA,GAAMJ,EAAKE,KAChBD,EAAKI,GAAMJ,EAAKE,KAChBL,EAAKI,GAAMJ,EAAKM,KAChBL,EAAKI,GAAMJ,EAAKM,GAStB,SAASC,GAAerJ,GAC3B,MAAO,CAACvG,EAAGuG,EAAKtG,SAASD,EAAIuG,EAAKvH,KAAKzB,MAAM,EAAG2C,EAAGqG,EAAKtG,SAASC,EAAIqG,EAAKvH,KAAK1B,OAAO,GCpEnF,SAASuS,GAAgBC,GAC5B,YAAoBjO,IAAjBiO,EAAOvC,YAAwC1L,IAAjBiO,EAAOtQ,MAC7B,CAACQ,EAAG8P,EAAOvC,MAAQpO,KAAK4Q,IAAID,EAAOtQ,OAAQU,EAAG4P,EAAOvC,MAAQpO,KAAK6Q,IAAIF,EAAOtQ,QAC5E,CAACQ,EAAE,EAAEE,EAAE,GAOhB,SAAS+P,GAAWC,EAAgBC,GACvC,IAL4BC,EAKtBC,EAASR,GAAgBK,GACzBI,EAAST,GAAgBM,GAC/B,OAP4BC,EAOL,CAACpQ,EAAGqQ,EAAOrQ,EAAIsQ,EAAOtQ,EAAGE,EAAGmQ,EAAOnQ,EAAIoQ,EAAOpQ,GAN9D,CAACV,MAAML,KAAKoR,MAAMH,EAAGlQ,EAAGkQ,EAAGpQ,GAAIuN,MAAMpO,KAAKqR,MAAMJ,EAAGpQ,EAAGoQ,EAAGlQ,ICepE,SAASuQ,GAAOvM,EAAajI,GACzB,IAAMoG,EAAQ6B,EAAM1H,QAAQP,EAAK,GAC7BoG,GAAS,GACT6B,EAAM4J,OAAOzL,EAAO,G,IAIPqO,G,kDAajB,WAAY5R,EAAa6R,GAAsE,IAAD,EAAvCC,EAAuC,uDAAxB,CAACrT,MAAM,EAAKD,OAAO,GAAK,4BAC1F,cAAMwB,IAZb+R,aAWiG,IAV9FC,SAAiB,CAAC9Q,EAAE,EAAGE,EAAE,GAUqE,EAT9FyQ,gBAS8F,IAR9FnM,OAAiB,EAQ6E,EAPjGuM,YAAqB,EAO4E,EANjGC,WAAoB,EAM6E,EALjGJ,eAKiG,IAJjGK,QAAmB,GAI8E,EAFzFC,mBAA8B,GAE2D,EA0IjGC,MAAO,EA1I0F,EA2IjGC,UAAW,EAzIJ,EAAKT,WAAaA,EAClB,EAAKC,UAAYA,EAHyE,E,6DAK7E3U,M,uCAGA+D,EAAUE,M,kCAElBF,EAAUE,M,wCAGJoO,GACjB,OAAOtS,KAAKiV,QAAQI,QAAQ,SAACC,GAAD,OFKvB,SAAqBhD,EAAa/H,GACrC,OAAO+H,EAAMtO,GAAKuG,EAAKtG,SAASD,GAAKsO,EAAMtO,EAAIuG,EAAKtG,SAASD,EAAIuG,EAAKvH,KAAKzB,OACpE+Q,EAAMpO,GAAKqG,EAAKtG,SAASC,GAAKoO,EAAMpO,EAAIqG,EAAKtG,SAASC,EAAIqG,EAAKvH,KAAK1B,OEP1CiU,CAAYjD,EAAOgD,Q,gCAG7CE,GACTxV,KAAKyV,YAAYD,EAAOvR,SAASuR,EAAOxS,MACxChD,KAAK0V,gBAAgBF,GACjBA,EAAO7D,SACV6D,EAAO7D,OAAS,GA5DnB,SAAmBzJ,EAAW4B,EAAS6L,GACtC,IAAIC,EAAK,EACT,GAAG1N,EAAMjG,OAAO,EAEf,IADA,IAAI4T,EAAK3N,EAAMjG,OACT2T,EAAMC,GAAK,CAChB,IAAIC,EAAM3S,KAAKC,OAAQwS,EAAIC,GAAM,GAC3BE,EAAIJ,EAAWzN,EAAM4N,GAAMhM,GACjC,GAAGiM,EAAG,EACLH,EAAME,EAAI,MACL,MAAIC,EAAG,GAER,CACJH,EAAME,EACN,MAHAD,EAAOC,GAOV5N,EAAM4J,OAAO8D,EAAK,EAAG9L,GA4CpBkM,CAAOhW,KAAKiV,QAASO,GAAQ,SAACvP,EAAE7D,GAAH,OAAS6D,EAAE0L,OAAUvP,EAAEuP,UACpD6D,EAAOS,cAAgBT,EAAOvR,SAC1BuR,EAAOU,iBACVlW,KAAKkV,mBAAmBnN,KAAKyN,K,mCAGlBA,GAAgB,IAAD,EAC3B,UAAAA,EAAOnJ,kBAAP,cAAAmJ,GACSxV,KAAKwI,OACJnD,QAAQC,IAAR,wBAA6BkQ,EAAO1S,KAApC,cAA8C0S,EAAOvR,SAASD,EAA9D,aAAoEwR,EAAOvR,SAASC,EAApF,MACJuQ,GAAOzU,KAAKiV,QAASO,GACrBf,GAAOzU,KAAKkV,mBAAoBM,K,kCAInCxV,KAAKiV,QAAU,GAClBjV,KAAKkV,mBAAqB,K,+BAGlBzS,EAAaC,EAAgByT,EAAwBC,GAA2D,IAArCxQ,EAAoC,4DAAVC,EAC7G7F,KAAK6U,QAAU,IAAIpP,EAAQzF,KAAK2U,WAAWjP,UAAUjD,EAAMC,EAASyT,EAAavQ,GAC9EwQ,IACFpW,KAAK4U,UAAY5U,KAAK6U,QAAQ/O,a,kCAIjBqM,GACd,qEAAkBA,GAGlBnS,KAAKqW,eAAelE,K,qCAGHA,GAGjB,IAFM,IAAMmE,EAAKnE,EAAoB,IACzBoE,EAAqBvW,KAAKiV,QAAQ7C,QACvCmE,EAAUtU,QAAQ,CACxB,IAAMuT,EAAgBe,EAAUC,MAChC,GAAIhB,EAAOpJ,QAAX,CAKA,IAAIqK,OAAO,EACX,IAAKjB,EAAO9D,gBAAiB,CAC5B,IAAMgF,EAAU,CAACzS,SAASoO,GAAWmD,EAAOvR,UAAWjB,KAAKwS,EAAOxS,MAC7D2T,EAAa9C,GAAgB2B,GAC/BoB,EAAc,CAAC5S,EAAEwR,EAAOvR,SAASD,EAAI2S,EAAW3S,EAAIsS,EAAKtW,KAAKgV,WAC3D9Q,EAAEsR,EAAOvR,SAASC,EAAIyS,EAAWzS,EAAIoS,EAAKtW,KAAKgV,YAClD6B,EAAU7W,KAAKyV,YAAYmB,EAAapB,EAAOxS,MACnDwS,EAAOS,cAAgBS,EAAQzS,SAC/BuR,EAAOvR,SAAW2S,EAElBH,EAAU,CAACxS,SAAUoO,GAAWmD,EAAOvR,UAAWjB,KAAMwS,EAAOxS,MAC1D6T,IACJJ,EAAUjE,GAAMkE,EAASD,IAEtBjB,EAAOhE,eACNrO,KAAK2T,KAAKtB,EAAOhE,aACjBgE,EAAOjE,SAAWpO,KAAK2T,KAAKtB,EAC7BjE,OACFiE,EAAOjE,MAAQ,EAEfiE,EAAOjE,MAAQiE,EAAOjE,MAAQiE,EAAOhE,cAIrCgE,EAAO/D,aACLgF,IACHA,EAAUjB,GACXxV,KAAK+W,iBAAiBN,EAASjB,IAE7BA,EAAOvJ,aACTuJ,EAAOvJ,YAAYkG,GACpB,IAAM6E,EAAQhX,KAAK0V,gBAAgBF,GAChCwB,IACF3R,QAAQC,IAAR,qDAA0DkQ,EAAO1S,KAAjE,cAA2EkU,IAC3ExB,EAAOpJ,SAAQ,GAEZoJ,EAAOpJ,SACVpM,KAAKiX,aAAazB,QAxClBxV,KAAKiX,aAAazB,M,uCA4CKiB,EAAmBjB,GAC5C,IAAI0B,EACJ,GAAG1B,EAAOU,gBACT,IAAI,IAAInU,EAAG,EAAGA,EAAG/B,KAAKiV,QAAQhT,OAAOF,IAAI,CACxC,IAAMoV,EAAcnX,KAAKiV,QAAQlT,GACjC,GAAIyT,IAAW2B,GAAeA,EAAY1F,YACrC0B,GAAWsD,EAASU,GAAc,CACrC3B,EAAOU,gBAAgBiB,GACvBD,EAAkBC,EAClB,OAKAD,IACHA,EAAkB1B,GAEnB,IAAI,IAAIzT,EAAG,EAAGA,EAAG/B,KAAKkV,mBAAmBjT,OAAOF,IAAI,CACnD,IAAMoV,EAAcnX,KAAKkV,mBAAmBnT,GAC5C,GAAIyT,IAAW2B,GACVhE,GAAWsD,EAASU,GAAc,CACrCA,EAAYjB,gBAAiBV,GAC7B0B,EAAkBC,EAClB,OAKED,EAAgB9K,SACpBpM,KAAKiX,aAAaC,K,4BAKdnF,EAAgB3Q,EAA+ByF,GAEpDkL,EAAW,CAAC/N,EAAG+N,EAAS/N,EAAIhE,KAAK8U,SAAS9Q,EAAGE,EAAE6N,EAAS7N,EAAElE,KAAK8U,SAAS5Q,GACxElE,KAAKoX,gBAAgBhW,GAClBpB,KAAK6U,SACP7U,KAAK6U,QAAQrN,MAAM,CAACvD,SAAS8N,EAAU/O,KAAKhD,KAAKgD,MAAQ5B,EAAKyF,GAE/D,IAPyF,EAOrFwQ,EAAkB,EAPmE,cAQvErX,KAAKiV,SARkE,IAQzF,IAAI,EAAJ,qBAA+B,CAAC,IAAxBO,EAAuB,QAC9B,IAAIA,EAAOpJ,QACV,MAAMhM,MAAM,mDAAqDoV,GAClE,IAAI8B,EAAMjF,GAAWmD,EAAOvR,UACvBuR,EAAO9D,kBACV4F,EAAM,CAACtT,EAAGsT,EAAItT,EAAI+N,EAAS/N,EAAGE,EAAGoT,EAAIpT,EAAI6N,EAAS7N,IAEjDoT,EAAItT,EAAIhE,KAAKgD,KAAKzB,OAAS+V,EAAIpT,EAAIlE,KAAKgD,KAAK1B,QAC3CkU,EAAOxS,KAAKzB,MAAQ+V,EAAItT,EAAI,GAC5BwR,EAAOxS,KAAK1B,OAASgW,EAAIpT,EAAI,IAGlCsR,EAAOhO,MAAM8P,EAAKlW,EAAKyF,GACvBwQ,MArBwF,8BAuBtFrX,KAAKwI,UACFxI,KAAKmV,MAAQ,MAAQ,GACzBnV,KAAKoV,UAAavO,EAClB7G,KAAKmV,MAAO,GAEZnV,KAAKoV,WAAYvO,EAElBzF,EAAImW,UAAY,MAChBnW,EAAIoW,KAAM,kBACVpW,EAAIqW,SAAJ,eAAqBtU,KAAKoP,MAAM,KAAQvS,KAAKoV,YAAapV,KAAKmV,QAA/D,mBAAiFnV,KAAKiV,QAAQhT,OAA9F,uBAAmHoV,EAAnH,gCAA2JrX,KAAKkV,mBAAmBjT,QAAW,GAAIjC,KAAKgD,KAAK1B,OAAQ,O,sCAItMF,GACdA,EAAImW,UAAY,QAChBnW,EAAIsW,SAAS,EAAG,EAAG1X,KAAKgD,KAAKzB,MAAOvB,KAAKgD,KAAK1B,U,iCAGrC2T,GAAoB,IAAD,OAC7B,IAAIA,IAAYA,EAAQhT,OACvB,MAAM7B,MAAM,sDAAD,OAAuDJ,KAAK8C,KAA5D,MACT9C,KAAKwI,OACPnD,QAAQC,IAAR,sBAA2B2P,EAAQhT,OAAnC,qBAAsDgT,EAAQ,GAAGnS,KAAjE,MAEDmS,EAAQjP,SAAS,SAACsP,GAAD,OAAO,EAAKqC,UAAUrC,Q,sCAGxBE,GACf,GAAGA,EAAOvR,SAASD,EAAI,GAAKwR,EAAOvR,SAASC,EAAI,EAC/C,MAAM,2BAAN,OAAkCsR,EAAOvR,SAASD,EAAlD,aAAwDwR,EAAOvR,SAASC,EAAxE,KACD,GAA2B,IAAxBlE,KAAK4U,UAAUrT,OACjB,GAAGiU,EAAOvR,SAASD,GAAKhE,KAAK4U,UAAUrT,OAASiU,EAAOvR,SAASC,GAAKlE,KAAK4U,UAAUtT,OACnF,MAAM,mBAAN,OAA0BkU,EAAOvR,SAASD,EAA1C,aAAgDwR,EAAOvR,SAASC,EAAhE,qBAA8ElE,KAAK4U,UAAUrT,MAA7F,YAAsGvB,KAAK4U,UAAUtT,OAArH,UACI,GAAGkU,EAAOvR,SAASD,GAAKhE,KAAKgD,KAAKzB,OAASiU,EAAOvR,SAASC,GAAKlE,KAAKgD,KAAK1B,OAC/E,MAAM,mBAAN,OAA0BkU,EAAOvR,SAASD,EAA1C,aAAgDwR,EAAOvR,SAASC,EAAhE,uBAAgFlE,KAAKgD,KAAKzB,MAA1F,YAAmGvB,KAAKgD,KAAK1B,OAA7G,KAED,OAAGkU,EAAOxS,KAAKzB,OAAQ,GAAKiU,EAAOxS,KAAK1B,QAAU,EAC3C,0BAAN,OAAiCkU,EAAOxS,KAAKzB,MAA7C,aAAuDiU,EAAOxS,KAAK1B,OAAnE,UACqBuE,IAAjB2P,EAAOjE,YAAyC1L,IAAjB2P,EAAOhS,YACrBqC,IAAjB2P,EAAOjE,YAAyC1L,IAAjB2P,EAAOhS,MACpC,gBAAN,OAAuBgS,EAAOjE,MAA9B,uBAAkDiE,EAAOhS,MAAzD,8CAFD,I,kCAKWS,EAAgBjB,GAE3B,IAAI6T,GAAU,EACd,GAAI7W,KAAK+U,WAAY,CACpB,IAAIxT,EAAQvB,KAAKgD,KAAKzB,MAClBD,EAAStB,KAAKgD,KAAK1B,OACI,IAAxBtB,KAAK4U,UAAUrT,QACjBA,EAAOvB,KAAK4U,UAAUrT,MACtBD,EAAStB,KAAK4U,UAAUtT,QAErB2C,EAASD,EAAI,GAChBC,EAASD,EAAIzC,EAAQyB,EAAKzB,MAC1BsV,GAAU,GACA5S,EAASD,EAAIhB,EAAKzB,MAAQA,IACpC0C,EAASD,EAAI,EACb6S,GAAU,GAEP5S,EAASC,EAAI,GAChBD,EAASC,EAAI5C,EAAS0B,EAAK1B,OAC3BuV,GAAU,GACA5S,EAASC,EAAIlB,EAAK1B,OAASA,IACrC2C,EAASC,EAAI,EACb2S,GAAU,GAGZ,OAAOA,M,GApPwDvF,IC/BpDsG,GAAb,WAMC,WAAY1X,GAAwD,IAA9B2X,EAA6B,iFALhE3X,iBAKgE,OAJhE4X,gBAAyB,GAIuC,KAHnE/R,IAAa,EAGsD,KAFhE8R,iBAEgE,OADnExT,QAAiB,EAEhBrE,KAAKE,YAAcA,EACnBF,KAAK6X,YAAcA,EARrB,iDAWMrC,GACJA,EAAOxS,KAAOhD,KAAKE,YAAY8C,OAZjC,4BAeUwS,EAAsBzD,EAAgB3Q,EAA+ByF,GAC7E,IAAItD,EACJ,GAA2B,WAAxBvD,KAAKE,YAAYO,MACnB8C,EAAQJ,KAAKC,MAASD,KAAK4U,IAAI/X,KAAKgY,SAASxC,KAAoB,EAARrS,KAAK8U,KAAgB,EAAR9U,KAAK8U,IAASjY,KAAKE,YAAY+C,WAAW,KACtGjD,KAAKE,YAAY+C,aAC1BM,EAAqC,EAA5BvD,KAAKE,YAAY+C,WAAiBM,EAAQ,QAEzC,GAAGvD,KAAK8X,iBAAmD,IAAhC9X,KAAKE,YAAY+C,WAAiB,CACxE,IAAMiV,EAAe,EAAMlY,KAAK8X,gBAChCvU,EAAQJ,KAAKC,MAAQpD,KAAK+F,IAAImS,EAAiBlY,KAAKE,YAAY+C,iBAEhEM,EAAO,EAERA,EAAQJ,KAAKY,IAAIR,EAAOvD,KAAKE,YAAY+C,WAAW,GACpD,IAAMO,EAAQxD,KAAKgY,SAASxC,GAC5BxV,KAAKE,YAAYsH,MAAMpG,EAAKmC,EAAOC,EAAO,CAACS,SAAS,CAACD,EAAE,EAAEE,EAAE,GAAIlB,KAAKwS,EAAOxS,MAAO,CAACiB,SAAS8N,EAAU/O,KAAKwS,EAAOxS,SA9BpH,kCAiCawS,EAAsBrD,GACjC,IAAMmE,EAAKnE,EAAoB,IAC/BnS,KAAK+F,KAAOuQ,EACTtW,KAAK6X,aACH7X,KAAK+F,IAAM/F,KAAKE,YAAY+C,WAAajD,KAAK8X,kBACjDtC,EAAOpJ,SAAU,KAtCrB,+BA0CUoJ,GACR,OAAQA,EAAOhS,MAASgS,EAAOhS,MAAQ,MA3CzC,KCEa2U,GAAb,kDAII,WAAYvO,EAAS9G,GAAkE,IAAD,EAArDmB,EAAqD,uDAArC,CAACD,EAAE,EAAEE,EAAE,GAAG2T,EAA2B,6EAClF,cAAM/U,EAAMmB,IAJhB2F,WAGsF,IAFtFwO,yBAEsF,EAElF,EAAKxO,MAAQA,EACb,IAAM1J,EAAc0J,EAAM+K,WAAW/M,eAAeE,wBAAwBhF,GAHM,OAIlF,EAAKsV,oBAAwB,IAAIR,GAAoB1X,EAAa2X,GAClE,EAAKQ,YAAY,EAAKD,qBAL4D,EAJ1F,sDAWoBP,GACZ7X,KAAKoY,oBAAoBP,YAAcA,GAZ/C,eAeQ,OAAO7X,KAAKoY,oBAAoBP,gBAfxC,GAAsFvG,ICHzEgH,GAAb,kDAOI,WAAYC,GAA2F,IAAD,EAArE5K,EAAqE,uDAAxD,MAAO6K,EAAiD,uDAArC,oBAAqBC,EAAgB,uDAAH,GAAG,4BAClG,cAAM,mBAPVF,kBAMsG,IALtGC,eAKsG,IAJtGzS,IAAM,EAIgG,EAHtG4H,WAGsG,IAFtG8K,gBAEsG,EAElG,EAAKF,aAAeA,EACpB,EAAKC,UAAYA,EACjB,EAAKxV,KAAO,CAACzB,MAAOkX,EAAWtV,KAAKC,MAAMmV,EAAa,MAAMG,WAAWzW,OAAQX,OAAOmX,GACvF,EAAK9K,MAAQA,EACb,EAAK8K,WAAaA,EANgF,EAP1G,kDAgBU1G,EAAgB3Q,EAA+ByF,GAIjD,IAAM8R,EAAcxV,KAAKC,OAAOpD,KAAKuY,aAAevY,KAAK+F,KAAK,KAAM2S,WACpEtX,EAAImW,UAAYvX,KAAK2N,MACrBvM,EAAIoW,KAAOxX,KAAKwY,UAEhBpX,EAAIqW,SAASkB,EAAa5G,EAAS/N,EAAG+N,EAAS7N,EAAElE,KAAKgD,KAAK1B,UAxBnE,kCA8BgB6Q,GACRnS,KAAK+F,KAAOoM,EACTnS,KAAK+F,IAAK/F,KAAKuY,eACdvY,KAAKoM,SAAU,OAjC3B,GAAqCkF,ICAxBsH,GAAb,WAcI,WAAYxJ,EAAcyJ,EAAkBC,GAAkB,yBAb9DhW,KAAe,QAa8C,KAZ7DmB,SAAkB,CAACD,EAAE,EAAEE,EAAE,GAYoC,KAX7DlB,KAAa,CAACzB,MAAM,EAAGD,OAAO,GAW+B,KAV7DiQ,MAAO,EAUsD,KAT7D/N,MAAO,EASsD,KAR7D4I,SAAmB,EAQ0C,KAP7DuF,OAAiB,IAO4C,KAN7DF,YAAsB,EAMuC,KAL7DC,iBAAkB,EAK2C,KAJ7DtC,WAI6D,OAH7DyJ,eAG6D,OAF7DC,eAE6D,EACzD9Y,KAAKoP,MAAQA,EACbpP,KAAK6Y,UAAYA,EACjB7Y,KAAK8Y,UAAYA,EAjBzB,kDAoBU/G,EAAiB3Q,EAA+ByF,GAElD,IAAMpC,EAAIrD,EAAIH,OAAOM,MAAQmD,EAAItD,EAAIH,OAAOK,OACtCyX,EAAU3X,EAAIoW,KACpB,SAASwB,EAAWC,EAAYjV,EAASE,EAAUnC,GAC/CX,EAAImW,UAAY,OAChBnW,EAAIqW,SAASwB,EAAKjV,EAAEjC,EAAGmC,EAAEnC,GACzBX,EAAImW,UAAY,QAChBnW,EAAIqW,SAASwB,EAAKjV,EAAEE,GAGxB9C,EAAIoW,KAAQ/S,EAAE,IAAQA,EAAE,IAAQA,EAAE,IAAQA,EAAE,IAAQ,oBAAqB,mBAAoB,mBAAqB,mBAAoB,mBACtI,IAAIyU,EAAU9X,EAAI+X,YAAYnZ,KAAKoP,OAC/BgK,EAAO1U,EAAE,EACbsU,EAAWhZ,KAAKoP,OAAQ3K,EAAEyU,EAAQ3X,OAAO,EAAG6X,EAAM,GAClD,IAAMC,EAAa5U,EAAE,IAAQA,EAAE,IAAO,GAAI,GAAK,GAC/CrD,EAAIoW,KAAJ,UAAc6B,EAAd,kBACAH,EAAU9X,EAAI+X,YAAYnZ,KAAK6Y,WAC/BO,GAAkB,EAAVC,EACRL,EAAWhZ,KAAK6Y,WAAYpU,EAAEyU,EAAQ3X,OAAO,EAAE6X,EAAM,GAErDF,EAAU9X,EAAI+X,YAAYnZ,KAAK8Y,WAC/BM,GAAkB,EAAVC,EACRL,EAAWhZ,KAAK8Y,WAAYrU,EAAEyU,EAAQ3X,OAAO,EAAE6X,EAAK,GAEpDhY,EAAIoW,KAAOuB,MA7CnB,KCOA,SAASO,GAAWrV,EAAiBjB,EAAYuW,GAgC7C,MA/Ba,CACTzW,KAAM,OACNmB,WACAjB,OACAoJ,SAAS,EACTqF,YAAY,EACZF,MAAO,EACP/N,MAAO,EACPgE,MAAO,SAAUuK,EAAiB3Q,EAA+ByF,GAC7DzF,EAAImW,UAAY,kBAChBnW,EAAIsW,SAASzT,EAASD,EAAGC,EAASC,EAAGlB,EAAKzB,MAAOyB,EAAK1B,SAE1D4U,gBAZS,SAYOiB,GACZ,IAAM5F,EAAQsC,GAAgBsD,GAC1BoC,GACIhI,EAAMvN,EAAI,EACVmT,EAAYlT,SAASD,EAAIhE,KAAKiE,SAASD,EAAImT,EAAYnU,KAAKzB,MAE5D4V,EAAYlT,SAASD,EAAIhE,KAAKiE,SAASD,EAAIhE,KAAKgD,KAAKzB,MACzD4V,EAAYlT,SAASC,EAAIiT,EAAYlB,cAAe/R,EACpDiT,EAAY3T,MAAQL,KAAK8U,GAAKd,EAAY3T,MAA+B,IAAtBL,KAAKqW,SAAW,MAE/DjI,EAAMrN,EAAI,EACViT,EAAYlT,SAASC,EAAIlE,KAAKiE,SAASC,EAAIiT,EAAYnU,KAAK1B,OAE5D6V,EAAYlT,SAASC,EAAIlE,KAAKiE,SAASC,EAAIlE,KAAKgD,KAAK1B,OACzD6V,EAAYlT,SAASD,EAAImT,EAAYlB,cAAejS,EACpDmT,EAAY3T,OAAS,EAAM2T,EAAY3T,MAA+B,IAAtBL,KAAKqW,SAAW,OAOzE,IAAMC,GAAb,iDAEIpQ,cAAgB,CAAC,CAAEvG,KAAM,OAAQnC,IAAK,kCAAmC8B,KAAM,EAAGC,QAAS,EAAIjC,KAAM,YAFzG,KAGI0I,cAAgB,CAAC,CAAErG,KAAM,OAAQnC,IAAK,mCAChC,CAAEmC,KAAM,QAASnC,IAAK,qCAJhC,iDAMSgU,GACD3U,KAAK0Z,mBAAmB/E,KAPhC,iCASeA,GAA2C,IAAD,OAC3C/K,EAAQ,IAAI8K,GAAM,gBAAiBC,GACzCA,EAAW/K,MAAQA,EACnB,IAAIqF,EAAQ,EACZ0F,EAAWgF,aAAa,CAAElZ,KAAM,QAASqJ,MAAQmF,IACjDrF,EAAMgB,iBAAmB,SAAU5G,EAAWE,GAC1C,IAAM+Q,EAAUrL,EAAMgQ,kBAAkB,CAAE5V,IAAGE,MACzC+Q,EAAQhT,OACRgT,EAAQI,QAAO,SAACC,GAAD,OAAOA,EAAE7D,cAAYzL,SAAQ,SAACsP,GAC1B,mBAAXA,EAAExS,OAEN8G,EAAMqN,aAAa3B,GACnBX,EAAWgF,aAAa,CAAElZ,KAAM,QAASqJ,QAAUmF,IACnD0F,EAAWjM,aAAatD,KAAK,aAGjCuP,EAAWgF,aAAa,CAAElZ,KAAM,QAASqJ,QAAUmF,IACnD0F,EAAWjM,aAAatD,KAAK,WAGrCwE,EAAMmL,YAAa,EAEnB,IAAM8E,EAAKjQ,EAAM5G,KAGjB4G,EAAM+N,UAAU2B,GAAW,CAAEtV,EAAG,EAAGE,EAAG,GAAK,CAAE3C,MAAOsY,EAAGtY,MAFtC,EAEwDD,OAFxD,IAE4E,IAC7FsI,EAAM+N,UAAU2B,GAAW,CAAEtV,EAAG,EAAGE,EAAG2V,EAAGvY,OAHxB,GAG6C,CAAEC,MAAOsY,EAAGtY,MAAOD,OAHhE,IAGoF,IACrGsI,EAAM+N,UAAU2B,GAAW,CAAEtV,EAAG,EAAGE,EAAG,GAAK,CAAE3C,MAJ5B,EAI6CD,OAAQuY,EAAGvY,OAJxD,IAI6E,IAC9FsI,EAAM+N,UAAU2B,GAAW,CAAEtV,EAAG6V,EAAGtY,MALlB,EAKoC2C,EAAG,GAAK,CAAE3C,MAL9C,EAK+DD,OAAQuY,EAAGvY,OAL1E,IAK+F,IAIhH,IAFA,IAAMwY,EAAO,SAAC/V,EAAagW,GAAd,OAA8B5W,KAAKqW,UAAYO,EAAMhW,GAAOA,GACnEiW,EAAe,SAAC9X,GAAD,MAAgB,CAAE8B,EAAG8V,EAAKD,EAAGtY,MAAyB,GAAhBW,EAR1C,GAQ6DA,EAR7D,GAQ4EgC,EAAG4V,EAAKD,EAAGvY,OAA0B,GAAhBY,EARjG,GAQoHA,EARpH,KASR8B,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMiW,EAAO,IAAI9B,GAAevO,EAAO,QACjCsQ,EAASD,EAAKjX,KAAKzB,MAAQ,EACjC0Y,EAAKhW,SAAW+V,EAAaE,GAC7BD,EAAK7N,SAAU,EACf6N,EAAK1I,MAAwB,IAAhBpO,KAAKqW,SAAiB,IACnCS,EAAKzW,MAAQL,KAAKqW,SAAWrW,KAAK8U,GAAK,EACvCgC,EAAKtI,OAAyB,GAAhBxO,KAAKqW,SAAgB,EACnCS,EAAKxI,YAAa,EAClBwI,EAAKjX,KAAO,CAAEzB,MAAO0Y,EAAKjX,KAAKzB,MAAQ,EAAGD,OAAQ2Y,EAAKjX,KAAK1B,OAAS,GACrEsI,EAAM+N,UAAUsC,GAEpB,IAAME,EAAY,IAAI7B,GAAgB,MACtC6B,EAAUlW,SAAW+V,EAAaG,EAAUnX,KAAKzB,OACjD4Y,EAAU5I,MAAQ,IAClB4I,EAAU3W,MAAQL,KAAKqW,SAAWrW,KAAK8U,GAAK,EAC5CkC,EAAUxI,OAAS,EACnBwI,EAAU1I,YAAa,EACvB0I,EAAU9N,WAAa,kBAAM,EAAK+N,oBAAoBzF,EAAY1F,IAClErF,EAAM+N,UAAUwC,KA5DxB,0CA8DwBxF,EAA0C1F,GAAgB,IAAD,OACnErF,EAAQ,IAAI8K,GAAM,WAAYC,GACpCA,EAAW/K,MAAQA,EACnB,IAAI7D,EAAM,EACV6D,EAAMyO,YAAY,CAAEpM,YAAa,SAACqJ,EAAG5J,GAAJ,OAAa3F,GAAO2F,KACrD9B,EAAMiC,iBAAmB,WAAY9F,EAAM,KAAM,EAAKsU,WAAW1F,IACjE/K,EAAMgB,iBAAmB,WAAY7E,EAAM,KAAM,EAAKsU,WAAW1F,IACjE,IAAM2F,EAAOrL,EAAQ,GAGrB,OAFArF,EAAM+N,UAAU,IAAIiB,GAAY0B,EAAM,aAAe,WAArC,UAAoDA,EAAM,WAAa,YAAvE,kBAA4FrL,GACtG,8BACCrF,IAxEf,yCA0EuB+K,GAA2C,IAAD,OACnD/K,EAAQ,IAAI8K,GAAM,QAASC,GAOjC,OANAA,EAAW/K,MAAQA,EAEnBA,EAAMiC,iBAAmB,kBAAM,EAAKwO,WAAW1F,IAC/C/K,EAAMgB,iBAAmB,kBAAM,EAAKyP,WAAW1F,IAC/C/K,EAAM+N,UAAU,IAAIiB,GAAY,kBAAhB,mCACV,wBACChP,MAlFf,KCxCO,SAAS2Q,GAAkC3Q,EAAwB5H,GAKtE,IAJA,IAAM6X,EAAKjQ,EAAM+K,WAAW/K,MAAM5G,KAC5B8W,EAAQ,SAACU,EAAaT,GAAd,OAA6B5W,KAAKqW,UAAYO,EAAIS,GAAQA,GAElEvF,EAAmB,GACjBjR,EAAE,EAAGA,EAAEhC,EAAEgC,IAAI,CACjB,IAAMiC,EAAI,IAAIkS,GAAevO,EAAO,WAAY,CAAC5F,EAAG8V,EAAKD,EAAGtY,MAHrD,SAGqE2C,EAAE4V,EAAKD,EAAGvY,OAH/E,WAIP2E,EAAEsL,MAAwB,IAAhBpO,KAAKqW,SAAe,GAC9BvT,EAAEzC,MAAQL,KAAKqW,SAAWrW,KAAK8U,GAAI,EACnChS,EAAE0L,QAAU,EACZ1L,EAAEwL,YAAa,EACfxL,EAAEjD,KAAO,CAACzB,MAAO0E,EAAEjD,KAAKzB,MAAOD,OAAQ2E,EAAEjD,KAAK1B,QAC9C2T,EAAQlN,KAAK9B,GAEjB,OAAOgP,E,aCfEwF,GAAb,kDAIC,WAAY7Q,GAAuB,IAAD,uBACjC,cAAM,UAHPA,WAEkC,EAEjC,IACM5F,EAAIb,KAAKC,MAAyB,GAAnBwG,EAAM5G,KAAKzB,MAAe,IADhC,EAETA,EAAQqI,EAAM5G,KAAKzB,MAAQ,EAAIyC,EAC/BE,EAAIf,KAAKC,MAAM7B,EAAQqI,EAAMgL,UAAUrT,MAAQqI,EAAMgL,UAAUtT,QALpC,OAMjC,EAAK2C,SAAW,CAAED,EAAGA,EAAI,EAAGE,EAAGwW,IAC/B,EAAK1X,KAAO,CAAEzB,QAAOD,OAAQ4C,GAC7B,EAAKwN,iBAAkB,EACvB,EAAKC,OAAS,IACd,EAAK/H,MAAQA,EACb,EAAK6H,YAAa,EAXe,EAJnC,kDAkBOM,EAAiB3Q,EAA+ByF,GACrDzF,EAAIuZ,YAAc,QAClBvZ,EAAIwZ,WAAW7I,EAAS/N,EAAI,EAAG+N,EAAS7N,EAAI,EAAGlE,KAAKgD,KAAKzB,MAAQ,EAAGvB,KAAKgD,KAAK1B,OAAS,GACvFF,EAAImW,UAAY,QAEhB,IALqF,EAK/ElU,EAAQrD,KAAKgD,KAAKzB,MAAQvB,KAAK4J,MAAMgL,UAAUrT,MALgC,cAMlEvB,KAAK4J,MAAMqL,SANuD,IAMrF,2BAAuC,CAAC,IAA/BO,EAA8B,QACtC,GAAIA,IAAWxV,KAAf,CACA,IAAMqH,EAAKlE,KAAKC,MAAM2O,EAAS/N,EAAKwR,EAAOvR,SAASD,EAAIX,GAClDiE,EAAKnE,KAAKC,MAAM2O,EAAS7N,EAAKsR,EAAOvR,SAASC,EAAIb,GACpDL,EAAO,EACS,UAAhBwS,EAAO1S,KACV1B,EAAImW,UAAY,MACQ,WAAhB/B,EAAO1S,OACf1B,EAAImW,UAAY,QAChBvU,EAAO,GAER5B,EAAIsW,SAASrQ,EAAIC,EAAItE,EAAMA,GAG3B5B,EAAImW,UAAY,UApBoE,8BAsBrFnW,EAAIuZ,YAAc,MAClB,IAAME,EAAO1X,KAAKC,MAAMpD,KAAK4J,MAAMkL,SAAS9Q,EAAIX,EAAQ0O,EAAS/N,GAC3D8W,EAAO3X,KAAKC,MAAMpD,KAAK4J,MAAMkL,SAAS5Q,EAAIb,EAAQ0O,EAAS7N,GAC3D3C,EAAQ4B,KAAKC,MAAMpD,KAAK4J,MAAM5G,KAAKzB,MAAQ8B,GAC3C/B,EAAS6B,KAAKC,MAAMpD,KAAK4J,MAAM5G,KAAK1B,OAAS+B,GACnDjC,EAAIwZ,WAAWC,EAAMC,EAAMvZ,EAAOD,OA7CpC,GAA2BgQ,ICFdyJ,GAAb,WAGC,WAAmBC,GAAuB,yBAF1CjV,IAAM,EAEmC,KADzCiV,oBACyC,EACxChb,KAAKgb,eAAkBA,EAJzB,wDAOgBxF,EAAerD,GACvBnS,KAAK+F,KAAKoM,EACbnS,KAAK+F,IAAM/F,KAAKgb,iBAClBxF,EAAOpJ,SAAU,OAVpB,KCEO,SAAS6O,GAAkBrR,EAAqB3F,GACnD,OAAOiX,GAAatR,EAAO3F,EAAU,kBAGlC,SAASkX,GAAgBvR,EAAqB3F,GACjD,OAAOiX,GAAatR,EAAO3F,EAAU,gBAGzC,SAASiX,GAAatR,EAAqB3F,EAAgBnB,GACvD,IAAMsY,EAAY,IAAIjD,GAAevO,EAAM9G,EAAMmB,GAAU,GAI3D,OAHAmX,EAAUnX,SAAW,CAACD,EAAGC,EAASD,EAAIoX,EAAUpY,KAAKzB,MAAQ,EACxD2C,EAAGD,EAASC,EAAIkX,EAAUpY,KAAK1B,OAAS,GAC7CsI,EAAM+K,WAAWjM,aAAatD,KAAKtC,GAC5BsY,ECXX,IAEaC,GAAb,kDAIC,WAAYzR,EAAsB3F,EAAiBnB,GAAe,IAAD,8BAChE,cAAM8G,EAAO9G,EAAMmB,IAJpBqX,eAGiE,IAFjEC,qBAEiE,EAEhE,EAAKD,UAAY,EACjB,EAAK/J,MAAQ,EACb,EAAK/N,MAAQ,EACb,EAAKgO,cAAgB,GACrB,EAAKC,YAAa,EAClB,EAAK2G,oBAAoBJ,SAAW,kBAAM,EAAKsD,WAPiB,EAJlE,mDAeEtb,KAAKsb,YAAc,MAfrB,8BAmBEtb,KAAKsb,WAAa,MAnBpB,6BAsB8B,IAAxBE,EAAuB,uDAAN,GACfC,EAAYxH,GAAWjU,KAAM,CAAEuR,MAAOiK,EAAQhY,MAAOxD,KAAKsb,YAChEtb,KAAKwD,MAAQiY,EAAUjY,MACvBxD,KAAKuR,MAAQpO,KAAKY,IAAI0X,EAAUlK,MA3BhB,SAElB,GAA0B4G,ICNbuD,GAAb,WAGC,WAAmBV,GAAuB,yBAF1CjV,IAAM,EAEmC,KADzCiV,oBACyC,EACxChb,KAAKgb,eAAkBA,EAJzB,wDAOaxF,EAAsBrD,GAEE,IAAD,GAD5BnS,KAAK+F,KAAKoM,EACbnS,KAAK+F,IAAM/F,KAAKgb,kBAClBxF,EAAOmG,eAAe3b,MACtB,UAAAA,KAAK4b,oBAAL,cAAA5b,KAAoBwV,QAXvB,KCIMqG,GAA0B,CAAC,UAAU,eAK9BC,GAAb,kDAYI,WAAY5b,GAAgH,IAAD,EAAtF8a,EAAsF,wDAA7D,EAAIe,EAAyD,uDAA5C,EAAKC,EAAuC,uDAAX,UAE5G,GAFuH,qBACvH,cAAMhB,IAZV9a,iBAW2H,IAV3H8b,wBAU2H,IAT3HD,iBAS2H,GAEnHF,GAAwBI,SAASD,GACjC,MAAM5b,MAAM,oCAAD,OAAqC4b,IAHmE,OAIvH,EAAK9b,YAAcA,EACnB,EAAK8b,mBAAqBA,EAC1B,EAAKD,YAAcA,EANoG,EAZ/H,wDAqBgBvG,EAAsBrD,IACF,IAAzBnS,KAAKgb,gBACJ,qEAAkBxF,EAAQrD,KAvBtC,iCA0BeqD,EAAsBzD,EAAgB3Q,EAA+ByF,GAC5E,GAAG7G,KAAK+b,YAAc,GAAK/b,KAAK+b,YAAc,EAC1C,MAAM3b,MAAM,+CAAD,OAAgDJ,KAAK+b,cACpE,IAAIvG,EACA,MAAMpV,MAAM,2BAGhB,IAAM8b,EAAStI,GAAe,CAAC3P,SAAS8N,EAAU/O,KAAKwS,EAAOxS,OACxDmZ,EAAKnc,KAAKE,YAAY8C,KAAKzB,MAAO6a,EAAKpc,KAAKE,YAAY8C,KAAK1B,OAC7D+a,EAAY,CAACrY,EAAGb,KAAKC,MAAM8Y,EAAOlY,EAAImY,EAAG,GAAIjY,EAAGf,KAAKC,MAAM8Y,EAAOhY,EAAIkY,EAAG,IAC/Ehb,EAAI2K,OACJ3K,EAAIkb,YAActc,KAAK+b,YACvB3a,EAAImb,yBAA2Bvc,KAAKgc,mBACpC,IAAMhZ,EAAOhD,KAAKE,YAAY8C,KAC9BhD,KAAKE,YAAYsH,MAAMpG,EAAK,EAAG,EAAG,CAAC6C,SAAS,CAACD,EAAE,EAAEE,EAAE,GAAIlB,QAAO,CAACiB,SAASoY,EAAWrZ,SACnF5B,EAAI4K,cAzCZ,GAAwC0P,ICJ3Bc,GAAb,kDAGC,WAAY5S,EAAsB3F,GAAkB,IAAD,8BAClD,cAAM2F,EAAO3F,EAAU,WAHxBwY,OAAS,IAIR,EAAKjL,cAAgB,EAF6B,EAHpD,wDASaW,GACX,qEAAkBA,GAClB,IAAIuK,EAAW1c,KAAK4J,MAAMkL,SACpB9R,EAAOhD,KAAK4J,MAAM5G,KAClB0X,EAAc1X,EAAKzB,MAAQ,EAA3BmZ,EAAiC1X,EAAK1B,OAAS,EAC/C2C,EAAWoO,GAAWrS,KAAKiE,UAC7BA,EAASD,EAAI0Y,EAAS1Y,EAAI0W,EAC7BgC,EAAS1Y,EAAIC,EAASD,EAAI0W,EAClBzW,EAASD,EAAI0Y,EAAS1Y,EAAIhB,EAAKzB,MAAQmZ,IAC/CgC,EAAS1Y,EAAIC,EAASD,EAAIhB,EAAKzB,MAAQmZ,GACpCzW,EAASC,EAAIwY,EAASxY,EAAIwW,EAC7BgC,EAASxY,EAAID,EAASC,EAAIwW,EAClBzW,EAASC,EAAIwY,EAASxY,EAAIlB,EAAK1B,OAASoZ,IAChDgC,EAASxY,EAAID,EAASC,EAAIlB,EAAK1B,OAASoZ,GACzC1a,KAAK4J,MAAMkL,SAAW,CACrB9Q,EAAGb,KAAKY,IAAIZ,KAAK4W,IAAI2C,EAAS1Y,EAAG,GAAIhE,KAAK4J,MAAMgL,UAAUrT,MAAQyB,EAAKzB,OACrE2C,EAAGf,KAAKY,IAAIZ,KAAK4W,IAAI2C,EAASxY,EAAG,GAAIlE,KAAK4J,MAAMgL,UAAUtT,OAAS0B,EAAK1B,WAzB7E,sCA6BE,IAAMqb,EAAoB3c,KAAK4J,MAAM+K,WAAW/M,eAAeE,wBAAwB,UACjFiU,EAAc5Y,KAAKY,IAAIZ,KAAK4W,IAAI,IAAK/Z,KAAKyc,OAAS,IAAM,KAAM,GAErEzc,KAAKqY,YAAY,IAAIyD,GAAmBa,EADtB,IACoDZ,MAhCxE,sCAkCiB5E,GACU,aAArBA,EAAYrU,MAAwB9C,KAAK4J,MAAMhB,QAClD5I,KAAK4J,MAAMgT,IAAI,IACf5c,KAAK4J,MAAM+N,UAAUsD,GAAkBjb,KAAK4J,MAAOgK,GAAeuD,KAClEA,EAAY/K,SAAU,OAtCzB,GAA4BiP,ICLfwB,GAAb,kDAEI,WAAYjT,GAAsB,IAAD,8BAC7B,cAAMA,EAAO,CAAC5F,EAAEb,KAAKC,MAAMD,KAAKqW,SAAW5P,EAAMgL,UAAUrT,OAAQ2C,EAAE,IAAK,UAMtEiR,MAAc,EALlB,EAAK5D,MAAQ,IACb,EAAK/N,MAAQL,KAAKqW,SAClB,EAAK8B,UAAY,EAJY,EAFrC,wDAWgBnJ,GACR,qEAAkBA,GAClB,IAAM2K,EAAQ9c,KAAKiE,SAASD,EAAIhE,KAAK4J,MAAMmT,OAAO9Y,SAASD,EACrDgZ,EAAQhd,KAAKiE,SAASC,EAAIlE,KAAK4J,MAAMmT,OAAO9Y,SAASC,EACrD+Y,EAAW9Z,KAAKqR,MAAMsI,EAAOE,GACnC,KAAIC,EAAW,MAAf,CAEA,IAAMC,EAAkB/Z,KAAKoR,MAAMyI,EAAOF,GACpCK,EAAeha,KAAK6Q,IAAIkJ,EAAkBld,KAAKsb,WAEjD6B,EAAe,GACfnd,KAAKsb,WAAa,GACb6B,GAAgB,GACrBnd,KAAKsb,WAAa,GACbtb,KAAKmV,QAAUhS,KAAK4W,IAAI,IAAyB,GAAnB/Z,KAAK4J,MAAMwT,MAAY,MAAQ,GAAKH,EAAW,KAClFjd,KAAK4J,MAAMyT,KAAKrd,MAChBid,EAAW,KACXjd,KAAKsd,UA5BjB,6BAgCgC,IAAvB9B,EAAsB,uDAAN,GACjB,8DAAWA,GACdxb,KAAKuR,MAAQpO,KAAKY,IAAI/D,KAAKuR,MAAO,SAlCvC,GAA2B8J,ICEdkC,GAAb,WAKI,WAAYC,GAAgC,IAAlBC,EAAiB,uDAAF,EAAE,yBAJ3CD,WAI2C,OAH3CE,aAAuB,GAGoB,KAF3CD,WAE2C,EACvCzd,KAAKwd,MAAQA,EACbxd,KAAKyd,MAAQA,EAPrB,wDAUajI,EAAsBzD,EAAgB3Q,EAA+ByF,GAC1E,GAAG7G,KAAK0d,aAAazb,QAAUjC,KAAKyd,OAAS5W,EAAyB,IlBDlDZ,EkBCoEjG,KAAK0d,aAAa,GlBD7Etb,EkBCiF2P,ElBA3G9L,EAAEjC,IAAM5B,EAAE4B,GAAKiC,EAAE/B,IAAM9B,EAAE8B,GkBA4F,CACpH,IAAMyZ,EAAWvc,EAAIkb,YACrBlb,EAAIkb,YAActc,KAAKwd,MACvBhI,EAAOvD,UAAUjS,KAAK0d,aAAa,GAAItc,EAAKyF,GAC5CzF,EAAIkb,YAAcqB,ElBLvB,IAAqB1X,EAAS7D,EkBO7BpC,KAAK0d,aAAa3V,KAAKgK,GACpB/R,KAAK0d,aAAazb,OAASjC,KAAKyd,QAC/Bzd,KAAK0d,aAAe1d,KAAK0d,aAAatL,MAAM,QAnBxD,KCKawL,GAAb,kDAGC,WAAY3Z,EAAeT,EAAc+N,EACvCsM,EAAcjU,EAAqBkU,GAAoB,IAAD,8BACvD,cAAMlU,EAPK,SAOO3F,IAJnB4Z,WAGwD,IAFxDhM,cAEwD,EAEvD,EAAKgM,MAAQA,EACb,EAAKra,MAAQA,EACb,EAAK+N,MAAQA,EACb,EAAKC,aAAe,GACpB,EAAKC,YAAa,EAClB,EAAKI,SAAU,IAAIkJ,GAAyB+C,GAC5C,EAAKzF,YAAY,EAAKxG,UACtB,EAAKwG,YAAY,IAAIkF,GAAuB,KATW,EAJzD,4DAgBiBpG,GACZA,IAAgBnX,KAAK6d,OAnBb,WAmBsB1G,EAAYrU,OAE7C9C,KAAKoM,SAAU,EACfpM,KAAK4J,MAAMmU,UAAU/d,KAAK6d,MAAM1G,QApBlC,GAA4BgB,ICLrB,IAAM6F,GAAb,4MAEIL,SAAW,EAFf,0DAGcnI,EAAsBzD,EAAgB3Q,EAA+ByF,GAC3E7G,KAAK2d,SAAWvc,EAAIkb,YACpBlb,EAAIkb,YAAcnZ,KAAKY,IAAI,EAAQ/D,KAAK+F,IAAM/F,KAAKgb,eAAkB,KAL7E,iCAQgBxF,EAAsBzD,EAAgB3Q,EAA+ByF,GAC7EzF,EAAIkb,YAActc,KAAK2d,aAT/B,GAAqCjC,ICAxBuC,GAAb,4MAEIN,SAAW,EAFf,0DAGcnI,EAAsBzD,EAAgB3Q,EAA+ByF,GAC3E7G,KAAK2d,SAAWvc,EAAIkb,YACpBlb,EAAIkb,YAAcnZ,KAAKY,IAAI/D,KAAK+F,IAAM/F,KAAKgb,eAAiB,KALpE,iCAQgBxF,EAAsBzD,EAAgB3Q,EAA+ByF,GAC7EzF,EAAIkb,YAActc,KAAK2d,aAT/B,GAAoCjC,ICevBwC,GAAb,kDAQC,WAAYvJ,EAAuCyI,EAAenO,GAAgB,IAAD,uBAChF,cAVW,gBAUC0F,IARbwJ,OAAiB,EAOgE,EANjFf,WAMiF,IALjFgB,MAAiB,GAKgE,EAJjFrB,YAIiF,IAHjFsB,gBAGiF,IAFjFzV,OAAiB,EAIhB,EAAK0V,SAAS,EAAE,EAAG,CAAE,IAAInW,MAAM,GAAIoW,KAXxB,mBAWqC,GAEhD,EAAKnB,MAAQA,EACb,EAAKnO,MAAQA,EACb0F,EAAW/K,MAAX,gBACA,EAAKgL,UAAY,CAAErT,MAAyB,EAAlB,EAAKyB,KAAKzB,MAAWD,OAA2B,EAAnB,EAAK0B,KAAK1B,QACjE,IAAMkd,EAAO,EAAK5J,UAAUrT,MAAQ,EAAKqT,UAAUtT,OACnD,EAAKyT,YAAa,EAElB,EAAK0J,WbjBA,SAA+B7U,EAAqB5H,GACvD,IAAM0c,EAAQnE,GAAkC3Q,EAAO5H,GAMvD,OALA0c,EAAM1Y,SAAS,SAACC,GACZA,EAAEhC,SAASD,EAAIb,KAAKqW,SAAW5P,EAAMgL,UAAUrT,MAC/C0E,EAAEhC,SAASC,EAAI,EACf+B,EAAEsL,MAAwB,IAAhBpO,KAAKqW,SAAgB,MAE5BkF,EaUOC,CAAsB,gBAAMxb,KAAKC,MAAOob,EAAO,KAAW,GAAa,GAARpB,MAE/E,EAAKzF,UAAU,IAAI8C,GAAJ,kBAEf,IAAMyB,EAAS,CAAElY,EAAG,EAAK4Q,UAAUrT,MAAQ,EAAG2C,EAAG,EAAK0Q,UAAUtT,OAAS,GACzE,EAAKwT,SAAW,CAAE9Q,EAAGkY,EAAOlY,EAAI,EAAKhB,KAAKzB,MAAQ,EAAG2C,EAAGgY,EAAOhY,EAAI,EAAKlB,KAAK1B,OAAS,GAEtF,EAAKyb,OAAS,IAAIP,GAAJ,gBAAiBN,GAC/B,EAAKa,OAAO1E,YAAY,IAAI4F,GAAe,MAC3C,EAAKtG,UAAU,EAAKoF,QAEpB,EAAKsB,WAAajB,EAClB,IAAK,IAAIrb,EAAI,EAAGA,EAAI,EAAKsc,WAAYtc,IACpC,EAAK4V,UAAU,IAAIkF,GAAJ,kBAxBgE,OA0BhF,EAAKtL,MAAQ,EA1BmE,EARlF,iDAqCMqN,GACJ,KAAIA,EAAKrD,iBAAmBqD,EAAKrD,gBAAgB1J,SAAS9L,IAAM,KAAO6Y,EAAKrD,gBAAgBnP,SAA5F,CAGA,IAKI0R,EALE5B,EAAStI,GAAegL,GACxBtH,EAAM,CACXtT,EAAGkY,EAAOlY,EAAIb,KAAK4Q,IAAI6K,EAAKtD,WAAasD,EAAK5b,KAAKzB,MACnD2C,EAAGgY,EAAOhY,EAAIf,KAAK6Q,IAAI4K,EAAKtD,WAAasD,EAAK5b,KAAK1B,QAGhDtB,KAAK+c,SAAW6B,GACnBd,EAAa,KACb9d,KAAK2U,WAAWjM,aAAatD,KAAK,YAGlC0Y,EAAa,IACb9d,KAAK2U,WAAWjM,aAAatD,KAAK,gBAEnC,IAAMyZ,EAAS,IAAIjB,GAAOtG,EAAKsH,EAAKtD,UAAWsD,EAAKrN,MAAQ,GAAIqN,EAAM5e,KAAM8d,GAC5Ec,EAAKrD,gBAAkBsD,EACvB7e,KAAK2X,UAAUkH,MAzDjB,uCA4DkB5e,GAChB,IAAID,KAAK4I,MAET,OAAQ3I,GACP,IAAK,IACL,IAAK,YACJD,KAAK+c,OAAOrS,OACZ,MACD,IAAK,IACL,IAAK,UACJ1K,KAAK+c,OAAOO,OACZ,MACD,IAAK,IACL,IAAK,YACJtd,KAAK+c,OAAOO,MAAM,IAClB,MACD,IAAK,IACL,IAAK,aACJtd,KAAK+c,OAAO+B,QACZ,MACD,IAAK,IACJ9e,KAAKqd,KAAKrd,KAAK+c,WAjFnB,iCAsFa,IAAD,OACN/c,KAAK4I,QAET5I,KAAK4I,OAAQ,EACb5I,KAAK2U,WAAWjM,aAAatD,KAAK,YAElCpF,KAAKqY,YAAY,IAAI0C,GAAyB,MAC9C/a,KAAKqY,YAAY,CAChBhM,WAAY,WACP,EAAKsI,WAAWpM,gBAAgBwW,UAAY,EAAK9P,QACpD,EAAK0F,WAAWpM,gBAAgBwW,UAAY,EAAK9P,MACjD,EAAK0F,WAAWjM,aAAatD,KAAK,iBAEnC4Z,GAAsB,EAAKrK,kBAnG/B,kCAuGc,IAAD,OACX3U,KAAK4I,OAAQ,EACb5I,KAAKqY,YAAY,IAAI0C,GAAyB,MAC9C,IAAMlJ,EAAW,IAAImM,GAAgB,KACrCnM,EAAS+J,aAAe,kBAAM,EAAKmB,OAAO3Q,SAAU,GACpDpM,KAAK+c,OAAO1E,YAAYxG,GACxB7R,KAAKqY,YAAY,CAAEhM,WAAY,kBC1H1B,SAAkCsI,EAAsCyI,EAAcnO,GACzF,IAAMrF,EAAQ,IAAI8K,GAFT,oBAEoBC,GAY7B,OAXA/K,EAAM0U,SAAS,EAAE,EAAG,CAAE,IAAInW,MAAM,GAAIoW,KAH3B,uBAGwC,GACjD5J,EAAW/K,MAAQA,EACnB+K,EAAWgF,aAAa,CAAClZ,KAAK,QAASqJ,MAAMmF,IAC7CrF,EAAMmL,YAAa,EAEnBnL,EAAMiC,iBAAmB,SAAC5L,GAAkB,IAAIie,GAAcvJ,EAAWyI,EAAM,EAAEnO,IACjFrF,EAAMgB,iBAAmB,kBAAM,IAAIsT,GAAcvJ,EAAWyI,EAAM,EAAEnO,IACpErF,EAAM+N,UAAW,IAAIiB,GAAJ,gBAAyBwE,EAAzB,6BAAoDnO,GAC/D,+BACNrF,EAAM6U,WAAWlE,GAAkC3Q,EAAO,KAC1DA,EAAM+K,WAAWjM,aAAatD,KAAK,iBAC5BwE,ED6G4BqV,CAAyB,EAAKtK,WAAY,EAAKyI,MAAO,EAAKnO,YA7GlG,0BAgHKiQ,GACH,IAAIlf,KAAK4I,MAET,GAAI5I,KAAK+c,OAAON,OAASyC,GAAa,EAAG,CACxC,IAAMhD,EAAStI,GAAe5T,KAAK+c,QACnC/c,KAAK2X,UAAUwD,GAAgBnb,KAAMkc,IACrClc,KAAK+c,OAAO3Q,SAAU,EACtBpM,KAAKmf,gBAELnf,KAAK+c,OAAON,QAAUyC,EACtBlf,KAAK+c,OAAOqC,kBA1Hf,gCA6HWvB,EAAe1G,GACpBnX,KAAKwI,OACRnD,QAAQC,IAAR,sBAA2BuY,EAAM/a,KAAjC,wBAAqDqU,EAAYrU,OAE9D9C,KAAK4I,QAGgB,WAArBuO,EAAYrU,KACf9C,KAAK4c,IAAI,IACsB,UAArBzF,EAAYrU,MAAoB+a,IAAU7d,KAAK+c,QACzD5F,EAAY/K,SAAU,EACtBpM,KAAK2X,UAAUwD,GAAgBnb,KAAM4T,GAAeuD,KACpDnX,KAAKiP,OAAS,GACY,MAApBjP,KAAKqe,YACVre,KAAKqf,aAEIxB,IAAU7d,KAAK+c,QAA+B,aAArB5F,EAAYrU,OAC/CqU,EAAY/K,SAAU,EACtBpM,KAAK2X,UAAUsD,GAAkBjb,KAAM4T,GAAeuD,KACtDnX,KAAKiP,OAAS,MAhJjB,uCA0JkBjL,EAAWE,GACvBlE,KAAK4I,QAET5I,KAAK8L,YAAY9H,EAAGE,GACpBlE,KAAKqd,KAAKrd,KAAK+c,WA9JjB,kCAiKa/Y,EAAWE,GACtB,IAAIlE,KAAK4I,MAAT,CAEA,IAAMkU,EAAQ9c,KAAK+c,OAAO9Y,SAASD,EAAIA,EAAIhE,KAAK8U,SAAS9Q,EACnDgZ,EAAQhd,KAAK+c,OAAO9Y,SAASC,EAAIA,EAAIlE,KAAK8U,SAAS5Q,EACnD+Y,EAAW9Z,KAAKqR,MAAMsI,EAAOE,GAC7BE,EAAkB/Z,KAAKoR,MAAMyI,EAAOF,GACpCK,EAAeha,KAAK6Q,IAAIkJ,EAAkBld,KAAK+c,OAAOzB,WAExD6B,EAAe,GAClBnd,KAAK+c,OAAOzB,WAAa,GACjB6B,GAAgB,KACxBnd,KAAK+c,OAAOzB,WAAa,IACtB2B,EAAW,KACdjd,KAAK+c,OAAOO,OACZtd,KAAKwR,cAAgB,GAErBxR,KAAKwR,cAAgB,KAlLxB,0BAmJWvC,GACTjP,KAAKme,OAASlP,EACdjP,KAAK2U,WAAWgF,aAAa,CAAElZ,KAAM,QAASqJ,MAAQ9J,KAAKiP,SArJ7D,eAwJE,OAAOjP,KAAKme,WAxJd,GAAmCzJ,IEX5B,SAASsK,GAAsBrK,GAClC,IAAM/K,EAAQ,IAAI8K,GAFT,eAEoBC,GAC7B/K,EAAM0U,SAAS,EAAE,EAAG,CAAE,IAAInW,MAAM,GAAIoW,KAH3B,kBAGwC,GACjD5J,EAAW/K,MAAQA,EACnB+K,EAAWgF,aAAa,CAAClZ,KAAK,QAASqJ,MAAM,IAC7CF,EAAMmL,YAAa,EAEnBnL,EAAMiC,iBAAmB,SAAC5L,GAAkB,IAAIie,GAAcvJ,EAAW,EAAE,IAC3E/K,EAAMgB,iBAAmB,kBAAM,IAAIsT,GAAcvJ,EAAW,EAAE,IAE9D/K,EAAM+N,UAAW,IAAIiB,GAAY,eAAhB,qBAA8CjE,EAAWpM,gBAAgBwW,WACpF,6BACLnV,EAAM6U,WAAWlE,GAAkC3Q,EAAO,KCjBxD,IAAM0V,GAAb,iDAEIP,UAAoB,EAFxB,KAII1V,cAAgB,CAAC,CAAEvG,KAAM,WAAYnC,IAAK,sCAAuC8B,KAAM,EAAGC,QAAS,GAAIjC,KAAM,WACvG,CAAEqC,KAAM,SAAUnC,IAAK,uCAAwC8B,KAAM,EAAGC,QAAS,GAAIW,MAAO,GAAIc,YAAahB,KAAK8U,GAAK,EAAGxX,KAAM,UAChI,CAAEqC,KAAM,SAAUnC,IAAK,oCAAqC0C,MAAO,GAAI5C,KAAM,UAC7E,CAAEqC,KAAM,QAASnC,IAAK,mCAAoC0C,MAAO,GAAI5C,KAAM,WAC3E,CAAEqC,KAAM,iBAAkBnC,IAAK,iDAAkD8B,KAAM,EAAGC,QAAS,EAAGjC,KAAM,WAC5G,CAAEqC,KAAM,eAAgBnC,IAAK,6CAA8C8B,KAAM,EAAGC,QAAS,EAAGjC,KAAM,WACtG,CAAEqC,KAAM,SAAUnC,IAAK,mCAAoCF,KAAM,WACjE,CAAEqC,KAAM,eAAgBnC,IAAK,mCAAoCG,eAAe,EAAML,KAAM,UAC5F,CAAEqC,KAAM,gBAAiBnC,IAAK,8CAA+CG,eAAe,EAAOL,KAAM,UACzG,CAAEqC,KAAM,oBAAqBnC,IAAK,mCAAoCG,eAAe,EAAML,KAAM,WAb3G,KAeI0I,cAAgB,CAAC,CAAErG,KAAM,SAAUnC,IAAK,0CAClC,CAAEmC,KAAM,cAAenC,IAAK,gDAC5B,CAAEmC,KAAM,WAAYnC,IAAK,wCACzB,CAAEmC,KAAM,gBAAiBnC,IAAK,6CAC9B,CAAEmC,KAAM,iBAAkBnC,IAAK,8CAC/B,CAAEmC,KAAM,eAAgBnC,IAAK,4CAC7B,CAAEmC,KAAM,eAAgBnC,IAAK,8CArBvC,iDAuBSgU,GACDqK,GAAsBrK,OAxB9B,K,qECQMrI,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+S,OAAQ,CACJtb,SAAU,YAEdub,WAAS,GACLC,UAAWjT,EAAM2C,QAAQ,GACzBuQ,aAAclT,EAAM2C,QAAQ,GAC5BwQ,QAASnT,EAAM2C,QAAQ,IAHlB,eAIJ3C,EAAMY,YAAYwS,GAAG,IAAyB,EAAnBpT,EAAM2C,QAAQ,IAAU,CAClDsQ,UAAWjT,EAAM2C,QAAQ,GACzBuQ,aAAclT,EAAM2C,QAAQ,GAC5BwQ,QAASnT,EAAM2C,QAAQ,KAPpB,2BASK,QATL,GAWTP,KAAM,CACFiR,SAAU,IACVH,aAAclT,EAAM2C,QAAQ,IAEhC2Q,MAAO,CACHxe,OAAQ,KAEZye,KAAK,CACDC,eAAgB,QAEpBC,WAAW,CACPC,WAAY1T,EAAM2C,QAAQ,QAI1B,SAASgR,KACb,IAAMnT,EAAUV,KAEhB,OAEI,kBAAC,IAAM4D,SAAP,KACA,kBAACC,EAAA,EAAD,CAAQlM,SAAS,WAAW0J,MAAM,UAAUF,UAAWT,EAAQuS,QAC/D,kBAAChP,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAYnC,QAAQ,KAAKX,MAAM,UAAUyS,QAAM,GAA/C,aAKJ,kBAACC,GAAA,EAAD,CAAKhS,UAAU,MAAMiS,SAAS,WAC5B,kBAACC,GAAA,EAAD,CAAMf,WAAS,EAACgB,WAAW,SAASC,QAAU,SAASC,UAAU,SAASjT,UAAWT,EAAQwS,WACzF,kBAACmB,GAAA,EAAD,CAAMlT,UAAWT,EAAQ4B,MACrB,kBAAC,IAAD,CAAM4B,GAAG,SAAS/C,UAAWT,EAAQ+S,MACjC,kBAACa,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIpT,UAAWT,EAAQ8S,MACnBzf,MAAM,8CACN+O,MAAM,mBAEV,kBAAC0R,GAAA,EAAD,KACI,kBAACrQ,EAAA,EAAD,CAAYsQ,cAAY,EAACzS,QAAQ,KAAKD,UAAU,MAAhD,qBAGA,kBAACoC,EAAA,EAAD,CAAYnC,QAAQ,QAAQX,MAAM,gBAAgBU,UAAU,KAA5D,+GAOhB,kBAACsS,GAAA,EAAD,CAAMlT,UAAWT,EAAQ4B,MACrB,kBAAC,IAAD,CAAM4B,GAAG,QAAQ/C,UAAWT,EAAQ+S,MAChC,kBAACa,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIpT,UAAWT,EAAQ8S,MACnBzf,MAAM,0CACN+O,MAAM,uBAEV,kBAAC0R,GAAA,EAAD,KACI,kBAACrQ,EAAA,EAAD,CAAYsQ,cAAY,EAACzS,QAAQ,KAAKD,UAAU,MAAhD,sBAGA,kBAACoC,EAAA,EAAD,CAAYnC,QAAQ,QAAQX,MAAM,gBAAgBU,UAAU,KAA5D,kHAOhB,kBAAC,IAAD,CAAYA,UAAU,SAASC,QAAQ,QAAQb,UAAWT,EAAQiT,WACpEvS,QAAS,kBAAMlE,OAAOsD,KAAK,yCADzB,wBCnFG,SAASkU,KACtB,OACE,kBAAC,IAAD,CAAQC,SAAS,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACZ,kBAAC,EAAD,CAAe3Y,gBAAiB,IAAI+W,MAEpC,kBAAC,IAAD,CAAO4B,KAAK,SACZ,kBAAC,EAAD,CAAe3Y,gBAAiB,IAAIkR,MAEpC,kBAAC,IAAD,CAAOyH,KAAK,KACV,kBAACf,GAAD,SCXQgB,QACW,cAA7B3X,OAAOuI,SAASqP,UAEe,UAA7B5X,OAAOuI,SAASqP,UAEhB5X,OAAOuI,SAASqP,SAASC,MACvB,2D,mBCfA7U,GAAQ8U,aAAe,CAC3BC,WAAY,CACVC,WAAY,eAEZC,UAAW,CAEPC,eAAgB,CACd,UAAW,CACTC,KAAM,CACFpgB,MAAO,OACPD,OAAQ,OACRoZ,OAAQ,UAMxBlO,GAAM+U,WAAWK,GAAjB,cACEC,SAAU,OACV,2BAA4B,CAC1BA,SAAU,SAEXrV,GAAMY,YAAYwS,GAAG,MAAQ,CAC5BiC,SAAU,SAICrV,UCpBfsV,IAASC,OACP,kBAACC,EAAA,EAAD,CAAexV,MAAOA,IAEpB,kBAACyV,EAAA,EAAD,MACA,kBAACjB,GAAD,OAEF9f,SAASghB,cAAc,UFmHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzL,GACL3R,QAAQ2R,MAAMA,EAAM0L,c","file":"static/js/main.a2f939ce.chunk.js","sourcesContent":["import { SpriteSheet } from \"./SpriteSheet\";\nimport { Size } from \"../types/Size\";\nimport { Rectangle } from \"../types/Rectangle\";\n\nexport interface PreloadImage{\n    name:string;\n    src:string;\n    type:string;\n    rows?:number;\n    columns?:number;\n    scale?:number;\n    angleOffset?:number;\n    fixRow?:number;\n    fixColumn?:number;\n    noTransparent?:boolean;\n}\nconst VALID_TYPES = ['rotate', 'animate', 'static'];\n\nfunction makeTransparent(image: HTMLImageElement):HTMLImageElement  {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n    canvas.height = image.height;\n    canvas.width = image.width;\n    ctx.drawImage(image,0,0);\n    const imgd = ctx.getImageData(0, 0, image.width, image.height);\n    const pix = imgd.data;\n    const newColor = {r:0,g:0,b:0, a:0};\n    let top:number[]\n    for (let i = 0, n = pix.length; i <n; i += 4) {\n        const r = pix[i], g = pix[i+1],b = pix[i+2];\n        if(i===0){\n            top = [r,g,b];\n        }\n        if(r === top![0] && g === top![1] && b === top![2]){ \n            // Change the white to whatever.\n            pix[i] = newColor.r;\n            pix[i+1] = newColor.g;\n            pix[i+2] = newColor.b;\n            pix[i+3] = newColor.a;\n        }\n    }\n    ctx.putImageData(imgd, 0,0);\n    const output = document.createElement('img');\n    output.src = canvas.toDataURL('image/png');\n    return output;\n}\n\n\nexport class ImagePreloader{\n    imageCache: Map<string,SpriteSheetImpl> = new Map();\n    loadsCompleted:number =0;\n    nLoads:number = 0;\n\n    private loadCallback?:() => void;\n\n    registerCallback(callback:() => void  ){\n        if(this.loadsCompleted === this.nLoads)\n            callback();\n        this.loadCallback = callback;\n    }\n    \n    getSpriteSheetFromCache(key:string):SpriteSheet{\n        const spriteSheet = this.imageCache.get(key);\n        if(!spriteSheet)\n            throw Error(\"unable to load image: \" + key);\n        return spriteSheet;\n    }\n    getImageFromCache(key:string):HTMLImageElement{\n        const spriteSheet = this.imageCache.get(key);\n        if(!spriteSheet)\n            throw Error(\"unable to load image: \" + key);\n        return spriteSheet.image;\n    }\n    \n    preLoadImages(images:PreloadImage[]):void{\n        \n        for(let des of images){\n            if(VALID_TYPES.indexOf(des.type) === -1)\n                throw Error(`Invalid type: ${des.type}`);\n            const image = new Image();\n            this.nLoads++;\n            image.src = des.src;\n            image.onload = this._createOnLoad(image, des);\n        }\n    }\n    private _createOnLoad(image:HTMLImageElement, des:PreloadImage){\n        return () => {\n            if(des.noTransparent){\n                this._cache(image, des)();\n            }else{\n                const newImage = makeTransparent(image);\n                newImage.onload =  this._cache(newImage, des);\n            }\n        };\n    }\n    private _cache(image:HTMLImageElement, des:PreloadImage){\n        return () => {\n            const rows = (des.rows) ? des.rows : 1;\n            const columns = (des.columns) ? des.columns :1;\n            \n            const sheet = new SpriteSheetImpl(image, rows, columns, des);\n            this.imageCache.set(des.name, sheet);\n            if(++this.loadsCompleted === this.nLoads && this.loadCallback){\n                this.loadCallback();\n            }\n        }\n    }\n}\n\nclass SpriteSheetImpl implements SpriteSheet{\n    readonly rows:number;\n    readonly columns:number;\n    readonly size:Size;\n    readonly type:string;\n    readonly frameCount:number;\n\n    description:PreloadImage;\n    image:HTMLImageElement;\n    private srcSize:Size;\n\n    constructor(image:HTMLImageElement, rows:number, columns:number, description:PreloadImage) {\n        this.image = image;\n        this.rows = rows;\n        this.columns = columns;\n        this.srcSize = {width:Math.floor(this.image.width/this.columns),\n            height: Math.floor(this.image.height/this.rows)};\n        if(description.scale){\n            this.size = {width:Math.floor(this.srcSize.width * description.scale), height:Math.floor(this.srcSize.height * description.scale)};\n            this._preRenderScaledImage(description.scale);\n        }else{\n            this.size = this.srcSize;\n        }\n        this.description = description;\n        this.type = description.type;\n        this.frameCount = this.rows*this.columns;\n    }\n    paint(ctx: CanvasRenderingContext2D, frame:number, angle:number, source:Rectangle, dest:Rectangle):void{    \n        let column, row;\n\n        if(this.description.type === 'static'){\n            column = (this.description.fixColumn) ? this.description.fixColumn : 0;\n            row = (this.description.fixRow) ? this.description.fixRow : 0;\n            angle =0;\n\t\t}else{\n            frame = Math.min(frame, this.frameCount-1);\n            column = Math.floor(frame % this.columns);\n            row = Math.floor( frame/this.columns );        \n        }\n\n        let x = dest.position.x, y= dest.position.y;\n        if(row<0 || row >= this.rows || column < 0 || column >= this.columns)\n            throw Error(`Row and columns of sprite need to be in bounds (${row},${column})`);\n        if(this.description.angleOffset)\n            angle += this.description.angleOffset;\n        if(angle){\n            ctx.translate(x + this.size.width / 2.0, y+ this.size.height / 2.0);\n            ctx.rotate(angle);\n            x = 0 - this.size.width / 2.0;\n            y = 0 - this.size.height / 2.0;\n        }\n\n        const srcX = Math.floor(this.image.width * ((column)/this.columns)) + source.position.x;\n        const srcY = Math.floor(this.image.height * ((row)/this.rows)) + source.position.y;\n            ctx.drawImage(this.image, srcX, srcY, source.size.width, source.size.height,\n                 x, y, dest.size.width, dest.size.height);\n        if(angle){\n            ctx.setTransform(1, 0, 0, 1, 0, 0);    \n        }\n    }\n    private _preRenderScaledImage(scale:number){\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\")!;\n        const image = this.image;\n\n        const w = Math.floor(image.width * scale) , h = Math.floor(image.height * scale);\n        canvas.height = h;\n        canvas.width = w;\n        ctx.drawImage(this.image, 0, 0, image.width, image.height, 0, 0, w, h);\n        const output = document.createElement('img');\n        output.src = canvas.toDataURL('image/png');\n        output.onload = () =>{\n            this.srcSize = {width:Math.floor(w/this.columns),\n                height: Math.floor(h/this.rows)};\n            this.image = output; \n        };\n    }\n}\n\n//export var __IMAGEPRELOADER__:ImagePreloader = new ImagePreloader();\n","import { Howl, Howler } from 'howler';\n\n\nexport interface PreloadSoundEffect{\n    name:string;\n    src:string;\n}\n\nexport default class SoundEffects {\n    sounds:Map<string, Howl> = new Map();\n    rate:number = 1.0;\n\n    private _mute:boolean = false;\n\n  constructor (effectPreloads:PreloadSoundEffect[]) {\n    for(let effect of effectPreloads )\n        this.sounds.set(effect.name, new Howl({src:effect.src,preload: true}) );\n    this.rate = 1.0;\n    this._mute = false;\n  }\n\n  play (key:string) {\n    const sound = this.sounds.get(key);\n    if(sound){\n        sound.rate(this.rate);\n        sound.play();\n    }else{\n        console.log(`Sound not found! ${key}`);\n    }\n  }\n\n  get mute ():boolean { return this._mute; }\n\n  set mute (mute:boolean) {\n    Howler.mute(mute);\n    this._mute = mute;\n  }\n}\n","import { Size } from \"../types/Size\";\nimport { Point } from \"../types/Point\";\nimport { Camera } from \"../types/Camera\";\nimport { TileAtlas } from \"./TileAtlas\";\nimport { Tile } from \"./Tile\";\n\nexport const EMPTY_TILE = -1;\n\n// logicGrid: [[\n//     3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n//     3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,\n//     3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,\n//     3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,\n//     3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,\n//     3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3,\n//     3, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,\n//     3, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,\n//     3, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3,\n//     3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 3,\n//     3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 3,\n//     3, 3, 3, 1, 1, 2, 3, 3, 3, 3, 3, 3\n// ], [\n//     4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4,\n//     4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,\n//     4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,\n//     4, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0, 4,\n//     4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,\n//     4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,\n//     4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,\n//     4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,\n//     4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,\n//     4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,\n//     4, 4, 4, 0, 5, 4, 4, 4, 4, 4, 4, 4,\n//     4, 4, 4, 0, 0, 3, 3, 3, 3, 3, 3, 3\n// ]],\n\nexport class TileMap{\n    tileSize:Size;\n    tileAtlas:TileAtlas;\n    rows:number;\n    columns:number;\n\n\n    private readonly logicGrid:number[][];\n\n    readonly worldSize:Size;\n\n    constructor(tileAtlas:TileAtlas, rows:number, columns:number, logicGrid:string[][], tileSize:Size|undefined = undefined){\n        logicGrid.forEach( (a) => {\n            if(!a  || rows*columns !== a.length)\n                throw Error(`Length of array (${!a || a.length}) doesn't match rows(${rows}) columns(${columns}).`)\n        });\n        this.tileAtlas = tileAtlas;\n        this.rows = rows;\n        this.columns = columns;\n        this.logicGrid = tileAtlas.convertLogicMapStringToIndex(logicGrid);\n        this.tileSize = (tileSize !== undefined) ? tileSize : calcDefaultTileSize(this.logicGrid, tileAtlas);\n        this.worldSize = {width: this.tileSize.width * columns, height: this.tileSize.height * rows};\n    }\n\n    addTile(name:string, layer:number, row:number, column:number){\n        const index = this.tileAtlas.nameToIndexMap.get(name);\n        if(!index)\n            throw Error(`Tile not found`)\n        this.logicGrid[layer][this.rows * row + column] = index;\n    }\n\n    removeTile(layer:number, row:number, column:number){\n        this.logicGrid[layer][this.rows * row + column] = EMPTY_TILE;\n    }\n\n    getRowAtY(y:number):number{\n        return Math.floor(y /this.tileSize.height);\n    }\n\n    getColumnAtX(x:number):number{\n        return Math.floor(x /this.tileSize.width);\n    }\n\n    getTilesAtPosition(position:Point, layer:number):Tile | undefined{\n        const row = this.getRowAtY(position.y);\n        const column = this.getColumnAtX(position.x);\n        return this.getTilesAt(row, column, layer);\n    }\n\n    getTilesAt(row:number, column:number, layer:number):Tile | undefined{\n        const id = this.logicGrid[layer][this.rows * row + column];\n        return (id === EMPTY_TILE) ? undefined : this.tileAtlas.getTile(id);\n    }\n\n    private age =0;\n    paint(camera:Camera,  ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number){\n        this.age+=timeSinceLastAnimation;\n        const frameCount60FPS = Math.floor(this.age / (1000/60));\n        const startRow = this.getRowAtY(camera.position.y);\n        const endRow = this.getRowAtY(camera.position.y + camera.size.height);\n        const startColumn = this.getColumnAtX(camera.position.x);\n        const endColumn = this.getColumnAtX( camera.position.x + camera.size.width );\n        const wsz = this.worldSize, tsz = this.tileSize;\n        for(let column = startColumn; column<= endColumn; column++){\n            for(let row = startRow; row<=endRow; row++){\n                //draw and clip viewport\n                let w= Math.min( tsz.width, wsz.width - ((column) * tsz.width ) );\n                let h= Math.min( tsz.height, wsz.height - ((row) * tsz.height ));\n\n                let x1 = ((column) * tsz.width ) - camera.position.x;\n                let y1 = ((row) * tsz.height ) - camera.position.y;\n\n                let srcX=0, srcY=0;\n                //clip drawing.\n                if(x1 < 0){\n                    srcX = x1 * -1;\n                    w -= srcX;\n                    x1 =0;\n                    if( w <=0)\n                        continue; \n                }\n                if(y1 < 0){\n                    srcY = y1 * -1;\n                    h -= srcY;\n                    y1 =0;\n                    if( h <=0)\n                        continue; \n                }\n                if(x1+w > camera.size.width){\n                    w -=  (x1 + w) - camera.size.width;\n                    if(w<=0)\n                        continue;\n                }\n                if(y1+h > camera.size.height){\n                    h -=  (y1 + h) - camera.size.height;\n                    if(h<=0)\n                        continue;\n                }\n                for(let layer = 0; layer<this.logicGrid.length; layer++){\n                    const tile = this.getTilesAt(row, column, layer);\n                    if(tile){\n                        tile.paint(ctx, frameCount60FPS, 0, {position:{x:srcX, y:srcY}, size: {width:w, height:h}}, {position:{x:x1, y:y1}, size: {width:w, height:h}} );\n                    }\n                }\n            }\n        }\n    }\n}\n\n\nfunction calcDefaultTileSize(logicGrid:number[][], tileAtlas:TileAtlas):Size{\n    let index:number | undefined = undefined;\n    for(let grid of logicGrid){\n        for(let i of grid){\n            if(i !== EMPTY_TILE){\n                index = i;\n                break;\n            }\n        }\n    }\n    if(index === undefined){\n        throw Error(`Logic Grid is empty!`);\n    }\n    const tile = tileAtlas.getTile(index);\n    return tile.size;\n}","import { Tile } from \"./Tile\";\nimport { ImagePreloader } from \"../util/ImagePreloader\";\nimport { SpriteSheet } from \"../util/SpriteSheet\";\nimport { Size } from \"../types/Size\";\nimport { EMPTY_TILE } from \"./TileMap\";\nimport { Rectangle } from \"../types/Rectangle\";\n\nclass StaticTile implements Tile{\n    name:string;\n    size:Size;\n    spriteSheet:SpriteSheet;\n\n    constructor(name:string, spriteSheet:SpriteSheet){\n        this.spriteSheet = spriteSheet;\n        this.size = spriteSheet.size;\n        this.name = name;\n    }\n\n    paint(ctx: CanvasRenderingContext2D, frameCount60FPS:number, angle:number, source:Rectangle, dest:Rectangle):void{\n        this.spriteSheet.paint(ctx, frameCount60FPS, angle, source, dest );\n    }\n}\n\nexport class TileAtlas {\n    tiles:Tile[] = [];\n    nameToIndexMap:Map<string, number> = new Map();\n    imagePreloader:ImagePreloader;\n\n    constructor(imagePreloader:ImagePreloader){\n        this.imagePreloader = imagePreloader;\n    }\n    \n    getTile(index: number): Tile{\n        return this.tiles[index];\n    }\n    addTile(name:string):number{\n        const spriteSheet = this.imagePreloader.getSpriteSheetFromCache(name);\n        const tile = new StaticTile(name, spriteSheet);\n        const index = this.tiles.push(tile) -1;\n        this.nameToIndexMap.set(tile.name, index);\n        return index;\n    }\n    convertLogicMapStringToIndex(logicMap:string[][]):number[][]{\n        const rv:number[][] = [];\n        for(let i=0; i< logicMap.length; i++){\n            const array = new Array<number>(logicMap[i].length);\n            for(let j=0; j<logicMap[i].length; j++){\n                const name = logicMap[i][j];\n                let index;\n                if(!name || name.length === 0)\n                    index = EMPTY_TILE;\n                else{\n                    index = this.nameToIndexMap.get(name);\n                    if(index === undefined){\n                        index = this.addTile(name);\n                    }\n                }\n                array[j] = index;\n            }\n            rv[i] = array;\n        }\n        return rv;\n    }\n}\n","import Scene from './Scene';\nimport { ImagePreloader } from './util/ImagePreloader';\nimport { GameInitializer } from './GameInitializer';\nimport SoundEffects from './util/SoundEffects';\nimport { Point } from './types/Point';\nimport { TileAtlas } from './tiles/TileAtlas';\n\nexport interface GameEvent{\n    type:string;\n    value:any;\n}\n\nexport interface HandleGameEvent{\n    (event:GameEvent):void;\n}\n\n\nexport class GameController<T extends GameInitializer<T>>{\n\n    debug: boolean = false;\n    keysPressed: Map<string, boolean> = new Map();\n    imagePreloader:ImagePreloader;\n    soundEffects:SoundEffects;\n    canvas?:HTMLCanvasElement;\n    isShutdown:boolean = false;\n    pause:boolean = false;\n    gameInitializer:T;\n    touchEvent?:Point;\n    tileAtlas:TileAtlas;\n    \n    private _mute:boolean = false;\n    private readyCallback?: () => void;\n    private _scene?: Scene<T>;\n    private events:GameEvent[] = [];\n    \n    private gameEventListeners:HandleGameEvent[] = [];\n    constructor(gameInitializer:T){\n        this.gameInitializer = gameInitializer;\n        this.soundEffects = new SoundEffects(gameInitializer.preloadSounds || []);\n        this.imagePreloader = new ImagePreloader();\n        this.imagePreloader.preLoadImages(gameInitializer.preloadImages);\n        this.tileAtlas = new TileAtlas(this.imagePreloader);\n    }\n\n    init(canvas:HTMLCanvasElement, readyCallback: () => void) {\n        this.readyCallback = readyCallback;\n        this.canvas = canvas;  \n        this.imagePreloader.registerCallback( ()=>{  this._handleImagesLoaded()});\n    }\n\n    restart(){\n        const canvas = this.canvas!;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.gameInitializer.init(this);\n        if(!this.scene)\n            throw Error(\"Game Initializer must set scene.\");\n    }\n\n    set scene(scene: Scene<T>) {\n        if (this.debug)\n            console.log(`SetScene: ${scene.name}`);\n        scene.debug = this.debug;\n        const canvas = this.canvas;\n        scene.size = {width:canvas!.width, height:canvas!.height};\n        this._scene = scene;\n        this.touchEvent = undefined;\n    }\n    get scene(): Scene<T> {\n        return this._scene!;\n    }\n\n    publishEvent(event:GameEvent){\n        if(this.debug)\n                console.log(`Publish Game Event: {${event.type}, ${event.value}}`);\n        this.events.push(event);\n    }\n\n    subscribeEvent(gameEventListener:HandleGameEvent){\n        this.gameEventListeners.push(gameEventListener);\n    }\n    set mute(mute:boolean){\n        this._mute = mute;\n        this.soundEffects.mute = mute;\n    }\n    get mute(){\n        return this._mute;\n    }\n    private _handleImagesLoaded(){\n        const that = this;\n        const canvas = this.canvas!;\n        const keyDown = (event:KeyboardEvent) => {event.preventDefault(); this.keysPressed.set(event.key, true);};\n        const keyUp = (event:KeyboardEvent) => {event.preventDefault(); that.keysPressed.delete(event.key);};\n        const mouseDown = (e:MouseEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const x = e.clientX - rect.left, y = e.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`MouseDown Event: (${x},${y})`);\n            if(!that.pause && that.scene){\n                that.scene.handleMouseClick(x,y);\n                this.touchEvent = {x,y};\n            }\n        };\n        const mouseMove = (e:MouseEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            e.preventDefault();\n            if(this.touchEvent)\n                this.touchEvent = {x:e.clientX - rect.left,y:e.clientY - rect.top};\n        };\n        const mouseUp = (e:MouseEvent) => {\n            this.touchEvent = undefined;\n            e.preventDefault();\n        };\n        const touchMove = (e:TouchEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            e.preventDefault();\n            this.touchEvent = {x:touch.clientX - rect.left, y: touch.clientY - rect.top}\n        };\n        const touchEnd = (e:TouchEvent) => {\n            this.touchEvent = undefined;\n            e.preventDefault();\n        };\n        const touchStart = (e:TouchEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            e.preventDefault();\n            this.touchEvent = {x:touch.clientX - rect.left, y: touch.clientY - rect.top};\n            if(!that.pause && that.scene)\n                that.scene.handleMouseClick(this.touchEvent.x,this.touchEvent.y);\n        };\n        const touchCancel = (e:TouchEvent) => {\n            this.touchEvent = undefined;\n            e.preventDefault();\n        };\n\n        window.addEventListener('keydown', keyDown);\n        window.addEventListener('keyup',keyUp);\n        canvas.addEventListener('mousedown', mouseDown);\n        canvas.addEventListener('mousemove', mouseMove);\n        canvas.addEventListener('mouseup', mouseUp);\n        canvas.addEventListener(\"touchmove\", touchMove, false);\n        canvas.addEventListener(\"touchend\", touchEnd, false);\n        canvas.addEventListener(\"touchcancel\", touchCancel, false);\n        canvas.addEventListener(\"touchstart\", touchStart, false);\n\n        let lastTime = 0;\n        this.restart();\n        \n        function loop(time: number) {\n            if(that.isShutdown){\n                if(that.debug)\n                    console.log(\"shutting down game controller.\");\n                window.removeEventListener('keydown', keyDown);\n                window.removeEventListener('keyup',keyUp);\n                canvas.removeEventListener('mousedown', mouseDown);\n                canvas.removeEventListener('mousemove', mouseMove);\n                canvas.removeEventListener('mouseup', mouseUp);\n                canvas.removeEventListener(\"touchmove\", touchMove, false);\n                canvas.removeEventListener(\"touchend\", touchEnd, false);\n                canvas.removeEventListener(\"touchcancel\", touchCancel, false);\n                canvas.removeEventListener(\"touchstart\", touchStart, false);\n                return;\n            }\n            let timeSinceLastAnimation = (!lastTime) ? 0: time - lastTime;\n            lastTime = time;\n            if(timeSinceLastAnimation > 100 || that.pause){\n                //assume animation thread was paused due to moving off window/browser\n                timeSinceLastAnimation = 0;\n            }\n            const ctx = canvas.getContext('2d')!;\n            const size = {width:canvas.width, height: canvas.height};\n            if (size.width !== window.innerWidth || size.height !== window.innerHeight) {\n                // If window size is changed this is called to resize the canvas\n                // It is not called via the resize event as that can fire to often an\n                // debounce makes it feel sluggish so is called from main loop.\n                that.restart();\n            }\n\n            that._updateScene(ctx, timeSinceLastAnimation);\n\n            requestAnimationFrame(loop);\n        }\n        requestAnimationFrame(loop);\n        this.readyCallback!();\n    }\n\n    private _timer =0;\n    private _updateScene(ctx:CanvasRenderingContext2D,timeSinceLastAnimation:number){\n        this.keysPressed.forEach((value, key) => {\n            if(this.debug){\n                console.log(`KeyPressed Event: ${key}`);\n            }\n            this.scene.handleKeyPressed(key);\n        });\n        if(this.touchEvent){\n            this.scene.handleTouch(this.touchEvent.x,this.touchEvent.y);\n        }\n\n        ctx.save(); //Freeze redraw\n        this.scene.paint({x:0,y:0}, ctx, timeSinceLastAnimation);\n        ctx.restore();//now do redraw\n\n        this.scene.updateModel(timeSinceLastAnimation);\n\n        \n        if(  (this._timer += timeSinceLastAnimation) > 600){\n            window.queueMicrotask( () => { \n                this.events.forEach( (event) => this.gameEventListeners.forEach( (handler) => handler(event)));\n                this.events = [];\n            });\n            this._timer = 0;\n        }\n        \n        if(!this.scene.isAlive){\n            if(this.debug)\n                console.log(`Scene Killed: ${this.scene.name}`);\n            this.scene.handleKill();\n            if(!this.scene.isAlive)\n                throw Error(`Scene is still dead.  Can't have a dead scene (${this.scene.name})`);\n        }\n        \n    }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { IconButton, Link } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\ninfoButton: {\n\n  },\n})\n);\n\nexport default function InfoDialog() {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton edge=\"start\" className={classes.infoButton} onClick={handleClickOpen} color=\"primary\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Cicles\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          A simple 2D game library for JavaScript to teach my kids programming.   \n          A demo space game implemented using the library.\n        \n          <br></br>\n          \n          <Link component=\"button\" variant=\"body2\"\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </Link>\n          <br></br><br></br>\n          <Link variant=\"body2\">\n          nickzinn@gmail.com\n          </Link>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            <b>CLOSE</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './GameComponent.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PauseCircleOutline, PlayCircleOutline, Refresh, VolumeUp, VolumeOff } from '@material-ui/icons';\nimport { GameController} from '../gamelib/GameController';\nimport { CircularProgress, createStyles, Theme, WithStyles, withStyles, Backdrop, Button } from '@material-ui/core';\nimport InfoDialog from './InfoDialog';\nimport { GameInitializer } from '../gamelib/GameInitializer';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  homeButton: {\n    textTransform: 'none',\n  },\n  controlButton: {\n  },\n  score: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\ninterface Props<T extends GameInitializer<T>> extends WithStyles<typeof styles> {\n  gameInitializer:T;\n}\n\ninterface IState{\n  score:number;\n  imagesLoaded:boolean;\n  pause:boolean;\n  mute:boolean;\n}\n\nconst GameComponent = withStyles(styles)( class <T extends GameInitializer<T>> extends React.Component<Props<T>> {\n \n  canvasRef = React.createRef<HTMLCanvasElement>();\n  gameController:GameController<T>;\n  state:IState;\n\n  constructor(props:Props<T>){\n    super(props);\n    this.gameController= new GameController<T>(props.gameInitializer);\n    //this.gameController.debug = true;\n    this.state = { score:0, imagesLoaded:false, pause:false, mute:false};\n  }\n  componentDidMount() { \n    const canvas = this.canvasRef.current;\n    this.gameController.init(canvas!, () => this.setState({ imagesLoaded:true }));\n    this.gameController.subscribeEvent( (e) => {\n      if(e.type === 'score')\n        this.setState({score:e.value});\n    })\n  }\n  handleRestart(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.restart();\n  }\n  handlePause(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.pause = !this.gameController.pause;\n    this.setState({pause: this.gameController.pause});\n  }\n  handleMute(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.mute = !this.gameController.mute;\n    this.setState({mute: this.gameController.mute});  \n  }\n  componentWillUnmount(){\n    this.gameController.isShutdown = true;\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n    <React.Fragment>\n      <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar variant=\"dense\">\n          <InfoDialog></InfoDialog>\n          <Button component={Link} to=\"/\" className={classes.homeButton} >\n          <Typography variant=\"h5\" color=\"primary\"   className={classes.title}>\n          Circles\n          </Typography>\n          </Button>\n          <Typography variant=\"h5\" color=\"primary\" className={classes.title}>\n            &nbsp;\n          </Typography>\n          <Typography variant=\"h5\" color=\"primary\" className={classes.score}>\n            Score: {this.state.score}\n          </Typography>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handlePause(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.pause ? <PlayCircleOutline /> : <PauseCircleOutline />}\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleRestart(e)} color=\"primary\" aria-label=\"menu\">\n            <Refresh />\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleMute(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.mute ? <VolumeOff /> : <VolumeUp />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Backdrop className={classes.backdrop} open={!this.state.imagesLoaded } >\n          <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <canvas id='Canvas' ref={this.canvasRef} />\n    </React.Fragment>\n  );\n  }\n});\n\nexport  default GameComponent;","import { Point } from \"../types/Point\";\nimport { Sprite } from \"./Sprite\";\nimport { Size } from \"../types/Size\";\nimport { Behavior } from \"./behaviors/Behavior\";\n\nexport class DefaultSprite implements Sprite{\n    name:string;\n    position:Point;\n    size:Size;\n    isAlive:boolean = true;\n\t\n    speed:number = 0.0;\n    angle:number = 0.0;\n    acceleration:number = 0.0;\n\tcanCollide:boolean = false;\n    isFixedPosition:boolean = false;\n    zOrder:number = 0;\n\t\n\tprivate behaviors:Behavior[] = [];\n\t\n\tconstructor(name:string,position:Point={x:0.0,y:0.0}, size:Size={width:0.0, height:0.0}){\n        this.name = name;\n        this.position = position;\n        this.size = size;\n\t}\n\t\n\taddBehavior(behavior:Behavior){\n        if(behavior.init) behavior.init(this);\n        this.behaviors.push(behavior);\n    }\n\n    removeBehavior(behavior:Behavior){\n        const i = this.behaviors.indexOf(behavior)\n        if(i === -1)\n            throw Error('Behavior not found!');\n        this.behaviors.splice(i,1);\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n        this.behaviors.forEach( (b) =>  b.beforePaint?.(this, location, ctx, timeSinceLastAnimation));\n        this.paintStep(location, ctx, timeSinceLastAnimation);\n        this.behaviors.forEach( (b) =>  b.afterPaint?.(this, location, ctx, timeSinceLastAnimation));\n    }\n    paintStep(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n        this.behaviors.forEach( (b) =>  b.paint?.(this, location, ctx, timeSinceLastAnimation));\n    }\n    updateModel(timeSinceLastUpdate: number) {\n        this.behaviors.slice().forEach( (b) =>  b.updateModel?.(this, timeSinceLastUpdate));\n    }\n    \n    handleKill():void{\n        this.behaviors.forEach( (b) =>  b.handleKill?.(this));\n    }   \n}","export interface Point{\n    x:number;\n    y:number;\n}\n\nexport function pointAsInt(point:Point): Point{\n    return {x:Math.round(point.x), y:Math.round(point.y)};\n}\n\nexport function calcDistance(a:Point, b:Point):number{\n        const xDist = Math.abs(a.x - b.x);\n        const yDist = Math.abs(a.y - b.y);\n        return Math.hypot(xDist, yDist);\n}\n\nexport function pointEquals(a:Point, b:Point):boolean{\n    return a.x === b.x && a.y === b.y;\n}","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Rectangle{\n    position:Point;\n    size:Size;\n\n}\n\nexport function union(rect1:Rectangle, rect2:Rectangle):Rectangle{\n    let tx2 = rect1.size.width;\n    let ty2 = rect1.size.height;\n    if ((tx2 | ty2) < 0) {\n        // This rectangle has negative dimensions...\n        // If r has non-negative dimensions then it is the answer.\n        // If r is non-existant (has a negative dimension), then both\n        // are non-existant and we can return any non-existant rectangle\n        // as an answer.  Thus, returning r meets that criterion.\n        // Either way, r is our answer.\n        return rect2;\n    }\n    let rx2 = rect2.size.width;\n    let ry2 = rect2.size.height;\n    if ((rx2 | ry2) < 0) {\n        return rect1;\n    }\n    let tx1 = rect1.position.x;\n    let ty1 = rect1.position.y;\n    tx2 += tx1;\n    ty2 += ty1;\n    const rx1 = rect2.position.x;\n    const ry1 = rect2.position.y;\n    rx2 += rx1;\n    ry2 += ry1;\n    if (tx1 > rx1) tx1 = rx1;\n    if (ty1 > ry1) ty1 = ry1;\n    if (tx2 < rx2) tx2 = rx2;\n    if (ty2 < ry2) ty2 = ry2;\n    tx2 -= tx1;\n    ty2 -= ty1;\n    return { position:{x:tx1, y:ty1},size:{width:tx2, height:ty2}};\n\n}\n\nexport function intersects(rect1:Rectangle, rect2:Rectangle):boolean{\n\n    let tw = rect1.size.width;\n    let th = rect1.size.height;\n    let rw = rect2.size.width;\n    let rh = rect2.size.height;\n    if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\n        return false;\n    }\n    const tx = rect1.position.x;\n    const ty = rect1.position.y;\n    const rx = rect2.position.x;\n    const ry = rect2.position.y;\n    rw += rx;\n    rh += ry;\n    tw += tx;\n    th += ty;\n    //      overflow || intersect\n    return ((rw < rx || rw > tx) &&\n            (rh < ry || rh > ty) &&\n            (tw < tx || tw > rx) &&\n            (th < ty || th > ry));\n}\n\nexport function pointInRect(point:Point, rect:Rectangle):boolean{\n    return point.x >= rect.position.x && point.x < rect.position.x + rect.size.width\n        && point.y >= rect.position.y && point.y < rect.position.y + rect.size.height;\n}\n\n\nexport function centerPosition(rect:Rectangle): Point{\n    return {x: rect.position.x + rect.size.width/2, y: rect.position.y + rect.size.height/2};\n}\n\nexport function centerPositionAsInt(rect:Rectangle): Point{\n    return {x: Math.round(rect.position.x + rect.size.width/2), y: Math.round(rect.position.y + rect.size.height/2)};\n}","import { Point } from \"./Point\";\n\nexport interface Vector{\n    speed:number;\n    angle:number;\n}\n\nexport function vectorToXYSpeed(vector:Vector): Point{\n    if(vector.speed !== undefined && vector.angle !== undefined)\n        return {x: vector.speed * Math.cos(vector.angle), y: vector.speed * Math.sin(vector.angle)};\n    else return {x:0,y:0};\n}\n\nexport function xySpeedToVector(xy:Point):Vector{\n    return {angle:Math.atan2(xy.y, xy.x), speed:Math.hypot(xy.x, xy.y)};\n}\n\nexport function addVectors(vector1:Vector, vector2:Vector): Vector{\n    const speed1 = vectorToXYSpeed(vector1);\n    const speed2 = vectorToXYSpeed(vector2);\n    return xySpeedToVector({x: speed1.x + speed2.x, y: speed1.y + speed2.y});\n}","import { GameController } from \"./GameController\";\nimport { DefaultSprite } from \"./sprites/DefaultSprite\";\nimport { Point, pointAsInt } from \"./types/Point\";\nimport { Sprite } from \"./sprites/Sprite\";\nimport { Size } from \"./types/Size\";\nimport { union, Rectangle, intersects, pointInRect } from \"./types/Rectangle\";\nimport { GameInitializer } from \"./GameInitializer\";\nimport { vectorToXYSpeed } from \"./types/Vector\";\nimport { TileMap } from \"./tiles/TileMap\";\n\nfunction insert<T>(array:T[], value:T, comparator: (a:T, b:T)=>number){\n\tlet low =0;\n\tif(array.length>0){\n\t\tlet high=array.length;\n\t\twhile(low < high){\n\t\t\tlet mid = Math.floor( (low+high)/2);\n\t\t\tconst c = comparator(array[mid], value);\n\t\t\tif(c <0){\n\t\t\t\tlow = mid+1;\n\t\t\t}else if( c> 0){\n\t\t\t\thigh = mid;\n\t\t\t}else{\n\t\t\t\tlow = mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tarray.splice(low, 0, value);\n}\nfunction remove(array:any[], key:any){\n    const index = array.indexOf(key, 0);\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n}\n\nexport default class Scene<T extends GameInitializer<T>> extends DefaultSprite{\n\n\ttileMap?:TileMap;\n    viewPort:Point = {x:0, y:0};\n    controller:GameController<T>;\n    debug: boolean = false;\n\twrapAround:boolean = false;\n\tsceneSpeed:number = 1.0;\n\tmodelSize:Size;\n\tsprites:Sprite[] = [];\n\n\tprivate collisionListeners:Sprite[] = [];\n\t\n    constructor(name:string, controller:GameController<T>, modelSize:Size={width:0.0, height:0.0}){\n        super(name);\n        this.controller = controller;\n        this.modelSize = modelSize;\n    }\n    handleKeyPressed(key: string): void {\n    }\n\n    handleMouseClick(x:number, y:number){\n    }\n\thandleTouch(x:number, y:number){\n    }\n\n\tgetSpritesAtPoint(point:Point):Sprite[]{\n\t\treturn this.sprites.filter( (s) => pointInRect(point, s) );\n\t}\n\t\n\taddSprite(sprite:Sprite) {\n\t\tthis._handleWrap(sprite.position,sprite.size);\n\t\tthis._validateSprite(sprite);\n\t\tif(!sprite.zOrder)\n\t\t\tsprite.zOrder = 0;\n\t\tinsert(this.sprites, sprite, (a,b) => a.zOrder! - b.zOrder!);\n\t\tsprite.priorPosition = sprite.position;\n\t\tif (sprite.handleCollision)\n\t\t\tthis.collisionListeners.push(sprite);\n\t}\n\n\tremoveSprite(sprite:Sprite) {\n\t\tsprite.handleKill?.();\n        if(this.debug)\n            console.log(`Remove sprite(${sprite.name}) (${sprite.position.x}, ${sprite.position.y})`);\n        remove(this.sprites, sprite);\n        remove(this.collisionListeners, sprite);\n\t}\n\n\tpublic resetGame() {\n\t    this.sprites = [];\n\t\tthis.collisionListeners = [];\n\t}\n\t\n\tsetTiles(rows:number, columns:number, logicalGrid:string[][], setWorldSize:boolean, tileSize:Size|undefined = undefined){\n\t\tthis.tileMap = new TileMap(this.controller.tileAtlas,rows, columns, logicalGrid, tileSize);\n\t\tif(setWorldSize){\n\t\t\tthis.modelSize = this.tileMap.worldSize;\n\t\t}\n\t}\n\n    updateModel(timeSinceLastUpdate: number) {\n\t\tsuper.updateModel(timeSinceLastUpdate);\n        \n        // handle movements and check collision\n\t\tthis.handleMovement(timeSinceLastUpdate);\n\t}\n\n    handleMovement(timeSinceLastUpdate: number) {\n        const dx = timeSinceLastUpdate/1000.0;\n        const tempArray:Sprite[] = this.sprites.slice();\n\t\twhile (tempArray.length) {\n\t\t\tconst sprite:Sprite = tempArray.pop()!;\n\t\t\tif(!sprite.isAlive){\n\t\t\t\t// remove any dead sprites.\n\t\t\t\tthis.removeSprite(sprite);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet newRect;\n\t\t\tif (!sprite.isFixedPosition) {\n\t\t\t\tconst oldRect = {position:pointAsInt(sprite.position), size:sprite.size};\n\t\t\t\tconst pointSpeed = vectorToXYSpeed(sprite);\n\t\t\t\tlet newPosition = {x:sprite.position.x + pointSpeed.x * dx * this.sceneSpeed,\n\t\t\t\t\t\t\t\t   y:sprite.position.y + pointSpeed.y * dx * this.sceneSpeed};\n\t\t\t\tlet wrapped = this._handleWrap(newPosition, sprite.size);\n\t\t\t\tsprite.priorPosition = oldRect.position;\n\t\t\t\tsprite.position = newPosition;\n\t\t\t\t// check collisions\n\t\t\t\tnewRect = {position: pointAsInt(sprite.position), size: sprite.size};\n\t\t\t\tif (!wrapped)\n\t\t\t\t\tnewRect = union(oldRect, newRect);\n\t\t\t\t\n\t\t\t\tif (sprite.acceleration) {\n\t\t\t\t\tif (Math.sign(sprite.acceleration\n\t\t\t\t\t\t\t+ sprite.speed) !== Math.sign(sprite\n\t\t\t\t\t\t\t.speed))\n\t\t\t\t\t\tsprite.speed = 0;\n\t\t\t\t\telse\n\t\t\t\t\t\tsprite.speed = sprite.speed + sprite.acceleration;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(sprite.canCollide){\n\t\t\t\tif(!newRect)\n\t\t\t\t\tnewRect = sprite;\n\t\t\t\tthis._handleCollision(newRect, sprite);\n\t\t\t}\n\t\t\tif(sprite.updateModel)\n\t\t\t\tsprite.updateModel(timeSinceLastUpdate);\n\t\t\tconst error = this._validateSprite(sprite);\n\t\t\tif(error){\n\t\t\t\tconsole.log(`Sprite position not valid.  Killing spite (${sprite.name}). ${error}`);\n\t\t\t\tsprite.isAlive=false;\n\t\t\t}\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthis.removeSprite(sprite);\n\t\t}\n\t}\n\n\tprivate _handleCollision( newRect:Rectangle, sprite:Sprite) {\n\t\tlet collisionSprite;\n\t\tif(sprite.handleCollision){\n\t\t\tfor(let i =0; i< this.sprites.length;i++){\n\t\t\t\tconst otherSprite = this.sprites[i];\n\t\t\t\tif (sprite !== otherSprite && otherSprite.canCollide) {\n\t\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\t\tsprite.handleCollision(otherSprite);\n\t\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!collisionSprite)\n\t\t\tcollisionSprite = sprite;\n\t\t\n\t\tfor(let i =0; i< this.collisionListeners.length;i++){\n\t\t\tconst otherSprite = this.collisionListeners[i];\n\t\t\tif (sprite !== otherSprite) {\n\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\totherSprite.handleCollision!(sprite);\n\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!collisionSprite.isAlive) {\n\t\t\tthis.removeSprite(collisionSprite);\n\t\t}\n\t}\n\tcount =0;\n\ttotalTime =0;\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void {\n        //enable you to embed a scene as a sprite in another scene\n\t\tlocation = {x: location.x + this.viewPort.x, y:location.y+this.viewPort.y}; \n\t\tthis.paintBackground(ctx);\n\t\tif(this.tileMap){\n\t\t\tthis.tileMap.paint({position:location, size:this.size},  ctx, timeSinceLastAnimation);\n\t\t}\n\t\tlet displayedSprites =0\n\t\tfor(let sprite of this.sprites){\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthrow Error(\"No Dead Sprites Should Make it to render step.\\n\" + sprite);\n\t\t\tlet pos = pointAsInt(sprite.position);\n\t\t\t\tif(!sprite.isFixedPosition){\n\t\t\t\t\tpos = {x: pos.x - location.x, y: pos.y - location.y}\n\t\t\t\t}\n\t\t\tif(pos.x > this.size.width || pos.y > this.size.height \n\t\t\t\t|| (sprite.size.width + pos.x < 0)\n\t\t\t\t|| (sprite.size.height + pos.y < 0)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsprite.paint(pos, ctx, timeSinceLastAnimation);\n\t\t\tdisplayedSprites++;\n\t\t}\n\t\tif(this.debug){\n\t\t\tif(++this.count % 300 === 0){\n\t\t\t\tthis.totalTime  = timeSinceLastAnimation;\n\t\t\t\tthis.count =1;\n\t\t\t}else{\n\t\t\t\tthis.totalTime +=timeSinceLastAnimation;\n\t\t\t}\n\t\t\tctx.fillStyle = \"red\"\n\t\t\tctx.font =\"8px Electrolize\";\n\t\t\tctx.fillText(`FPS: ${Math.round(1000 / (this.totalTime/ ++this.count))} Alive: ${this.sprites.length} On Screen: ${displayedSprites} Collision Handlers: ${this.collisionListeners.length}` , 10, this.size.height -10);\n\t\t}\n\t}\n\n\tpaintBackground(ctx: CanvasRenderingContext2D):void {\n\t\t\tctx.fillStyle = 'black';\n\t\t\tctx.fillRect(0, 0, this.size.width, this.size.height);\n\t}\n\n\taddSprites(sprites:Sprite[] ) {\n\t\tif(!sprites || !sprites.length)\n\t\t\tthrow Error(`Attempting to add empty array of sprites in scene (${this.name})`);\n\t\tif(this.debug){\n\t\t\tconsole.log(`Bulk adding ${sprites.length} of type (${sprites[0].name})`)\n\t\t}\n\t\tsprites.forEach( (s) => this.addSprite(s) )\n\t}\n\n\t_validateSprite(sprite:Sprite):string|undefined{\n\t\tif(sprite.position.x < 0 || sprite.position.y < 0 )\n\t\t\treturn `Sprite position less 0 (${sprite.position.x}, ${sprite.position.y})`;\n\t\tif(this.modelSize.width !==0){\n\t\t\tif(sprite.position.x >= this.modelSize.width || sprite.position.y >= this.modelSize.height)\n\t\t\t\treturn `Sprite position(${sprite.position.x}, ${sprite.position.y}) > model(${this.modelSize.width},${this.modelSize.height})`;\n\t\t}else if(sprite.position.x >= this.size.width || sprite.position.y >= this.size.height) {\n\t\t\treturn `Sprite position(${sprite.position.x}, ${sprite.position.y})  > screen(${this.size.width},${this.size.height})`;\n\t\t}\n\t\tif(sprite.size.width <=0 || sprite.size.height <= 0)\n\t\t\treturn `Sprite size too small (${sprite.size.width}, ${sprite.size.height})`;\n\t\tif( (sprite.speed !== undefined &&  sprite.angle === undefined) \n\t\t\t|| (sprite.speed === undefined &&  sprite.angle !== undefined))\n\t\t\treturn `Either speed(${sprite.speed}) and angle(${sprite.angle}) are both defined or both undefined.`;\n\t\treturn undefined;\n\t}\n\t_handleWrap(position:Point, size:Size):boolean{\n\t\t// handle wrap around\n\t\tlet wrapped = false;\n\t\tif (this.wrapAround) {\n\t\t\tlet width = this.size.width;\n\t\t\tlet height = this.size.height;\n\t\t\tif(this.modelSize.width !==0){\n\t\t\t\twidth= this.modelSize.width;\n\t\t\t\theight = this.modelSize.height;\n\t\t\t}\n\t\t\tif (position.x < 0) {\n\t\t\t\tposition.x = width - size.width;\n\t\t\t\twrapped = true;\n\t\t\t} else if (position.x + size.width > width) {\n\t\t\t\tposition.x = 0;\n\t\t\t\twrapped = true;\n\t\t\t}\n\t\t\tif (position.y < 0) {\n\t\t\t\tposition.y = height - size.height;\n\t\t\t\twrapped = true;\n\t\t\t} else if (position.y + size.height > height) {\n\t\t\t\tposition.y = 0;\n\t\t\t\twrapped = true;\n\t\t\t}\n\t\t}\t\n\t\treturn wrapped;\n\t}\n\n}","import { Behavior } from \"./Behavior\";\nimport { Point } from \"../../types/Point\";\nimport { SpriteSheet } from \"../../util/SpriteSheet\";\nimport { DefaultSprite } from \"../DefaultSprite\";\n\nexport class SpriteSheetBehavior implements Behavior{\n    spriteSheet:SpriteSheet;\n    framesPerSecond:number = 25;\n\tage:number = 0;\n    animateOnce:boolean;\n\trotate:boolean = false;\n\tconstructor(spriteSheet:SpriteSheet,  animateOnce:boolean = false) {\n\t\tthis.spriteSheet = spriteSheet;\n\t\tthis.animateOnce = animateOnce;\n\t}\n\n\tinit(sprite:DefaultSprite){\n\t\tsprite.size = this.spriteSheet.size;\n\t}\n\n    paint(sprite:DefaultSprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n\t\tlet frame;\n\t\tif(this.spriteSheet.type==='rotate'){\n\t\t\tframe = Math.floor( ((Math.abs(this.getAngle(sprite)) % (Math.PI*2))/(Math.PI*2)) * this.spriteSheet.frameCount*2);\n\t\t\tif(frame>=this.spriteSheet.frameCount){\n\t\t\t\tframe = (this.spriteSheet.frameCount*2) - (frame) -1;\n\t\t\t}\n        }else if(this.framesPerSecond && this.spriteSheet.frameCount !== 0){\n\t\t\tconst timePerFrame = 1.0 / this.framesPerSecond;\n\t\t\tframe = Math.floor( (this.age/timePerFrame ) % this.spriteSheet.frameCount);\n\t\t}else{\n\t\t\tframe =0;\n\t\t}\n\t\tframe = Math.min(frame, this.spriteSheet.frameCount-1);\n\t\tconst angle = this.getAngle(sprite);\n\t\tthis.spriteSheet.paint(ctx, frame, angle, {position:{x:0,y:0}, size:sprite.size}, {position:location, size:sprite.size});\n\n\t}\n\tupdateModel(sprite:DefaultSprite, timeSinceLastUpdate:number):void{\n\t\tconst dx = timeSinceLastUpdate/1000;\n\t\tthis.age += dx;\n\t\tif(this.animateOnce){\n\t\t\tif (this.age > this.spriteSheet.frameCount / this.framesPerSecond) {\n\t\t\t\tsprite.isAlive = false;\n\t\t\t}\n\t\t}\n\t}\n\tgetAngle(sprite:DefaultSprite){\n\t\treturn (sprite.angle) ? sprite.angle : 0;\n\t}\n}\n","import { Point } from \"../types/Point\";\nimport { SpriteSheetBehavior } from \"./behaviors/SpriteSheetBehavior\";\nimport { DefaultSprite } from \"./DefaultSprite\";\nimport Scene from \"../Scene\";\nimport { GameInitializer } from \"../GameInitializer\";\n\n\nexport class AnimatedSprite<T extends GameInitializer<T>, S extends Scene<T>> extends DefaultSprite{\n    scene:S;\n    spriteSheetBehavior:SpriteSheetBehavior;\n\n    constructor(scene:S, name:string,position:Point ={x:0,y:0},animateOnce:boolean =false){\n        super(name, position);\n        this.scene = scene;\n        const spriteSheet = scene.controller.imagePreloader.getSpriteSheetFromCache(name)\n        this.spriteSheetBehavior =   new SpriteSheetBehavior(spriteSheet, animateOnce);\n        this.addBehavior(this.spriteSheetBehavior);\n    }\n    set animateOnce(animateOnce:boolean){\n        this.spriteSheetBehavior.animateOnce = animateOnce;\n    }\n    get animateOnce(){\n        return this.spriteSheetBehavior.animateOnce;\n    }\n}","\nimport { DefaultSprite } from \"./DefaultSprite\";\nimport { Point } from \"../types/Point\";\n\nexport class CountdownSprite extends DefaultSprite{\n    timeInMillis:number;\n    fontStyle:string;\n    age = 0;\n    color:string;\n    fontHeight:number;\n\n    constructor(timeInMillis:number, color:string=\"red\", fontStyle = \"100px Electrolize\", fontHeight = 80){\n        super(\"CountdownTimer\");\n        this.timeInMillis = timeInMillis;\n        this.fontStyle = fontStyle;\n        this.size = {width: fontHeight*Math.floor(timeInMillis/2500).toString().length, height:fontHeight};\n        this.color = color;\n        this.fontHeight = fontHeight;\n\t}\n\n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n        // ctx.fillStyle = \"blue\";\n        // ctx.fillRect(location.x, location.y, this.size.width, this.size.height);\n\n        const displayTime = Math.floor((this.timeInMillis - this.age)/1000).toString();\n        ctx.fillStyle = this.color;\n        ctx.font = this.fontStyle;\n        \n        ctx.fillText(displayTime, location.x, location.y+this.size.height);\n        \n        \n        \n    }\n\n    updateModel(timeSinceLastUpdate: number):void{\n        this.age += timeSinceLastUpdate;\n        if(this.age >this.timeInMillis )\n            this.isAlive = false;\n    }\n}\n\n","import { Sprite } from \"./Sprite\";\nimport { Point } from \"../types/Point\";\nimport { Size } from \"../types/Size\";\n\nexport class TitleSprite implements Sprite{\n    name: string = 'Title';\n    position: Point = {x:0,y:0};\n    size: Size = {width:1, height:1};\n    speed =0;\n    angle =0;\n    isAlive: boolean = true;\n    zOrder: number = 100;\n    canCollide: boolean = false;\n    isFixedPosition = true;\n    title:string;\n    subtitle1:string;\n    subtitle2:string;\n\n    constructor(title:string, subtitle1:string, subtitle2:string){\n        this.title = title;\n        this.subtitle1 = subtitle1;\n        this.subtitle2 = subtitle2;\n    }\n\n    paint(location: Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void {\n        //ctx.measureText\n        const w = ctx.canvas.width,  h = ctx.canvas.height;\n        const oldFont = ctx.font;\n        function shadowText(txt:string, x:number,y:number, i:number){\n            ctx.fillStyle = \"grey\";\n            ctx.fillText(txt, x+i, y+i);\n            ctx.fillStyle = \"white\";\n            ctx.fillText(txt, x,y);\n        }\n\n        ctx.font = (w>400) ? (w>500) ? (w>800) ? (w>1000) ? \"110px Electrolize\": \"80px Electrolize\": \"60px Electrolize\" : \"40px Electrolize\": \"30px Electrolize\";\n        let measure = ctx.measureText(this.title);\n        let hpos = h/3;\n        shadowText(this.title, (w-measure.width)/2, hpos, 3);\n        const subHeight = (w>500) ? (w>800) ? 30: 24 : 18;\n        ctx.font = `${subHeight}px Electrolize`;\n        measure = ctx.measureText(this.subtitle1);\n        hpos += subHeight*2;\n        shadowText(this.subtitle1, (w-measure.width)/2,hpos, 1);\n\n        measure = ctx.measureText(this.subtitle2);\n        hpos += subHeight*2;\n        shadowText(this.subtitle2, (w-measure.width)/2,hpos,1);\n\n        ctx.font = oldFont;\n    }\n\n}","import { GameController } from \"../gamelib/GameController\";\nimport { Point } from \"../gamelib/types/Point\";\nimport Scene from \"../gamelib/Scene\";\nimport { Sprite } from \"../gamelib/sprites/Sprite\";\nimport { Size } from \"../gamelib/types/Size\";\nimport { GameInitializer } from \"../gamelib/GameInitializer\";\nimport { AnimatedSprite } from \"../gamelib/sprites/AnimatedSprite\";\nimport { vectorToXYSpeed } from \"../gamelib/types/Vector\";\nimport { CountdownSprite } from \"../gamelib/sprites/CountdownSprite\";\nimport { TitleSprite } from \"../gamelib/sprites/TitleSprite\";\n\nfunction createWall(position: Point, size: Size, isVertical: boolean): Sprite {\n    const wall = {\n        name: 'wall',\n        position,\n        size,\n        isAlive: true,\n        canCollide: false,\n        speed: 0,\n        angle: 0,\n        paint: function (location: Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void {\n            ctx.fillStyle = \"\trgb(50,50,50)\";\n            ctx.fillRect(position.x, position.y, size.width, size.height);\n        },\n        handleCollision(otherSprite: Sprite): void {\n            const speed = vectorToXYSpeed(otherSprite);\n            if (isVertical) {\n                if (speed.x > 0)\n                    otherSprite.position.x = this.position.x - otherSprite.size.width;\n                else\n                    otherSprite.position.x = this.position.x + this.size.width;\n                otherSprite.position.y = otherSprite.priorPosition!.y;\n                otherSprite.angle = Math.PI - otherSprite.angle + (Math.random() - .5) * .2;\n            } else {\n                if (speed.y > 0)\n                    otherSprite.position.y = this.position.y - otherSprite.size.height;\n                else\n                    otherSprite.position.y = this.position.y + this.size.height;\n                otherSprite.position.x = otherSprite.priorPosition!.x;\n                otherSprite.angle = -1.0 * otherSprite.angle + (Math.random() - .5) * .2;\n            }\n        }\n    };\n    return wall;\n}\n\nexport class BouncingBall implements GameInitializer<BouncingBall>{\n\n    preloadImages = [{ name: 'ball', src: '/circles/assets/images/ball.png', rows: 4, columns: 8 , type: 'animate'}];\n    preloadSounds = [{ name: 'boop', src: '/circles/assets/sounds/boop.wav' }\n        , { name: 'error', src: '/circles/assets/sounds/error.wav' }];\n\n    init(controller: GameController<BouncingBall>): void {\n        this.launchInstructions(controller);\n    }\n    launchGame(controller: GameController<BouncingBall>) {\n        const scene = new Scene('bouncing ball', controller);\n        controller.scene = scene;\n        let score = 0;\n        controller.publishEvent({ type: 'score', value: (score) });\n        scene.handleMouseClick = function (x: number, y: number) {\n            const sprites = scene.getSpritesAtPoint({ x, y });\n            if (sprites.length) {\n                sprites.filter((s) => s.canCollide).forEach((s) => {\n                    if (s.name === 'CountdownTimer')\n                        return;\n                    scene.removeSprite(s);\n                    controller.publishEvent({ type: 'score', value: (++score) });\n                    controller.soundEffects.play('boop');\n                });\n            } else {\n                controller.publishEvent({ type: 'score', value: (--score) });\n                controller.soundEffects.play('error');\n            }\n        }\n        scene.wrapAround = false;\n\n        const sz = scene.size;\n        const wallSize = 4;\n        //create walls\n        scene.addSprite(createWall({ x: 0, y: 0 }, { width: sz.width - wallSize, height: wallSize }, false));\n        scene.addSprite(createWall({ x: 0, y: sz.height - wallSize }, { width: sz.width, height: wallSize }, false));\n        scene.addSprite(createWall({ x: 0, y: 0 }, { width: wallSize, height: sz.height - wallSize }, true));\n        scene.addSprite(createWall({ x: sz.width - wallSize, y: 0 }, { width: wallSize, height: sz.height - wallSize }, true));\n\n        const rand = (min: number, max: number) => Math.random() * (max - min) + min;\n        const randPosition = (r: number) => ({ x: rand(sz.width - (r + wallSize) * 2, r + wallSize), y: rand(sz.height - (r + wallSize) * 2, r + wallSize) });\n        for (let x = 0; x < 30; x++) {\n            const ball = new AnimatedSprite(scene, 'ball');\n            const radius = ball.size.width / 2;\n            ball.position = randPosition(radius);\n            ball.isAlive = true;\n            ball.speed = Math.random() * 250 + 100;\n            ball.angle = Math.random() * Math.PI * 2;\n            ball.zOrder = Math.random() * 10 - 5;\n            ball.canCollide = true;\n            ball.size = { width: ball.size.width - 2, height: ball.size.height - 2 };\n            scene.addSprite(ball);\n        }\n        const countdown = new CountdownSprite(15000);\n        countdown.position = randPosition(countdown.size.width);\n        countdown.speed = 500;\n        countdown.angle = Math.random() * Math.PI * 2;\n        countdown.zOrder = 1;\n        countdown.canCollide = true;\n        countdown.handleKill = () => this.launchGameOverScene(controller, score);\n        scene.addSprite(countdown);\n    }\n    launchGameOverScene(controller: GameController<BouncingBall>, score: number) {\n        const scene = new Scene('GameOver', controller);\n        controller.scene = scene;\n        let age = 0;\n        scene.addBehavior({ updateModel: (s, time) => age += time });\n        scene.handleKeyPressed = () => { if (age > 1000) this.launchGame(controller) };\n        scene.handleMouseClick = () => { if (age > 1000) this.launchGame(controller) };\n        const win = (score > 10);\n        scene.addSprite(new TitleSprite(win ? 'YOU WIN!!!' : \"YOU LOSE\", `${win ? 'Awesome,' : 'Times Up!'} Score ${score}`\n            , 'HIT ANY KEY TO PLAY AGAIN'));\n        return scene;\n    }\n    launchInstructions(controller: GameController<BouncingBall>) {\n        const scene = new Scene('Intro', controller);\n        controller.scene = scene;\n\n        scene.handleKeyPressed = () => this.launchGame(controller);\n        scene.handleMouseClick = () => this.launchGame(controller);\n        scene.addSprite(new TitleSprite(\"CLICK THE BALLS\", `You have 15 seconds. Don't miss.`\n            , 'HIT ANY KEY TO PLAY'));\n        return scene;\n    }\n}\n\n","import { SpaceGame } from \"../SpaceGame\";\nimport { Sprite } from \"../../../gamelib/sprites/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport Scene from \"../../../gamelib/Scene\";\n\nexport function generateOpenningSequenceAsteroids(scene:Scene<SpaceGame>, n:number):Sprite[]{\n    const sz = scene.controller.scene.size;\n    const rand =  (minn:number, max:number) => Math.random() * (max-minn) + minn;\n    const min =100;\n    const sprites:Sprite[] = [];\n    for(let x=0; x<n;x++){\n        const a = new AnimatedSprite(scene, 'asteroid', {x: rand(sz.width-min, min),y:rand(sz.height-min, min)});\n        a.speed = Math.random() * 200+50;\n        a.angle = Math.random() * Math.PI *2;\n        a.zOrder = -1;\n        a.canCollide = true;\n        a.size = {width: a.size.width, height: a.size.height};\n        sprites.push(a);\t\n    }\n    return sprites;\n}\nexport function generateGameAsteroids(scene:MainGameScene, n:number ):Sprite[]{\n    const roids = generateOpenningSequenceAsteroids(scene, n);\n    roids.forEach( (a) => {\n        a.position.x = Math.random() * scene.modelSize.width;\n        a.position.y = 0;\n        a.speed = Math.random() * 100 +50;\n    });\n    return roids;\n}","import { DefaultSprite } from \"../../../gamelib/sprites/DefaultSprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { Point } from \"../../../gamelib/types/Point\";\n\n\nexport class Radar extends DefaultSprite {\n\n\tscene: MainGameScene;\n\n\tconstructor(scene: MainGameScene) {\n\t\tsuper('Radar');\n\t\tconst margin = 3;\n\t\tconst x = Math.floor(scene.size.width * 14.0 / 16.0) - margin;\n\t\tconst width = scene.size.width - 3 - x;\n\t\tconst y = Math.floor(width / scene.modelSize.width * scene.modelSize.height);\n\t\tthis.position = { x: x - 3, y: margin + 50 };\n\t\tthis.size = { width, height: y };\n\t\tthis.isFixedPosition = true;\n\t\tthis.zOrder = 100;\n\t\tthis.scene = scene;\n\t\tthis.canCollide = false;\n\t}\n\n\tpaint(location: Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n\t\tctx.strokeStyle = 'white';\n\t\tctx.strokeRect(location.x - 1, location.y - 1, this.size.width + 2, this.size.height + 2);\n\t\tctx.fillStyle = 'white';\n\n\t\tconst scale = this.size.width / this.scene.modelSize.width;\n\t\tfor (let sprite of this.scene.sprites) {\n\t\t\tif (sprite === this) continue;\n\t\t\tconst x1 = Math.floor(location.x + (sprite.position.x * scale));\n\t\t\tconst y1 = Math.floor(location.y + (sprite.position.y * scale));\n\t\t\tlet size = 2;\n\t\t\tif (sprite.name === 'enemy')\n\t\t\t\tctx.fillStyle = 'red';\n\t\t\telse if (sprite.name === 'player') {\n\t\t\t\tctx.fillStyle = 'green';\n\t\t\t\tsize = 3;\n\t\t\t}\n\t\t\tctx.fillRect(x1, y1, size, size);\n\n\n\t\t\tctx.fillStyle = 'white';\n\t\t}\n\t\tctx.strokeStyle = 'red';\n\t\tconst topX = Math.floor(this.scene.viewPort.x * scale + location.x);\n\t\tconst topY = Math.floor(this.scene.viewPort.y * scale + location.y)\n\t\tconst width = Math.floor(this.scene.size.width * scale);\n\t\tconst height = Math.floor(this.scene.size.height * scale);\n\t\tctx.strokeRect(topX, topY, width, height);\n\t}\n}","import { Behavior } from \"./Behavior\";\nimport { Sprite } from \"../Sprite\";\n\nexport class SpriteExpirationBehavior implements Behavior{\n\tage = 0;\n\texpirationTime:number;\n\tpublic constructor(expirationTime:number){\n\t\tthis.expirationTime =  expirationTime;\n\t}\n    \n    updateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n        this.age+=timeSinceLastUpdate;\n\t\tif(this.age > this.expirationTime)\n\t\t\tsprite.isAlive = false;\n\t}\n}\n","import { Point } from \"../../../gamelib/types/Point\";\nimport { Sprite } from \"../../../gamelib/sprites/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\n\nexport function newSmallExplosion(scene:MainGameScene, position:Point):Sprite{\n    return newExplosion(scene, position, 'explosionSmall');\n}\n\nexport function newBigExplosion(scene:MainGameScene, position:Point):Sprite{\n    return newExplosion(scene, position, 'explosionBig');\n}\n\nfunction newExplosion(scene:MainGameScene, position:Point, name:string):Sprite {\n    const explosion = new AnimatedSprite(scene,name, position, true);\n    explosion.position = {x: position.x - explosion.size.width / 2\n        ,y: position.y - explosion.size.height / 2};\n    scene.controller.soundEffects.play(name);\n    return explosion;\n}","import { MainGameScene } from \"../MainGameScene\";\nimport { Point } from \"../../../gamelib/types/Point\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport { SpaceGame } from \"../SpaceGame\";\nimport { Missle } from \"./Missle\";\nimport { addVectors } from \"../../../gamelib/types/Vector\";\n\nconst MAX_SPEED = 375;\n\nexport class Ship extends AnimatedSprite<SpaceGame, MainGameScene> {\n\tshipAngle: number;\n\tlastMissleFired?: Missle;\n\n\tconstructor(scene: MainGameScene, position: Point, name: string) {\n\t\tsuper(scene, name, position);\n\t\tthis.shipAngle = 0;\n\t\tthis.speed = 0;\n\t\tthis.angle = 0;\n\t\tthis.acceleration = -.1;\n\t\tthis.canCollide = true;\n\t\tthis.spriteSheetBehavior.getAngle = () => this.shipAngle;\n\t}\n\n\tleft() {\n\t\tthis.shipAngle += -.15;\n\t}\n\n\tright() {\n\t\tthis.shipAngle += +.15;\n\t}\n\n\tmove(amount: number = 15.0) {\n\t\tconst newVector = addVectors(this, { speed: amount, angle: this.shipAngle });\n\t\tthis.angle = newVector.angle;\n\t\tthis.speed = Math.min(newVector.speed, MAX_SPEED);\n\t}\n}\n","import { Behavior } from \"./Behavior\";\nimport { DefaultSprite } from \"../DefaultSprite\";\n\nexport class TimedBehavior implements Behavior{\n\tage = 0;\n\texpirationTime:number;\n\tpublic constructor(expirationTime:number){\n\t\tthis.expirationTime =  expirationTime;\n\t}\n    \n\tupdateModel(sprite:DefaultSprite, timeSinceLastUpdate:number):void{\n        this.age+=timeSinceLastUpdate;\n\t\tif(this.age > this.expirationTime){\n\t\t\tsprite.removeBehavior(this);\n\t\t\tthis.handleTimeUp?.(sprite);\t\t\n\t\t}\n\t}\n\n\thandleTimeUp?(sprite:DefaultSprite):void;\n}\n","import { Point } from \"../../types/Point\";\nimport { centerPosition} from \"../../types/Rectangle\";\nimport { SpriteSheet } from \"../../util/SpriteSheet\";\nimport { DefaultSprite } from \"../DefaultSprite\";\nimport { TimedBehavior } from \"./TimedBehavior\";\n\n\nconst SUPPORTED_BLEND_METHODS = ['lighten','source-over'];\n\n/**\n * blends one image (secondary) into another image (primary)\n */\nexport class BlendImageBehavior extends TimedBehavior{\n    spriteSheet:SpriteSheet;\n    compositeOperation:string;\n    blendAmount:number;\n\n    /**\n     * \n     * @param spriteSheet \n     * @param expirationTime -1 if never expires.\n     * @param blendMethod \n     * @param blendAmount \n     */\n    constructor(spriteSheet:SpriteSheet, expirationTime:number = -1,  blendAmount =1.0, compositeOperation:string = 'lighten',){\n        super(expirationTime);\n        if(!SUPPORTED_BLEND_METHODS.includes(compositeOperation))\n            throw Error(`Unsupported composite operation: ${compositeOperation}`);\n        this.spriteSheet = spriteSheet;\n        this.compositeOperation = compositeOperation;\n        this.blendAmount = blendAmount;\n    }\n\n    updateModel(sprite:DefaultSprite, timeSinceLastUpdate:number):void{\n        if(this.expirationTime !== -1)\n            super.updateModel(sprite, timeSinceLastUpdate);\n\t}\n    \n    afterPaint(sprite:DefaultSprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n        if(this.blendAmount < 0 || this.blendAmount > 1.0)\n            throw Error(`Blend amount must be between 0 and 1.0, not ${this.blendAmount}`);\n        if(!sprite){\n            throw Error('Sprite must be defined.');\n        }\n        //place secondary image in the center of primary.\n        const center = centerPosition({position:location, size:sprite.size});\n        const w2 = this.spriteSheet.size.width, h2 = this.spriteSheet.size.height;\n        const location2 = {x: Math.floor(center.x - w2/2), y: Math.floor(center.y - h2/2)  }\n        ctx.save();\n        ctx.globalAlpha = this.blendAmount;\n        ctx.globalCompositeOperation = this.compositeOperation;\n        const size = this.spriteSheet.size;\n        this.spriteSheet.paint(ctx, 0, 0, {position:{x:0,y:0}, size}, {position:location2, size});\n        ctx.restore();\n    }\n}","import { Ship } from \"./Ship\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { Point, pointAsInt } from \"../../../gamelib/types/Point\";\nimport { BlendImageBehavior } from \"../../../gamelib/sprites/behaviors/BlendImageBehavior\";\nimport { Sprite } from \"../../../gamelib/sprites/Sprite\";\nimport { newSmallExplosion } from \"./Explosion\";\nimport { centerPosition } from \"../../../gamelib/types/Rectangle\";\n\nexport class Player extends Ship {\n\tshield = 100;\n\n\tconstructor(scene: MainGameScene, position: Point) {\n\t\tsuper(scene, position, \"player\");\n\t\tthis.acceleration = -4;\n\t}\n\n\t//handle viewport movement\n\tupdateModel(timeSinceLastUpdate: number): void {\n\t\tsuper.updateModel(timeSinceLastUpdate);\n\t\tlet viewport = this.scene.viewPort;\n\t\tconst size = this.scene.size;\n\t\tconst margin = { x: size.width / 3, y: size.height / 3 };\n\t\tconst position = pointAsInt(this.position);\n\t\tif (position.x < viewport.x + margin.x)\n\t\t\tviewport.x = position.x - margin.x;\n\t\telse if (position.x > viewport.x + size.width - margin.x)\n\t\t\tviewport.x = position.x - size.width + margin.x;\n\t\tif (position.y < viewport.y + margin.y)\n\t\t\tviewport.y = position.y - margin.y;\n\t\telse if (position.y > viewport.y + size.height - margin.y)\n\t\t\tviewport.y = position.y - size.height + margin.y;\n\t\tthis.scene.viewPort = {\n\t\t\tx: Math.min(Math.max(viewport.x, 0), this.scene.modelSize.width - size.width)\n\t\t\t, y: Math.min(Math.max(viewport.y, 0), this.scene.modelSize.height - size.height)\n\t\t};\n\t}\n\tanimateShield() {\n\t\tconst shieldSpriteSheet = this.scene.controller.imagePreloader.getSpriteSheetFromCache(\"shield\");\n\t\tconst blendAmount = Math.min(Math.max(.15, this.shield / 100 + .15), 1.0);\n\t\tconst shieldAge = 500;\n\t\tthis.addBehavior(new BlendImageBehavior(shieldSpriteSheet, shieldAge, blendAmount));\n\t}\n\thandleCollision(otherSprite:Sprite){\n\t\tif (otherSprite.name === 'asteroid' && !this.scene.pause) {\n\t\t\tthis.scene.hit(10);\n\t\t\tthis.scene.addSprite(newSmallExplosion(this.scene, centerPosition(otherSprite)));\n\t\t\totherSprite.isAlive = false;\n\t\t}\n\t}\n}\n","import { MainGameScene } from \"../MainGameScene\";\nimport { Ship } from \"./Ship\";\n\nexport class Enemy extends Ship {\n\n    constructor(scene:MainGameScene) {\n        super(scene, {x:Math.floor(Math.random() * scene.modelSize.width), y:50}, \"enemy\");\n        this.speed = 100;\n        this.angle = Math.random();\n        this.shipAngle = 0;\n    }\n\n    private count:number =0;\n\n    updateModel(timeSinceLastUpdate: number):void{\n        super.updateModel(timeSinceLastUpdate);\n        const xDist = this.position.x - this.scene.player.position.x;\n        const yDist = this.position.y - this.scene.player.position.y;\n        const distance = Math.hypot(xDist, yDist);\n        if (distance > 1500)\n            return;\n        const requiredHeading = Math.atan2(yDist, xDist);\n        const crossproduct = Math.sin(requiredHeading - this.shipAngle);\n\n        if (crossproduct > .1) \n            this.shipAngle -= .1;\n        else if (crossproduct < -.1)\n            this.shipAngle += .1 ;\n        else if (this.count++ % Math.max(100 - this.scene.level * 20, 30) === 0 && distance < 600   )\n            this.scene.fire(this);\n        if (distance > 300) {\n            this.move();\n        }\n    }\n\n    move(amount:number = 12.0) {\n        super.move(amount);\n    \tthis.speed = Math.min(this.speed, 300);\n\t}\n}","import { Behavior } from \"./Behavior\";\nimport { DefaultSprite } from \"../DefaultSprite\";\nimport { Point, pointEquals } from \"../../types/Point\";\n\n\nexport class TrailingEffectBehavior implements Behavior{\n    alpha:number;\n    lastLocation:Point[] = [];\n    delay:number;\n\n    constructor(alpha:number, delay:number = 3){\n        this.alpha = alpha;\n        this.delay = delay;\n    }\n\n\tbeforePaint(sprite:DefaultSprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n        if(this.lastLocation.length >= this.delay && timeSinceLastAnimation > 0 && !pointEquals(this.lastLocation[0], location)){\n            const oldAlpha = ctx.globalAlpha;\n            ctx.globalAlpha = this.alpha;\n            sprite.paintStep(this.lastLocation[0], ctx, timeSinceLastAnimation);\n            ctx.globalAlpha = oldAlpha;\n        }\n        this.lastLocation.push(location);\n        if(this.lastLocation.length > this.delay){\n            this.lastLocation = this.lastLocation.slice(2);\n        }\n    }   \n}","import { Sprite } from \"../../../gamelib/sprites/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport { SpaceGame } from \"../SpaceGame\";\nimport { Point } from \"../../../gamelib/types/Point\";\nimport { SpriteExpirationBehavior } from \"../../../gamelib/sprites/behaviors/SpriteExpirationBehavior\";\nimport { TrailingEffectBehavior } from \"../../../gamelib/sprites/behaviors/TrailingEffectBehavior\";\n\nconst NAME = \"missle\";\n\nexport class Missle extends AnimatedSprite<SpaceGame, MainGameScene>{\n\towner:Sprite;\n\tbehavior:SpriteExpirationBehavior;\n\tconstructor(position:Point,angle:number, speed:number,\n\t\t\towner:Sprite, scene:MainGameScene, expiration:number) {\n\t\tsuper(scene,NAME, position);\n\t\tthis.owner = owner;\n\t\tthis.angle = angle;\n\t\tthis.speed = speed;\n\t\tthis.acceleration = 10;\n\t\tthis.canCollide = true;\n\t\tthis.behavior =new SpriteExpirationBehavior(expiration);\n\t\tthis.addBehavior(this.behavior);\n\t\tthis.addBehavior(new TrailingEffectBehavior(.2));\n\t}\n\t\n\thandleCollision(otherSprite:Sprite):void{\n\t\tif(otherSprite === this.owner || otherSprite.name === NAME )\n\t\t\treturn;\n\t\tthis.isAlive = false;\n\t\tthis.scene.missleHit(this.owner,otherSprite);\n\t}\n}","import { TimedBehavior } from \"./TimedBehavior\";\nimport { DefaultSprite } from \"../DefaultSprite\";\nimport { Point } from \"../../types/Point\";\n\n\nexport class FadeOutBehavior extends TimedBehavior{\n\n    oldAlpha = 1.0;\n\tbeforePaint?(sprite:DefaultSprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n        this.oldAlpha = ctx.globalAlpha;\n        ctx.globalAlpha = Math.min(1.0 -  (this.age / this.expirationTime) , 1.0);\n    }\n\n    afterPaint?(sprite:DefaultSprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n        ctx.globalAlpha = this.oldAlpha;\n    }\n    \n}","import { TimedBehavior } from \"./TimedBehavior\";\nimport { DefaultSprite } from \"../DefaultSprite\";\nimport { Point } from \"../../types/Point\";\n\n\nexport class FadeInBehavior extends TimedBehavior{\n\n    oldAlpha = 1.0;\n\tbeforePaint?(sprite:DefaultSprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n        this.oldAlpha = ctx.globalAlpha;\n        ctx.globalAlpha = Math.min(this.age / this.expirationTime , 1.0);\n    }\n\n    afterPaint?(sprite:DefaultSprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n        ctx.globalAlpha = this.oldAlpha;\n    }\n    \n}","import { GameController } from \"../../gamelib/GameController\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { Point } from \"../../gamelib/types/Point\";\nimport { Radar } from \"./sprites/Radar\";\nimport { Sprite } from \"../../gamelib/sprites/Sprite\";\nimport { SpriteExpirationBehavior } from \"../../gamelib/sprites/behaviors/SpriteExpirationBehavior\";\nimport { launchOpeningSequence } from \"./OpeningSequence\";\nimport { newBigExplosion, newSmallExplosion } from \"./sprites/Explosion\";\nimport { Player } from \"./sprites/Player\";\nimport { Enemy } from \"./sprites/Enemy\";\nimport { Missle } from \"./sprites/Missle\";\nimport { launchBetweenLevelsScene } from \"./BetweenLevelScene\";\nimport { Ship } from \"./sprites/Ship\";\nimport { generateGameAsteroids } from \"./sprites/Asteroids\";\nimport { centerPosition } from \"../../gamelib/types/Rectangle\";\nimport { FadeOutBehavior} from \"../../gamelib/sprites/behaviors/FadeOutBehavior\"\nimport { FadeInBehavior } from \"../../gamelib/sprites/behaviors/FadeInBehavior\";\nimport Scene from \"../../gamelib/Scene\";\n\nconst NAME = 'MainGameScene';\nexport class MainGameScene extends Scene<SpaceGame> {\n\t_score: number = 0;\n\tlevel: number;\n\tstars: Point[] = []\n\tplayer: Player;\n\talienCount: number;\n\tpause: boolean = false;\n\n\tconstructor(controller: GameController<SpaceGame>, level: number, score: number) {\n\t\tsuper(NAME, controller);\n\t\tthis.setTiles(3,3, [(new Array(9)).fill(NAME)], false);\n\t\t\n\t\tthis.level = level;\n\t\tthis.score = score;\n\t\tcontroller.scene = this;\n\t\tthis.modelSize = { width: this.size.width * 3, height: this.size.height * 3 };\n\t\tconst area = this.modelSize.width * this.modelSize.height;\n\t\tthis.wrapAround = true;\n\n\t\tthis.addSprites(generateGameAsteroids(this, Math.floor((area / 300000) * (.6 + level * .4))));\n\n\t\tthis.addSprite(new Radar(this));\n\n\t\tconst center = { x: this.modelSize.width / 2, y: this.modelSize.height / 2 };\n\t\tthis.viewPort = { x: center.x - this.size.width / 2, y: center.y - this.size.height / 2 };\n\n\t\tthis.player = new Player(this, center);\n\t\tthis.player.addBehavior(new FadeInBehavior(500));\n\t\tthis.addSprite(this.player);\n\n\t\tthis.alienCount = level;\n\t\tfor (let i = 0; i < this.alienCount; i++)\n\t\t\tthis.addSprite(new Enemy(this));\n\n\t\tthis.speed = 1;\n\t}\n\n\tfire(ship: Ship) {\n\t\tif (ship.lastMissleFired && ship.lastMissleFired.behavior.age < 125 && ship.lastMissleFired.isAlive) {\n\t\t\treturn;\n\t\t}\n\t\tconst center = centerPosition(ship);\n\t\tconst pos = {\n\t\t\tx: center.x + Math.cos(ship.shipAngle) * ship.size.width,\n\t\t\ty: center.y + Math.sin(ship.shipAngle) * ship.size.height\n\t\t};\n\t\tlet expiration: number;\n\t\tif (this.player === ship) {\n\t\t\texpiration = 1500;\n\t\t\tthis.controller.soundEffects.play(\"missle\");\n\n\t\t} else {\n\t\t\texpiration = 1000;\n\t\t\tthis.controller.soundEffects.play(\"alienMissle\");\n\t\t}\n\t\tconst missle = new Missle(pos, ship.shipAngle, ship.speed + 50, ship, this, expiration);\n\t\tship.lastMissleFired = missle;\n\t\tthis.addSprite(missle);\n\t}\n\n\thandleKeyPressed(key: string): void {\n\t\tif (this.pause)\n\t\t\treturn;\n\t\tswitch (key) {\n\t\t\tcase 'a':\n\t\t\tcase 'ArrowLeft':\n\t\t\t\tthis.player.left();\n\t\t\t\tbreak;\n\t\t\tcase 'w':\n\t\t\tcase 'ArrowUp':\n\t\t\t\tthis.player.move();\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\tcase 'ArrowDown':\n\t\t\t\tthis.player.move(-15.0);\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\tcase 'ArrowRight':\n\t\t\t\tthis.player.right();\n\t\t\t\tbreak;\n\t\t\tcase ' ':\n\t\t\t\tthis.fire(this.player);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgameOver() {\n\t\tif (this.pause)\n\t\t\treturn;\n\t\tthis.pause = true;\n\t\tthis.controller.soundEffects.play(\"gameOver\");\n\n\t\tthis.addBehavior(new SpriteExpirationBehavior(4000));\n\t\tthis.addBehavior({\n\t\t\thandleKill: () => {\n\t\t\t\tif (this.controller.gameInitializer.highscore < this.score) {\n\t\t\t\t\tthis.controller.gameInitializer.highscore = this.score;\n\t\t\t\t\tthis.controller.soundEffects.play(\"newHighScore\");\n\t\t\t\t}\n\t\t\t\tlaunchOpeningSequence(this.controller);\n\t\t\t}\n\t\t});\n\t}\n\tnextLevel() {\n\t\tthis.pause = true;\n\t\tthis.addBehavior(new SpriteExpirationBehavior(3000));\n\t\tconst behavior = new FadeOutBehavior(2000);\n\t\tbehavior.handleTimeUp = () => this.player.isAlive = false;\n\t\tthis.player.addBehavior(behavior);\n\t\tthis.addBehavior({ handleKill: () => launchBetweenLevelsScene(this.controller, this.level, this.score) });\n\t}\n\n\thit(hitPoints: number) {\n\t\tif (this.pause)\n\t\t\treturn;\n\t\tif (this.player.shield - hitPoints <= 0) {\n\t\t\tconst center = centerPosition(this.player);\n\t\t\tthis.addSprite(newBigExplosion(this, center));\n\t\t\tthis.player.isAlive = false;\n\t\t\tthis.gameOver();\n\t\t} else {\n\t\t\tthis.player.shield -= hitPoints;\n\t\t\tthis.player.animateShield();\n\t\t}\n\t}\n\tmissleHit(owner: Sprite, otherSprite: Sprite) {\n\t\tif (this.debug) {\n\t\t\tconsole.log(`Missle from ${owner.name} hits sprite ${otherSprite.name}`);\n\t\t}\n\t\tif (this.pause)\n\t\t\treturn;\n\n\t\tif (otherSprite.name === 'player') {\n\t\t\tthis.hit(49);\n\t\t} else if (otherSprite.name === 'enemy' && owner === this.player) {\n\t\t\totherSprite.isAlive = false;\n\t\t\tthis.addSprite(newBigExplosion(this, centerPosition(otherSprite)));\n\t\t\tthis.score += 50;\n\t\t\tif (--this.alienCount === 0) {\n\t\t\t\tthis.nextLevel();\n\t\t\t}\n\t\t} else if (owner === this.player && otherSprite.name === 'asteroid') {\n\t\t\totherSprite.isAlive = false;\n\t\t\tthis.addSprite(newSmallExplosion(this, centerPosition(otherSprite)));\n\t\t\tthis.score += 5;\n\t\t}\n\t}\n\tset score(score: number) {\n\t\tthis._score = score;\n\t\tthis.controller.publishEvent({ type: 'score', value: (this.score) });\n\t}\n\tget score(): number {\n\t\treturn this._score;\n\t}\n\thandleMouseClick(x: number, y: number) {\n\t\tif (this.pause)\n\t\t\treturn;\n\t\tthis.handleTouch(x, y);\n\t\tthis.fire(this.player);\n\t}\n\n\thandleTouch(x: number, y: number) {\n\t\tif (this.pause)\n\t\t\treturn;\n\t\tconst xDist = this.player.position.x - x - this.viewPort.x;\n\t\tconst yDist = this.player.position.y - y - this.viewPort.y;\n\t\tconst distance = Math.hypot(xDist, yDist);\n\t\tconst requiredHeading = Math.atan2(yDist, xDist);\n\t\tconst crossproduct = Math.sin(requiredHeading - this.player.shipAngle);\n\n\t\tif (crossproduct > .1)\n\t\t\tthis.player.shipAngle -= .1;\n\t\telse if (crossproduct < -.1)\n\t\t\tthis.player.shipAngle += .1;\n\t\tif (distance > 100) {\n\t\t\tthis.player.move();\n\t\t\tthis.acceleration = -1;\n\t\t} else {\n\t\t\tthis.acceleration = -5;\n\t\t}\n\t}\n}\n","import { SpaceGame } from \"./SpaceGame\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { MainGameScene } from \"./MainGameScene\";\nimport { generateOpenningSequenceAsteroids } from \"./sprites/Asteroids\";\nimport { TitleSprite } from \"../../gamelib/sprites/TitleSprite\";\nimport Scene from \"../../gamelib/Scene\";\nconst NAME = 'BetweenLevelScene';\nexport function launchBetweenLevelsScene(controller:GameController<SpaceGame>, level:number, score:number){\n    const scene = new Scene(NAME,controller);\n    scene.setTiles(3,3, [(new Array(9)).fill(NAME)], false);\n    controller.scene = scene;\n    controller.publishEvent({type:'score', value:score});\n    scene.wrapAround = true;\n\n    scene.handleKeyPressed = (key: string) => { new MainGameScene(controller,level+1,score) };\n    scene.handleMouseClick = () => new MainGameScene(controller,level+1,score);\n    scene.addSprite( new TitleSprite(`LEVEL ${level} COMPLETE`, `Score ${score}`\n        , 'HIT ANY KEY FOR NEXT LEVEL' ) );\n    scene.addSprites(generateOpenningSequenceAsteroids(scene, 30));\n    scene.controller.soundEffects.play(\"levelComplete\");\n    return scene;\n}\n","import { GameController } from \"../../gamelib/GameController\";\nimport { generateOpenningSequenceAsteroids } from \"./sprites/Asteroids\";\nimport { MainGameScene } from \"./MainGameScene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { TitleSprite } from \"../../gamelib/sprites/TitleSprite\";\nimport Scene from \"../../gamelib/Scene\";\n\n\nconst NAME = 'OpeningScene';\nexport function launchOpeningSequence(controller:GameController<SpaceGame>){\n    const scene = new Scene(NAME,controller);\n    scene.setTiles(3,3, [(new Array(9)).fill(NAME)], false);\n    controller.scene = scene;\n    controller.publishEvent({type:'score', value:0});\n    scene.wrapAround = true;\n\n    scene.handleKeyPressed = (key: string) => { new MainGameScene(controller,1,0) };\n    scene.handleMouseClick = () => new MainGameScene(controller,1,0);\n\n    scene.addSprite( new TitleSprite('Space Hunter', `High Score ${controller.gameInitializer.highscore}`\n        , 'HIT ANY KEY FOR NEW GAME' ) );\n     scene.addSprites(generateOpenningSequenceAsteroids(scene, 30));\n}","import { GameInitializer } from \"../../gamelib/GameInitializer\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { launchOpeningSequence } from \"./OpeningSequence\";\n\nexport class SpaceGame implements GameInitializer<SpaceGame>{\n\n    highscore: number = 0;\n\n    preloadImages = [{ name: 'asteroid', src: '/circles/assets/images/asteroid.png', rows: 2, columns: 10, type: 'animate' }\n        , { name: 'player', src: '/circles/assets/images/ship_anim.png', rows: 1, columns: 24, scale: .4, angleOffset: Math.PI / 2, type: 'rotate' }\n        , { name: 'shield', src: '/circles/assets/images/shield.png', scale: .3, type: 'static' }\n        , { name: 'enemy', src: '/circles/assets/images/Enemy.png', scale: .8, type: 'animate' }\n        , { name: 'explosionSmall', src: '/circles/assets/images/ExplosionSheetSmall.png', rows: 4, columns: 4, type: 'animate' }\n        , { name: 'explosionBig', src: '/circles/assets/images/ExplosionSheet2.png', rows: 6, columns: 8, type: 'animate' }\n        , { name: 'missle', src: '/circles/assets/images/Laser.png', type: 'animate' }\n        , { name: 'OpeningScene', src: '/circles/assets/images/Scene.jpg', noTransparent: true, type: 'static' }\n        , { name: 'MainGameScene', src: '/circles/assets/images/starfield_alpha2.png', noTransparent: true , type: 'static'}\n        , { name: 'BetweenLevelScene', src: '/circles/assets/images/Scene.jpg', noTransparent: true, type: 'static' }\n    ];\n    preloadSounds = [{ name: 'missle', src: '/circles/assets/sounds/missle_fire.wav' }\n        , { name: 'alienMissle', src: '/circles/assets/sounds/alien_missle_fire.wav' }\n        , { name: 'gameOver', src: '/circles/assets/sounds/game_over.wav' }\n        , { name: 'levelComplete', src: '/circles/assets/sounds/level_complete.wav' }\n        , { name: 'explosionSmall', src: '/circles/assets/sounds/small_explosion.wav' }\n        , { name: 'explosionBig', src: '/circles/assets/sounds/big_explosion.wav' }\n        , { name: 'newHighScore', src: '/circles/assets/sounds/new_high_score.wav' }];\n\n    init(controller: GameController<SpaceGame>): void {\n        launchOpeningSequence(controller);\n        //controller.debug = true;\n    }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link  as ReactLink, Box } from '@material-ui/core';\nimport {  AppBar, Toolbar,Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n      },\n    container:{\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n        overflowY:'auto',\n    },\n    root: {\n        maxWidth: 345,\n        marginBottom: theme.spacing(3),\n    },\n    media: {\n        height: 140,\n    },\n    link:{\n        textDecoration: 'none'\n    },\n    githublink:{\n        marginLeft: theme.spacing(3),\n    }\n}));\n\nexport  function Home() {\n    const classes = useStyles();\n\n    return (\n\n        <React.Fragment>\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Circles\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box component=\"div\" overflow=\"visible\">\n        <Grid container alignItems=\"center\" justify = \"center\" direction=\"column\" className={classes.container} >\n            <Card className={classes.root}>\n                <Link to=\"/space\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/asteroids-screen.png\"\n                            title=\"Play Asteroids\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Space Hunter\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Shoot all the asteroids.  Use W-A-S-D to move around and space bar to fire.  Watch out for the enemy...\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n            <Card className={classes.root}>\n                <Link to=\"/ball\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/balls-screen.png\"\n                            title=\"Play Bouncing Ball\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Bouncing Ball\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Try to catch the balls.  If you miss your score goes down, so be careful!  Built this to test the library.\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n            <ReactLink  component=\"button\" variant=\"body2\" className={classes.githublink}\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </ReactLink>\n        </Grid>\n        </Box>\n</React.Fragment>\n    );\n}","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport GameComponent from './gamecontainer/GameComponent';\nimport { BouncingBall } from './sample/BouncingBall';\nimport { SpaceGame } from './sample/space/SpaceGame';\nimport { Home } from './Home';\n\nexport default function App() {\n  return (\n    <Router hashType='noslash'>\n        <Switch>\n          <Route path=\"/space\">\n          <GameComponent gameInitializer={new SpaceGame()} ></GameComponent>\n          </Route>\n          <Route path=\"/ball\">\n          <GameComponent gameInitializer={new BouncingBall()} ></GameComponent>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Electrolize',\n  },\n    overrides: {\n\n        MuiCssBaseline: {\n          '@global': {\n            body: {\n                width: '100%',\n                height: '100%',\n                margin: '0',\n            }\n          },\n        },\n      },\n});\ntheme.typography.h5 = {\n  fontSize: '18px',\n  '@media (min-width:600px)': {\n    fontSize: '22px',\n  },\n  [theme.breakpoints.up('md')]: {\n    fontSize: '28px',\n  },\n};\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-electrolize';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}