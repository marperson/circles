{"version":3,"sources":["gamelib/behaviors/DefaultSprite.ts","gamelib/types/Point.ts","gamelib/types/Sprite.ts","gamelib/types/Rectangle.ts","gamelib/Scene.ts","gamelib/behaviors/SpriteSheet.ts","gamelib/behaviors/SpriteSheetBehavior.ts","sample/BouncingBall.ts","gamelib/ImagePreloader.ts","gamelib/GameController.ts","InfoDialog.tsx","GameComponent.tsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["DefaultSprite","position","x","y","size","width","height","isAlive","speed","angle","acceleration","canCollide","isFixedPosition","behaviors","this","behavior","init","push","location","ctx","timeSinceLastAnimation","forEach","b","paint","timeSinceLastUpdate","updateModel","handleKill","otherSprite","handleCollision","pointAsInt","point","Math","round","xySpeed","sprite","cos","sin","union","rect1","rect2","tx2","ty2","rx2","ry2","tx1","ty1","rx1","ry1","intersects","tw","th","rw","rh","tx","ty","rx","ry","remove","array","key","index","indexOf","splice","Scene","controller","modelSize","viewPort","debug","wrapAround","sceneSpeed","collisionListeners","sprites","count","totalTime","filter","s","rect","pointInRect","_validateSprite","console","log","priorPosition","handleMovement","dx","tempArray","slice","length","pop","oldRect","pointSpeed","newX","newY","wrapped","newRect","_handleCollision","sign","error","removeSprite","collisionSprite","i","displayedSprites","Error","pos","fillStyle","fillText","addSprite","undefined","SpriteSheet","image","rows","columns","floor","row","column","w","h","translate","rotate","drawImage","srcX","srcY","setTransform","SpriteSheetBehavior","spriteSheet","framesPerSecond","age","animateOnce","frame","frameCount","timePerFrame","createWall","isVertical","fillRect","PI","random","BouncingBall","preloadImages","name","src","scene","score","publishEvent","type","value","handleMouseClick","getSpritesAtPoint","paintBackground","sz","imagePreloader","getImageFromCache","radius","rand","min","max","ball","addBehavior","ImagePreloader","imageCache","Map","loadsCompleted","nLoads","loadCallback","callback","get","images","des","Image","onload","_createOnLoad","newImage","canvas","document","createElement","getContext","top","imgd","getImageData","pix","data","newColor","n","r","g","putImageData","output","toDataURL","makeTransparent","set","GameController","gameInitializer","keysPressed","isShutdown","pause","readyCallback","_scene","gameEventListeners","preLoadImages","registerCallback","_handleImagesLoaded","window","innerWidth","innerHeight","transitionScene","newScene","that","event","handler","gameEventListener","addEventListener","delete","e","preventDefault","getBoundingClientRect","clientX","left","clientY","touch","targetTouches","handleTouchMove","lastTime","restart","requestAnimationFrame","loop","time","handleKeyPressed","save","restore","constructor","useStyles","makeStyles","theme","createStyles","infoButton","marginRight","spacing","InfoDialog","React","useState","open","setOpen","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","IconButton","edge","className","onClick","color","aria-label","Info","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","component","variant","DialogActions","Button","autoFocus","GameComponent","withStyles","root","flexGrow","controlButton","title","props","canvasRef","createRef","gameController","state","imagesLoaded","current","setState","subscribeEvent","stopPropagation","Fragment","AppBar","style","background","boxShadow","Toolbar","Typography","handlePause","PlayCircleOutline","PauseCircleOutline","handleRestart","Refresh","gutterBottom","CircularProgress","ref","Component","App","Boolean","hostname","match","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","body","margin","ReactDOM","render","ThemeProvider","CssBaseline","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a7055273.chunk.js","sourcesContent":["import { Point } from \"../types/Point\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Size } from \"../types/Size\";\nimport { Behavior } from \"../types/Behavior\";\n\nexport class DefaultSprite implements Sprite{\n    position:Point;\n    size:Size;\n    isAlive:boolean = true;\n\t\n    speed:number = 0.0;\n    angle:number = 0.0;\n    acceleration:number = 0.0;\n\tcanCollide:boolean = false;\n\tisFixedPosition:boolean = false;\n\t\n\tprivate behaviors:Behavior[] = [];\n\t\n\tconstructor(position:Point={x:0.0,y:0.0}, size:Size={width:0.0, height:0.0}){\n        this.position = position;\n        this.size = size;\n\t}\n\t\n\taddBehavior(behavior:Behavior){\n        if(behavior.init) behavior.init(this);\n        this.behaviors.push(behavior);\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n        this.behaviors.forEach( (b) =>  b.paint?.(this, location, ctx, timeSinceLastAnimation));\n    }\n    updateModel(timeSinceLastUpdate: number) {\n        this.behaviors.forEach( (b) =>  b.updateModel?.(this, timeSinceLastUpdate));\n    }\n    \n    handleKill():void{\n        this.behaviors.forEach( (b) =>  b.handleKill?.(this));\n    }\n    \n    handleCollision?(otherSprite:Sprite):void{\n        this.behaviors.forEach( (b) =>  b.handleCollision?.(this, otherSprite));\n    }\n}","\nexport interface Point{\n    x:number;\n    y:number;\n}\n\nexport function pointAsInt(point:Point): Point{\n    return {x:Math.round(point.x), y:Math.round(point.y)};\n}","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Sprite{\n    position:Point;\n    size:Size;\n    isAlive:boolean;\n    speed?: number;\n    angle?: number;\n    acceleration?: number;\n    priorPosition?:Point;\n    zOrder?:number\n\n    //optional properties\n\tcanCollide?: boolean;\n\tisFixedPosition?: boolean;\n\t\n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void;\n\n    updateModel?(timeSinceLastUpdate: number):void;\n\t\t\n\thandleKill?():void;\n    \n    handleCollision?(otherSprite:Sprite):void;\n    \n}\n\nexport function xySpeed(sprite:Sprite): Point{\n    if(sprite.speed && sprite.angle)\n        return {x: sprite.speed * Math.cos(sprite.angle), y: sprite.speed * Math.sin(sprite.angle)};\n    else return {x:0,y:0};\n}\n\n\nexport function centerPosition(sprite:Sprite): Point{\n    return {x: sprite.position.x + sprite.size.width/2, y: sprite.position.y + sprite.size.height/2};\n}\n\n","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Rectangle{\n    position:Point;\n    size:Size;\n\n}\n\nexport function union(rect1:Rectangle, rect2:Rectangle):Rectangle{\n    let tx2 = rect1.size.width;\n    let ty2 = rect1.size.height;\n    if ((tx2 | ty2) < 0) {\n        // This rectangle has negative dimensions...\n        // If r has non-negative dimensions then it is the answer.\n        // If r is non-existant (has a negative dimension), then both\n        // are non-existant and we can return any non-existant rectangle\n        // as an answer.  Thus, returning r meets that criterion.\n        // Either way, r is our answer.\n        return rect2;\n    }\n    let rx2 = rect2.size.width;\n    let ry2 = rect2.size.height;\n    if ((rx2 | ry2) < 0) {\n        return rect1;\n    }\n    let tx1 = rect1.position.x;\n    let ty1 = rect1.position.y;\n    tx2 += tx1;\n    ty2 += ty1;\n    const rx1 = rect2.position.x;\n    const ry1 = rect2.position.y;\n    rx2 += rx1;\n    ry2 += ry1;\n    if (tx1 > rx1) tx1 = rx1;\n    if (ty1 > ry1) ty1 = ry1;\n    if (tx2 < rx2) tx2 = rx2;\n    if (ty2 < ry2) ty2 = ry2;\n    tx2 -= tx1;\n    ty2 -= ty1;\n    return { position:{x:tx1, y:ty1},size:{width:tx2, height:ty2}};\n\n}\n\nexport function intersects(rect1:Rectangle, rect2:Rectangle):boolean{\n\n    let tw = rect1.size.width;\n    let th = rect1.size.height;\n    let rw = rect2.size.width;\n    let rh = rect2.size.height;\n    if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\n        return false;\n    }\n    const tx = rect1.position.x;\n    const ty = rect1.position.y;\n    const rx = rect2.position.x;\n    const ry = rect2.position.y;\n    rw += rx;\n    rh += ry;\n    tw += tx;\n    th += ty;\n    //      overflow || intersect\n    return ((rw < rx || rw > tx) &&\n            (rh < ry || rh > ty) &&\n            (tw < tx || tw > rx) &&\n            (th < ty || th > ry));\n}\n\nexport function pointInRect(point:Point, rect:Rectangle):boolean{\n    return point.x >= rect.position.x && point.x < rect.position.x + rect.size.width\n        && point.y >= rect.position.y && point.y < rect.position.y + rect.size.height;\n}","import { GameController } from \"./GameController\";\nimport { DefaultSprite } from \"./behaviors/DefaultSprite\";\nimport { Point, pointAsInt } from \"./types/Point\";\nimport { Sprite, xySpeed } from \"./types/Sprite\";\nimport { Size } from \"./types/Size\";\nimport { union, Rectangle, intersects, pointInRect } from \"./types/Rectangle\";\n\n\nfunction remove(array:any[], key:any){\n    const index = array.indexOf(key, 0);\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n}\n\nexport default class Scene extends DefaultSprite{\n\n    viewPort:Point = {x:0, y:0};\n    controller:GameController;\n    debug: boolean = false;\n\twrapAround:boolean = false;\n\tsceneSpeed:number = 1.0;\n\tmodelSize:Size;\n\n\tprivate collisionListeners:Sprite[] = [];\n\tprivate sprites:Sprite[] = [];\n    \n    constructor(controller:GameController, modelSize:Size={width:0.0, height:0.0}){\n        super();\n        this.controller = controller;\n        this.modelSize = modelSize;\n    }\n    handleKeyPressed(key: string): void {\n    }\n\n    handleMouseClick(x:number, y:number){\n    }\n\thandleTouchMove(x:number, y:number){\n    }\n\n\tgetSpritesAtPoint(point:Point):Sprite[]{\n\t\treturn this.sprites.filter( (s) => pointInRect(point, s) );\n\t}\n\n\taddSprite(sprite:Sprite) {\n\t\tthis._validateSprite(sprite);\n\t\tif(this.debug)\n\t\t\tconsole.log(\"AddSprite: \" + sprite);\n\t\t//todo: insert by z-order\n\t\tthis.sprites.push(sprite);\n\t\tsprite.priorPosition = sprite.position;\n\t\tif (sprite.handleCollision)\n\t\t\tthis.collisionListeners.push(sprite);\n\t}\n\n\tremoveSprite(sprite:Sprite) {\n\t\tsprite.handleKill?.();\n        if(this.debug)\n            console.log(\"RemoveSprite: \" + sprite);\n        remove(this.sprites, sprite);\n        remove(this.collisionListeners, sprite);\n\t}\n\n\tpublic resetGame() {\n\t    this.sprites = [];\n\t\tthis.collisionListeners = [];\n\t}\n\n    updateModel(timeSinceLastUpdate: number) {\n\t\tsuper.updateModel(timeSinceLastUpdate);\n        \n        // handle movements and check collision\n\t\tthis.handleMovement(timeSinceLastUpdate);\n\t}\n\n    handleMovement(timeSinceLastUpdate: number) {\n        const dx = timeSinceLastUpdate/1000.0;\n        const tempArray:Sprite[] = this.sprites.slice();\n\t\twhile (tempArray.length) {\n\t\t\tconst sprite:Sprite = tempArray.pop()!;\n\t\t\tif(!sprite.isAlive){\n\t\t\t\t// remove any dead sprites.\n\t\t\t\tthis.removeSprite(sprite);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (sprite.speed) {\n\t\t\t\tconst oldRect = {position:pointAsInt(sprite.position), size:sprite.size};\n\t\t\t\tconst pointSpeed = xySpeed(sprite);\n\t\t\t\tlet newX = sprite.position.x + pointSpeed.x * dx * this.sceneSpeed;\n\t\t\t\tlet newY = sprite.position.y + pointSpeed.y * dx * this.sceneSpeed;\n\n\t\t\t\t// handle wrap around\n\t\t\t\tlet wrapped = false;\n\t\t\t\tif (this.wrapAround) {\n\t\t\t\t\tlet width = this.size.width;\n\t\t\t\t\tlet height = this.size.height;\n\t\t\t\t\tif(this.modelSize.width !==0){\n\t\t\t\t\t\twidth= this.modelSize.width;\n\t\t\t\t\t\theight = this.modelSize.height;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (newX < 0) {\n\t\t\t\t\t\tnewX = width - sprite.size.width;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t} else if (newX + sprite.size.width > width) {\n\t\t\t\t\t\tnewX = 0;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (newY < 0) {\n\t\t\t\t\t\tnewY = height - sprite.size.height;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t} else if (newY + sprite.size.height > height) {\n\t\t\t\t\t\tnewY = 0;\n\t\t\t\t\t\twrapped = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsprite.priorPosition = oldRect.position;\n\t\t\t\tsprite.position = {x:newX, y:newY};\n\t\t\t\t// check collisions\n\t\t\t\tlet newRect = {position: pointAsInt(sprite.position), size: sprite.size};\n\t\t\t\tif (!wrapped)\n\t\t\t\t\tnewRect = union(oldRect, newRect);\n\t\t\t\t\n\t\t\t\tif(sprite.canCollide)\n\t\t\t\t\tthis._handleCollision(newRect, sprite);\n\t\t\t\tif (sprite.acceleration) {\n\t\t\t\t\tif (Math.sign(sprite.acceleration\n\t\t\t\t\t\t\t+ sprite.speed) !== Math.sign(sprite\n\t\t\t\t\t\t\t.speed))\n\t\t\t\t\t\tsprite.speed = 0;\n\t\t\t\t\telse\n\t\t\t\t\t\tsprite.speed = sprite.speed + sprite.acceleration;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(sprite.updateModel)\n\t\t\t\tsprite.updateModel(timeSinceLastUpdate);\n\t\t\ttry {\n\t\t\t\tthis._validateSprite(sprite);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Sprite position not valid.  Killing spite. \" + error);\n\t\t\t\tsprite.isAlive=false;\n\t\t\t}\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthis.removeSprite(sprite);\n\t\t}\n\t}\n\n\tprivate _handleCollision( newRect:Rectangle, sprite:Sprite) {\n\t\t//need to make this more sophisticated so it doesn't break out after one collision.\n\t\tlet collisionSprite;\n\t\tif(sprite.handleCollision){\n\t\t\tfor(let i =0; i< this.sprites.length;i++){\n\t\t\t\tconst otherSprite = this.sprites[i];\n\t\t\t\tif (sprite !== otherSprite && otherSprite.canCollide) {\n\t\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\t\tsprite.handleCollision(otherSprite);\n\t\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!collisionSprite)\n\t\t\tcollisionSprite = sprite;\n\t\t\n\t\tfor(let i =0; i< this.collisionListeners.length;i++){\n\t\t\tconst otherSprite = this.collisionListeners[i];\n\t\t\tif (sprite !== otherSprite) {\n\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\totherSprite.handleCollision!(sprite);\n\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!collisionSprite.isAlive) {\n\t\t\tthis.removeSprite(collisionSprite);\n\t\t}\n\t}\n\tcount =0;\n\ttotalTime =0;\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void {\n        //enable you to embed a scene as a sprite in another scene\n        location = {x: location.x + this.viewPort.x, y:location.y+this.viewPort.y}; \n\t\tsuper.paint(location, ctx, timeSinceLastAnimation);\n\t\tlet displayedSprites =0\n\t\tfor(let sprite of this.sprites){\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthrow Error(\"No Dead Sprites Should Make it to render step.\\n\" + sprite);\n\t\t\tlet pos = pointAsInt(sprite.position);\n\t\t\t\tif(!sprite.isFixedPosition){\n\t\t\t\t\tpos = {x: pos.x - location.x, y: pos.y - location.y}\n\t\t\t\t}\n\t\t\tif(pos.x > this.size.width || pos.y > this.size.height \n\t\t\t\t|| (sprite.size.width + pos.x < 0)\n\t\t\t\t|| (sprite.size.height + pos.y < 0)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsprite.paint(pos, ctx, timeSinceLastAnimation);\n\t\t\tdisplayedSprites++;\n\t\t}\n\t\tif(this.debug){\n\t\t\tif(++this.count % 300 === 0){\n\t\t\t\tthis.totalTime  = timeSinceLastAnimation;\n\t\t\t\tthis.count =1;\n\t\t\t}else{\n\t\t\t\tthis.totalTime +=timeSinceLastAnimation;\n\t\t\t}\n\t\t\tctx.fillStyle = \"red\"\n\t\t\tctx.fillText(`FPS: ${Math.round(1000 / (this.totalTime/ ++this.count))} Alive Sprites: ${this.sprites.length} On Screen Sprites: ${displayedSprites}` , 10, this.size.height -10);\n\t\t}\n\t}\n\n\taddSprites(sprites:Sprite[] ) {\n\t\tsprites.forEach( (s) => this.addSprite(s) )\n\t}\n\n\tpaintBackground?(ctx: CanvasRenderingContext2D):void;\n\t\n\t_validateSprite(sprite:Sprite){\n\t\tif(sprite.position.x < 0 || sprite.position.y < 0 )\n\t\t\tthrow Error(`Sprite position less 0 (${sprite.position.x}, ${sprite.position.y})`);\n\t\tif(this.modelSize.width !==0){\n\t\t\tif(sprite.position.x >= this.modelSize.width || sprite.position.y >= this.modelSize.height)\n\t\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y}) > model(${this.modelSize.width},${this.modelSize.height})`);\n\t\t}else if(sprite.position.x >= this.size.width || sprite.position.y >= this.size.height) {\n\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y})  > screen(${this.size.width},${this.size.height}) `);\n\t\t}\n\t\tif(sprite.size.width <=0 || sprite.size.height <= 0)\n\t\t\tthrow Error(`Sprite size too small (${sprite.size.width}, ${sprite.size.height})`);\n\t\tif( (sprite.speed !== undefined &&  sprite.angle === undefined) \n\t\t\t|| (sprite.speed === undefined &&  sprite.angle !== undefined))\n\t\t\tthrow Error(`Either speed(${sprite.speed}) and angle(${sprite.angle}) are both defined or both undefined.`)\n\t}\n\n}","import { Size } from \"../types/Size\";\nimport { Point } from \"../types/Point\";\n\nexport class SpriteSheet{\n    readonly rows:number;\n    readonly columns:number;\n    readonly image:HTMLImageElement;\n    readonly size:Size;\n    constructor(image:HTMLImageElement, rows:number = 1, columns:number =1) {\n        this.image = image;\n        this.rows = rows;\n        this.columns = columns;\n        this.size = {width:Math.floor(this.image.width/this.columns),\n            height: Math.floor(this.image.height/this.rows)}\n    }\n    paint(location:Point, ctx: CanvasRenderingContext2D, angle:number= 0,row:number=1, column:number=1):void{\n        if(row<1 || row > this.rows || column < 1 || column > this.columns)\n            throw Error(`Row and columns of sprite need to be in bounds (${row},${column})`);\n        const w = this.size.width, h = this.size.height;\n        if(angle){\n            ctx.translate(location.x + w / 2.0, location.y+ h / 2.0);\n            ctx.rotate(angle);\n            location.x = 0 - w / 2.0;\n            location.y = 0 - h / 2.0;\n        }\n        if(this.columns === 1 && this.rows === 1)\n            ctx.drawImage(this.image, location.x, location.y, w , h);\n        else{\n            const srcX = Math.floor(this.image.width * ((column-1)/this.columns));\n            const srcY = Math.floor(this.image.height * ((row-1)/this.rows));\n            ctx.drawImage(this.image, srcX, srcY, w, h, location.x, location.y, w, h);\n        }\n        if(angle){\n            ctx.setTransform(1, 0, 0, 1, 0, 0);    \n        }\n    }\n    get frameCount():number{\n        return this.rows*this.columns;\n    }\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { SpriteSheet } from \"./SpriteSheet\";\n\n\n\nexport class SpriteSheetBehavior implements Behavior{\n    spriteSheet:SpriteSheet;\n    framesPerSecond:number = 10;\n\tage:number = 0;\n    animateOnce:boolean = false;\n\trotate:boolean = false;\n\n\tconstructor(spriteSheet:SpriteSheet) {\n\t\tthis.spriteSheet = spriteSheet;\n\t}\n    init(sprite:Sprite){\n        sprite.size = this.spriteSheet.size;\n\t}\n    paint(sprite:Sprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n\t\tlet frame;\n\t\tif(this.framesPerSecond && this.spriteSheet.frameCount !== 0){\n\t\t\tconst timePerFrame = 1.0 / this.framesPerSecond;\n\t\t\tframe = Math.floor( (this.age/timePerFrame ) % this.spriteSheet.frameCount);\n\t\t}else{\n\t\t\tframe =0;\n\t\t}\n\t\tconst column = Math.floor(frame % this.spriteSheet.columns) + 1;\n\t\tconst row = Math.floor( frame/this.spriteSheet.columns ) + 1 ;\n\t\tconst angle = (sprite.angle) ? sprite.angle : 0;\n\t\tthis.spriteSheet.paint(location,ctx,angle,row,column);\t\t\n\n\t}\n\tupdateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n\t\tconst dx = timeSinceLastUpdate/1000;\n\t\tthis.age += dx;\n\t\tif(this.animateOnce){\n\t\t\tif (this.age > this.spriteSheet.frameCount / this.framesPerSecond) {\n\t\t\t\t// System.out.println(\"FPS:\" + getFramesPerSecond()\n\t\t\t\t// \t\t+ \"\\tFC:\" + getFrameCount() + \"\\tage:\" + age);\n\t\t\t\tsprite.isAlive = false;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { GameController } from \"../gamelib/GameController\";\nimport { Point } from \"../gamelib/types/Point\";\nimport Scene from \"../gamelib/Scene\";\nimport { Sprite, xySpeed } from \"../gamelib/types/Sprite\";\nimport { Size } from \"../gamelib/types/Size\";\nimport { DefaultSprite } from \"../gamelib/behaviors/DefaultSprite\";\nimport { GameInitializer } from \"../gamelib/GameInitializer\";\nimport { SpriteSheet } from \"../gamelib/behaviors/SpriteSheet\";\nimport { SpriteSheetBehavior } from \"../gamelib/behaviors/SpriteSheetBehavior\";\n\n\n\nfunction createWall(position:Point, size:Size, isVertical:boolean):Sprite{\n    const wall = {\n        position,\n        size,\n        isAlive:true,\n        paint: function(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n            ctx.fillStyle =  \"\trgb(50,50,50)\";\n            ctx.fillRect(position.x, position.y, size.width, size.height);\n        },\n        handleCollision(otherSprite:Sprite):void{\n            const speed = xySpeed(otherSprite);\n            if(isVertical){\n                if(speed.x>0)\n                   otherSprite.position.x = this.position.x - otherSprite.size.width;\n                else\n                    otherSprite.position.x = this.position.x + this.size.width;\n                otherSprite.position.y = otherSprite.priorPosition!.y;\n                otherSprite.angle =  Math.PI - otherSprite.angle! + (Math.random() - .5 )*.2;\n            }else{\n                if(speed.y>0)\n                    otherSprite.position.y = this.position.y - otherSprite.size.height;\n                else\n                    otherSprite.position.y = this.position.y + this.size.height;\n                otherSprite.position.x = otherSprite.priorPosition!.x;\n                otherSprite.angle =  -1.0 * otherSprite.angle! + (Math.random() - .5 )*.2;\n            }\n        }\n    };\n    return wall;\n}\n\nexport class BouncingBall implements GameInitializer{\n    //add cool font\n\n    preloadImages = [{name:'ball', src:'/circles/assets/ball-sheet2.png'}];\n\n\tinit(controller:GameController):void {\n\t\tconst scene = new Scene(controller);\n        controller.scene = scene;\n        let score =0;\n        controller.publishEvent({type:'score', value:(score)});\n        scene.handleMouseClick = function(x:number, y:number){\n            const sprites = scene.getSpritesAtPoint({x,y});\n            if(sprites.length){\n                sprites.filter( (s) => s.canCollide ).forEach( (s) => {\n                    scene.removeSprite(s);\n                    controller.publishEvent({type:'score', value:(score++)});\n                } );\n            }else{ \n                controller.publishEvent({type:'score', value:(score--)});\n            }\n        }\n        scene.debug = true;\n        scene.wrapAround = false;\n        scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n                ctx.fillStyle = 'black';\n                ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n        }\n\n        const sz = scene.size;\n        const wallSize = 4;\n        //create walls\n        scene.addSprite( createWall({x:0,y:0},{width:sz.width-wallSize,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:sz.height-wallSize},{width:sz.width,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n        scene.addSprite( createWall({x:sz.width-wallSize,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n\n        //add balls\n        const image = controller.imagePreloader.getImageFromCache('ball');\n        const spriteSheet = new SpriteSheet(image, 4, 8);\n        const radius = spriteSheet.size.width/2;\n        const rand =  (min:number, max:number) => Math.random() * (max-min) + min;\n        for(let x=0; x<30;x++){\n            const ball = new DefaultSprite({x: rand(sz.width, radius),y:rand(sz.height, radius)});\n            ball.isAlive = true;\n            ball.speed = Math.random() * 300+100;\n            ball.angle = Math.random() * Math.PI *2;\n            ball.canCollide = true;\n            ball.addBehavior(new SpriteSheetBehavior(spriteSheet));\n            ball.size = {width: ball.size.width -2, height: ball.size.height -2}\n            scene.addSprite(ball);\t\n        }\n\n\t\t\n\t}\n}","\nexport interface PreloadImage{\n    name:string;\n    src:string;\n}\n\n\nfunction makeTransparent(image: HTMLImageElement):HTMLImageElement  {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n    canvas.height = image.height;\n    canvas.width = image.width;\n    ctx.drawImage(image,0,0);\n    const imgd = ctx.getImageData(0, 0, image.width, image.height);\n    const pix = imgd.data;\n    const newColor = {r:0,g:0,b:0, a:0};\n    let top:number[]\n    for (let i = 0, n = pix.length; i <n; i += 4) {\n        const r = pix[i], g = pix[i+1],b = pix[i+2];\n        if(i===0){\n            top = [r,g,b];\n        }\n        if(r === top![0] && g === top![1] && b === top![2]){ \n            // Change the white to whatever.\n            pix[i] = newColor.r;\n            pix[i+1] = newColor.g;\n            pix[i+2] = newColor.b;\n            pix[i+3] = newColor.a;\n        }\n    }\n    ctx.putImageData(imgd, 0,0);\n    const output = document.createElement('img');\n    output.src = canvas.toDataURL('image/png');\n    return output;\n}\n\n\nexport class ImagePreloader{\n    imageCache: Map<string,HTMLImageElement> = new Map();\n    loadsCompleted:number =0;\n    nLoads:number = 0;\n\n    private loadCallback?:() => void;\n\n    registerCallback(callback:() => void  ){\n        if(this.loadsCompleted === this.nLoads)\n            callback();\n        this.loadCallback = callback;\n    }\n    \n    getImageFromCache(key:string):HTMLImageElement{\n        const image = this.imageCache.get(key);\n        this.nLoads++;\n        if(!image)\n            throw Error(\"unable to load image: \" + key);\n        return image;\n    }\n    \n    preLoadImages(images:PreloadImage[]):void{\n        \n        for(let des of images){\n            const image = new Image();\n            this.nLoads++;\n            image.src = des.src;\n            image.onload = this._createOnLoad(image, des.name);\n        }\n    }\n    private _createOnLoad(image:HTMLImageElement, key:string){\n        return () => {\n            const newImage = makeTransparent(image);\n            newImage.onload = () => {\n                this.imageCache.set(key, newImage);\n                if(++this.loadsCompleted === this.nLoads && this.loadCallback){\n                    this.loadCallback();\n                }\n            }\n        };\n    }\n}\n\n//export var __IMAGEPRELOADER__:ImagePreloader = new ImagePreloader();\n","import Scene from './Scene';\nimport { ImagePreloader } from './ImagePreloader';\nimport { GameInitializer } from './GameInitializer';\n\nexport interface GameEvent{\n    type:string;\n    value:any;\n}\n\nexport interface HandleGameEvent{\n    (event:GameEvent):void;\n}\n\n\nexport class GameController{\n\n    debug: boolean = false;\n    keysPressed: Map<string, boolean> = new Map();\n    imagePreloader:ImagePreloader;\n    canvas?:HTMLCanvasElement;\n    isShutdown:boolean = false;\n    pause:boolean = false;\n\n    private readyCallback?: () => void;\n    private _scene?: Scene;\n    private gameInitializer:GameInitializer;\n    private gameEventListeners:HandleGameEvent[] = [];\n    constructor(gameInitializer:GameInitializer){\n        this.gameInitializer = gameInitializer;\n       \n        this.imagePreloader = new ImagePreloader();\n        this.imagePreloader.preLoadImages(gameInitializer.preloadImages);\n    }\n\n    init(canvas:HTMLCanvasElement, readyCallback: () => void) {\n        this.readyCallback = readyCallback;\n        this.canvas = canvas;  \n        this.imagePreloader.registerCallback( ()=>{  this._handleImagesLoaded()});\n    }\n\n    restart(){\n        const canvas = this.canvas!;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.gameInitializer.init(this);\n        if(!this.scene)\n            throw Error(\"Game Initializer must set scene.\");\n    }\n\n    transition(transitionScene: Scene, newScene: Scene) {\n        const that = this;\n        transitionScene.addBehavior({\n            handleKill() {\n                that.scene = newScene;\n            }\n        });\n        if (this.scene !== transitionScene)\n            this.scene = transitionScene;\n    }\n\n    set scene(scene: Scene) {\n        if (this.debug)\n            console.log(`SetScene: ${scene.constructor.name}`);\n        scene.debug = this.debug;\n        const canvas = this.canvas;\n        scene.size = {width:canvas!.width, height:canvas!.height};\n        this._scene = scene;\n    }\n    get scene(): Scene {\n        return this._scene!;\n    }\n\n    publishEvent(event:GameEvent){\n        this.gameEventListeners.forEach( (handler) => handler(event));\n    }\n\n    subscribeEvent(gameEventListener:HandleGameEvent){\n        this.gameEventListeners.push(gameEventListener);\n    }\n    \n    private _handleImagesLoaded(){\n        const that = this;\n        const canvas = this.canvas!;\n        \n        document.addEventListener('keydown', (event) => {\n            that.keysPressed.set(event.key, true);\n        });\n        document.addEventListener('keyup', (event) => {\n            that.keysPressed.delete(event.key);\n        });\n\n        canvas.addEventListener('mousedown', function (e) {\n            e.preventDefault();\n            if(!that.pause){\n                const rect = canvas.getBoundingClientRect();\n                that.scene.handleMouseClick(e.clientX - rect.left, e.clientY - rect.top)\n            }\n        });\n        document.addEventListener(\"touchmove\", function (e) {\n            e.preventDefault();\n            if(!that.pause){\n                const rect = canvas.getBoundingClientRect();\n                const touch = e.targetTouches[0];\n                that.scene.handleTouchMove(touch.clientX - rect.left, touch.clientY - rect.top)\n            }\n        }, false);\n\n        let lastTime = 0;\n        this.restart();\n        \n        function loop(time: number) {\n            if(that.isShutdown)\n                return;\n            let timeSinceLastAnimation = (!lastTime) ? 0: time - lastTime;\n            lastTime = time;\n            if(timeSinceLastAnimation > 100 || that.pause){\n                //assume animation thread was paused due to moving off window/browser\n                timeSinceLastAnimation = 0;\n            }\n            const ctx = canvas.getContext('2d')!;\n            const size = {width:canvas.width, height: canvas.height};\n            if (size.width !== window.innerWidth || size.height !== window.innerHeight) {\n                // If window size is changed this is called to resize the canvas\n                // It is not called via the resize event as that can fire to often an\n                // debounce makes it feel sluggish so is called from main loop.\n                that.restart();\n            }\n\n            that.keysPressed.forEach((value, key) => that.scene.handleKeyPressed(key));\n\n            ctx.save(); //Freeze redraw\n\n            that.paintBackground(ctx);\n            that.scene.paint({x:0,y:0}, ctx, timeSinceLastAnimation);\n            that.scene.updateModel(timeSinceLastAnimation);\n\n            ctx.restore();//now do redraw\n\n            requestAnimationFrame(loop);\n        }\n        requestAnimationFrame(loop);\n        this.readyCallback!();\n    }\n\n    private paintBackground(ctx: CanvasRenderingContext2D) {\n        if(this.scene.paintBackground)\n            this.scene.paintBackground(ctx);\n        else{\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.scene.size.width, this.scene.size.height);\n        }\n    }\n\n\n    private updateModel(timeSinceLastUpdate: number) {\n        this.scene.updateModel(timeSinceLastUpdate);\n    }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { IconButton, Link } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\ninfoButton: {\n    marginRight: theme.spacing(1),\n  },\n})\n);\n\nexport default function InfoDialog() {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton edge=\"start\" className={classes.infoButton} onClick={handleClickOpen} color=\"primary\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Cicles\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          A simple 2D game library for JavaScript to teach my kids programming.   \n          A demo space game implemented using the library.\n        \n          <br></br>\n          \n          <Link component=\"button\" variant=\"body2\"\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </Link>\n          <br></br><br></br>\n          <Link variant=\"body2\">\n          nickzinn@gmail.com\n          </Link>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            <b>CLOSE</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport './GameComponent.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PauseCircleOutline, PlayCircleOutline, Refresh } from '@material-ui/icons';\nimport { BouncingBall } from './sample/BouncingBall';\nimport { GameController} from './gamelib/GameController';\nimport { CircularProgress, createStyles, Theme, WithStyles, withStyles } from '@material-ui/core';\nimport InfoDialog from './InfoDialog';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  controlButton: {\n  },\n  score: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n}\n\ninterface IState{\n  score:number;\n  imagesLoaded:boolean;\n  pause:boolean;\n}\n\nconst GameComponent = withStyles(styles)( class extends React.Component<Props> {\n \n  canvasRef = React.createRef<HTMLCanvasElement>();\n  gameController:GameController;\n  state:IState;\n\n  constructor(props:Props){\n    super(props);\n    this.gameController= new GameController(new BouncingBall());\n    this.state = { score:0, imagesLoaded:false, pause:false};\n  }\n  componentDidMount() { \n    const canvas = this.canvasRef.current;\n    this.gameController.init(canvas!, () => this.setState({ imagesLoaded:true }));\n    this.gameController.subscribeEvent( (e) => {\n      if(e.type === 'score')\n        this.setState({score:e.value});\n    })\n  }\n  handleRestart(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.restart();\n  }\n  handlePause(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.pause = !this.gameController.pause;\n    this.setState({pause: this.gameController.pause});\n  }\n  componentWillUnmount(){\n    this.gameController.isShutdown = true;\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n    <React.Fragment>\n      <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar>\n          <InfoDialog></InfoDialog>\n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\n            Circles\n          </Typography>\n          <Typography variant=\"h6\" color=\"primary\" className={classes.score}>\n            Score: {this.state.score}\n          </Typography>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handlePause(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.pause ? <PlayCircleOutline /> : <PauseCircleOutline />}\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleRestart(e)} color=\"primary\" aria-label=\"menu\">\n            <Refresh />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      {!this.state.imagesLoaded &&\n                <React.Fragment>\n                    <Typography variant=\"h2\" gutterBottom>\n                    Loading images...\n                    </Typography>\n                    <CircularProgress />\n                    </React.Fragment>        \n                }\n            <canvas id='Canvas' ref={this.canvasRef} />\n    </React.Fragment>\n  );\n  }\n});\n\nexport  default GameComponent;","import React from 'react';\nimport GameComponent from './GameComponent';\n\n\nfunction App() {\n\n  return (\n      <GameComponent></GameComponent>\n  );\n\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Electrolize',\n  },\n    overrides: {\n\n        MuiCssBaseline: {\n          '@global': {\n            body: {\n                width: '100%',\n                height: '100%',\n                margin: '0',\n            }\n          },\n        },\n      },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-electrolize';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}