{"version":3,"sources":["gamelib/util/ImagePreloader.ts","gamelib/util/SoundEffects.ts","gamelib/GameController.ts","gamecontainer/InfoDialog.tsx","gamecontainer/GameComponent.tsx","gamelib/behaviors/DefaultSprite.ts","gamelib/types/Point.ts","gamelib/types/Rectangle.ts","gamelib/types/Vector.ts","gamelib/Scene.ts","gamelib/behaviors/SpriteSheetBehavior.ts","gamelib/sprites/AnimatedSprite.ts","gamelib/sprites/CountdownSprite.ts","gamelib/sprites/TitleSprite.ts","sample/BouncingBall.ts","sample/space/sprites/Explosion.ts","sample/space/sprites/Asteroids.ts","sample/space/sprites/Radar.ts","gamelib/behaviors/ExpirationBehavior.ts","sample/space/sprites/Ship.ts","gamelib/util/BlendedSpriteSheet.ts","sample/space/sprites/Player.ts","sample/space/sprites/Enemy.ts","sample/space/sprites/Missle.ts","sample/space/BackgroundScene.ts","sample/space/MainGameScene.ts","sample/space/BetweenLevelScene.ts","sample/space/OpenningSequence.ts","sample/space/SpaceGame.ts","Home.tsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["ImagePreloader","imageCache","Map","loadsCompleted","nLoads","loadCallback","callback","this","key","spriteSheet","get","Error","image","images","des","Image","src","onload","_createOnLoad","noTransparent","_cache","newImage","canvas","document","createElement","ctx","getContext","height","width","drawImage","top","imgd","getImageData","pix","data","newColor","i","n","length","r","g","b","putImageData","output","toDataURL","makeTransparent","rows","columns","sheet","SpriteSheetImpl","scale","angle","type","set","name","size","srcSize","Math","floor","location","row","column","x","y","translate","rotate","srcX","srcY","setTransform","SoundEffects","effectPreloads","sounds","rate","_mute","effect","Howl","preload","sound","play","console","log","mute","Howler","GameController","gameInitializer","debug","keysPressed","imagePreloader","soundEffects","isShutdown","pause","touchEvent","readyCallback","_scene","gameEventListeners","preloadSounds","preLoadImages","preloadImages","registerCallback","_handleImagesLoaded","window","innerWidth","innerHeight","init","scene","event","value","forEach","handler","gameEventListener","push","that","keyDown","preventDefault","keyUp","delete","mouseDown","e","rect","getBoundingClientRect","clientX","left","clientY","handleMouseClick","mouseMove","mouseUp","undefined","touchMove","touch","targetTouches","touchEnd","touchStart","touchCancel","addEventListener","lastTime","restart","requestAnimationFrame","loop","time","removeEventListener","timeSinceLastAnimation","_updateScene","handleKeyPressed","handleTouch","save","paintBackground","paint","updateModel","isAlive","handleKill","restore","fillStyle","fillRect","useStyles","makeStyles","theme","createStyles","infoButton","InfoDialog","React","useState","open","setOpen","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","IconButton","edge","className","onClick","color","aria-label","Info","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","component","variant","DialogActions","Button","autoFocus","GameComponent","withStyles","root","flexGrow","controlButton","score","marginRight","spacing","title","link","textDecoration","backdrop","zIndex","drawer","props","canvasRef","createRef","gameController","state","imagesLoaded","current","setState","subscribeEvent","stopPropagation","Fragment","AppBar","position","style","background","boxShadow","Toolbar","Typography","to","handlePause","PlayCircleOutline","PauseCircleOutline","handleRestart","Refresh","handleMute","VolumeOff","VolumeUp","Backdrop","CircularProgress","ref","Component","DefaultSprite","speed","acceleration","canCollide","isFixedPosition","zOrder","behaviors","behavior","timeSinceLastUpdate","otherSprite","handleCollision","pointAsInt","point","round","union","rect1","rect2","tx2","ty2","rx2","ry2","tx1","ty1","rx1","ry1","intersects","tw","th","rw","rh","tx","ty","rx","ry","centerPosition","vectorToXYSpeed","vector","cos","sin","addVectors","vector1","vector2","xy","speed1","speed2","atan2","hypot","remove","array","index","indexOf","splice","Scene","controller","modelSize","viewPort","wrapAround","sceneSpeed","sprites","collisionListeners","count","totalTime","filter","s","pointInRect","sprite","_handleWrap","_validateSprite","comparator","low","high","mid","c","insert","a","priorPosition","handleMovement","dx","tempArray","slice","pop","newRect","oldRect","pointSpeed","newPosition","wrapped","sign","_handleCollision","error","removeSprite","collisionSprite","displayedSprites","pos","font","fillText","addSprite","SpriteSheetBehavior","animateOnce","framesPerSecond","age","frame","abs","getAngle","PI","frameCount","timePerFrame","min","AnimatedSprite","spriteSheetBehavior","getSpriteSheetFromCache","addBehavior","CountdownSprite","timeInMillis","fontStyle","fontHeight","toString","displayTime","TitleSprite","subtitle1","subtitle2","w","h","oldFont","shadowText","txt","measure","measureText","hpos","subHeight","createWall","isVertical","random","BouncingBall","launchInstructions","publishEvent","getSpritesAtPoint","sz","rand","max","randPosition","ball","radius","countdown","launchGameOverScene","launchGame","win","newSmallExplosion","newExplosion","newBigExplosion","explosion","generateOpenningSequenceAsteroids","minn","Radar","margin","strokeStyle","strokeRect","x1","y1","topX","topY","ExpirationBehavior","expirationTime","Ship","shipAngle","lastMissleFired","amount","newVector","BlendedSpriteSheet","primarySpriteSheet","secondarySpriteSheet","blend","blendAmount","center","w2","h2","location2","out","baseIM","data2","dataBase","offsetx","offsety","data1","w1","h1","x2","y2","index1","index2","add","Player","shield","shieldAge","blendedSpriteSheet","primary","secondary","viewport","Enemy","xDist","player","yDist","distance","requiredHeading","crossproduct","level","fire","move","Missle","owner","expiration","missleHit","BackgroundScene","stars","getImageFromCache","p","col","MainGameScene","_score","alienCount","area","addSprites","roids","hit","generateGameAsteroids","ship","missle","right","highscore","launchOpenningSequence","launchBetweenLevelsScene","hitPoints","gameOver","animateShield","nextLevel","SpaceGame","appBar","container","marginTop","marginBottom","padding","up","maxWidth","media","githublink","marginLeft","Home","noWrap","Box","overflow","Grid","alignItems","justify","direction","Card","CardActionArea","CardMedia","CardContent","gutterBottom","App","hashType","path","Boolean","hostname","match","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","body","ReactDOM","render","ThemeProvider","CssBaseline","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9e817ed0.chunk.js","sourcesContent":["import { SpriteSheet } from \"./SpriteSheet\";\nimport { Size } from \"../types/Size\";\nimport { Point } from \"../types/Point\";\n\nexport interface PreloadImage{\n    name:string;\n    src:string;\n    rows?:number;\n    columns?:number;\n    scale?:number;\n    angle?:number;\n    type?:string;\n    noTransparent?:boolean;\n}\n\n\nfunction makeTransparent(image: HTMLImageElement):HTMLImageElement  {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n    canvas.height = image.height;\n    canvas.width = image.width;\n    ctx.drawImage(image,0,0);\n    const imgd = ctx.getImageData(0, 0, image.width, image.height);\n    const pix = imgd.data;\n    const newColor = {r:0,g:0,b:0, a:0};\n    let top:number[]\n    for (let i = 0, n = pix.length; i <n; i += 4) {\n        const r = pix[i], g = pix[i+1],b = pix[i+2];\n        if(i===0){\n            top = [r,g,b];\n        }\n        if(r === top![0] && g === top![1] && b === top![2]){ \n            // Change the white to whatever.\n            pix[i] = newColor.r;\n            pix[i+1] = newColor.g;\n            pix[i+2] = newColor.b;\n            pix[i+3] = newColor.a;\n        }\n    }\n    ctx.putImageData(imgd, 0,0);\n    const output = document.createElement('img');\n    output.src = canvas.toDataURL('image/png');\n    return output;\n}\n\n\nexport class ImagePreloader{\n    imageCache: Map<string,SpriteSheetImpl> = new Map();\n    loadsCompleted:number =0;\n    nLoads:number = 0;\n\n    private loadCallback?:() => void;\n\n    registerCallback(callback:() => void  ){\n        if(this.loadsCompleted === this.nLoads)\n            callback();\n        this.loadCallback = callback;\n    }\n    \n    getSpriteSheetFromCache(key:string):SpriteSheet{\n        const spriteSheet = this.imageCache.get(key);\n        if(!spriteSheet)\n            throw Error(\"unable to load image: \" + key);\n        return spriteSheet;\n    }\n    getImageFromCache(key:string):HTMLImageElement{\n        const spriteSheet = this.imageCache.get(key);\n        if(!spriteSheet)\n            throw Error(\"unable to load image: \" + key);\n        return spriteSheet.image;\n    }\n    \n    preLoadImages(images:PreloadImage[]):void{\n        \n        for(let des of images){\n            const image = new Image();\n            this.nLoads++;\n            image.src = des.src;\n            image.onload = this._createOnLoad(image, des);\n        }\n    }\n    private _createOnLoad(image:HTMLImageElement, des:PreloadImage){\n        return () => {\n            if(des.noTransparent){\n                this._cache(image, des)();\n            }else{\n                const newImage = makeTransparent(image);\n                newImage.onload =  this._cache(newImage, des);\n            }\n        };\n    }\n    private _cache(image:HTMLImageElement, des:PreloadImage){\n        return () => {\n            const rows = (des.rows) ? des.rows : 1;\n            const columns = (des.columns) ? des.columns :1;\n            \n            const sheet = new SpriteSheetImpl(image, rows, columns, (des.scale)? des.scale: 1.0,\n             (des.angle) ? des.angle : 0, (des.type) ? des.type: 'animate');\n            this.imageCache.set(des.name, sheet);\n            if(++this.loadsCompleted === this.nLoads && this.loadCallback){\n                this.loadCallback();\n            }\n        }\n    }\n}\n\nclass SpriteSheetImpl implements SpriteSheet{\n    readonly rows:number;\n    readonly columns:number;\n    readonly angle:number;\n    readonly size:Size;\n    readonly type:string;\n\n    readonly image:HTMLImageElement;\n    private readonly srcSize:Size;\n\n    constructor(image:HTMLImageElement, rows:number = 1, columns:number =1, scale:number=1.0, angle:number=0, type:string ='animate') {\n        this.image = image;\n        this.rows = rows;\n        this.columns = columns;\n        this.srcSize = {width:Math.floor(this.image.width/this.columns),\n            height: Math.floor(this.image.height/this.rows)};\n        this.size = {width:Math.floor(this.srcSize.width * scale), height:Math.floor(this.srcSize.height * scale)};\n        this.angle = angle;\n        this.type = type;\n    }\n    paint(location:Point, ctx: CanvasRenderingContext2D, angle:number= 0,row:number=1, column:number=1):void{\n        let x = location.x, y= location.y;\n        if(row<1 || row > this.rows || column < 1 || column > this.columns)\n            throw Error(`Row and columns of sprite need to be in bounds (${row},${column})`);\n        angle += this.angle;\n        if(angle){\n            ctx.translate(x + this.size.width / 2.0, y+ this.size.height / 2.0);\n            ctx.rotate(angle);\n            x = 0 - this.size.width / 2.0;\n            y = 0 - this.size.height / 2.0;\n        }\n        if(this.columns === 1 && this.rows === 1)\n            ctx.drawImage(this.image, 0, 0, this.srcSize.width, this.srcSize.height,\n                x, y, this.size.width, this.size.height);\n        else{\n            const srcX = Math.floor(this.image.width * ((column-1)/this.columns));\n            const srcY = Math.floor(this.image.height * ((row-1)/this.rows));\n            ctx.drawImage(this.image, srcX, srcY, this.srcSize.width, this.srcSize.height,\n                 x, y, this.size.width, this.size.height);\n        }\n        if(angle){\n            ctx.setTransform(1, 0, 0, 1, 0, 0);    \n        }\n    }\n\n    get frameCount():number{\n        return this.rows*this.columns;\n    }\n}\n\n//export var __IMAGEPRELOADER__:ImagePreloader = new ImagePreloader();\n","import { Howl, Howler } from 'howler';\n\n\nexport interface PreloadSoundEffect{\n    name:string;\n    src:string;\n}\n\nexport default class SoundEffects {\n    sounds:Map<string, Howl> = new Map();\n    rate:number = 1.0;\n\n    private _mute:boolean = false;\n\n  constructor (effectPreloads:PreloadSoundEffect[]) {\n    for(let effect of effectPreloads )\n        this.sounds.set(effect.name, new Howl({src:effect.src,preload: true}) );\n    this.rate = 1.0;\n    this._mute = false;\n  }\n\n  play (key:string) {\n    const sound = this.sounds.get(key);\n    if(sound){\n        sound.rate(this.rate);\n        sound.play();\n    }else{\n        console.log(`Sound not found! ${key}`);\n    }\n  }\n\n  get mute ():boolean { return this._mute; }\n\n  set mute (mute:boolean) {\n    Howler.mute(mute);\n    this._mute = mute;\n  }\n}\n","import Scene from './Scene';\nimport { ImagePreloader } from './util/ImagePreloader';\nimport { GameInitializer } from './GameInitializer';\nimport SoundEffects from './util/SoundEffects';\nimport { Point } from './types/Point';\n\nexport interface GameEvent{\n    type:string;\n    value:any;\n}\n\nexport interface HandleGameEvent{\n    (event:GameEvent):void;\n}\n\n\nexport class GameController<T extends GameInitializer<T>>{\n\n    debug: boolean = false;\n    keysPressed: Map<string, boolean> = new Map();\n    imagePreloader:ImagePreloader;\n    soundEffects:SoundEffects;\n    canvas?:HTMLCanvasElement;\n    isShutdown:boolean = false;\n    pause:boolean = false;\n    gameInitializer:T;\n    touchEvent?:Point;\n    \n    private _mute:boolean = false;\n    private readyCallback?: () => void;\n    private _scene?: Scene<T>;\n    \n    private gameEventListeners:HandleGameEvent[] = [];\n    constructor(gameInitializer:T){\n        this.gameInitializer = gameInitializer;\n        this.soundEffects = new SoundEffects(gameInitializer.preloadSounds || []);\n        this.imagePreloader = new ImagePreloader();\n        this.imagePreloader.preLoadImages(gameInitializer.preloadImages);\n    }\n\n    init(canvas:HTMLCanvasElement, readyCallback: () => void) {\n        this.readyCallback = readyCallback;\n        this.canvas = canvas;  \n        this.imagePreloader.registerCallback( ()=>{  this._handleImagesLoaded()});\n    }\n\n    restart(){\n        const canvas = this.canvas!;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.gameInitializer.init(this);\n        if(!this.scene)\n            throw Error(\"Game Initializer must set scene.\");\n    }\n\n    set scene(scene: Scene<T>) {\n        if (this.debug)\n            console.log(`SetScene: ${scene.name}`);\n        scene.debug = this.debug;\n        const canvas = this.canvas;\n        scene.size = {width:canvas!.width, height:canvas!.height};\n        this._scene = scene;\n        this.touchEvent = undefined;\n    }\n    get scene(): Scene<T> {\n        return this._scene!;\n    }\n\n    publishEvent(event:GameEvent){\n        if(this.debug)\n            console.log(`Publish Game Event: {${event.type}, ${event.value}}`);\n        this.gameEventListeners.forEach( (handler) => handler(event));\n    }\n\n    subscribeEvent(gameEventListener:HandleGameEvent){\n        this.gameEventListeners.push(gameEventListener);\n    }\n    set mute(mute:boolean){\n        this._mute = mute;\n        this.soundEffects.mute = mute;\n    }\n    get mute(){\n        return this._mute;\n    }\n    private _handleImagesLoaded(){\n        const that = this;\n        const canvas = this.canvas!;\n        const keyDown = (event:KeyboardEvent) => {event.preventDefault(); this.keysPressed.set(event.key, true);};\n        const keyUp = (event:KeyboardEvent) => {event.preventDefault(); that.keysPressed.delete(event.key);};\n        const mouseDown = (e:MouseEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const x = e.clientX - rect.left, y = e.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`MouseDown Event: (${x},${y})`);\n            if(!that.pause && that.scene){\n                that.scene.handleMouseClick(x,y);\n                this.touchEvent = {x,y};\n            }\n        };\n        const mouseMove = (e:MouseEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            e.preventDefault();\n            if(this.touchEvent)\n                this.touchEvent = {x:e.clientX - rect.left,y:e.clientY - rect.top};\n        };\n        const mouseUp = (e:MouseEvent) => {\n            this.touchEvent = undefined;\n            e.preventDefault();\n        };\n        const touchMove = (e:TouchEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            e.preventDefault();\n            this.touchEvent = {x:touch.clientX - rect.left, y: touch.clientY - rect.top}\n        };\n        const touchEnd = (e:TouchEvent) => {\n            this.touchEvent = undefined;\n            e.preventDefault();\n        };\n        const touchStart = (e:TouchEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            e.preventDefault();\n            this.touchEvent = {x:touch.clientX - rect.left, y: touch.clientY - rect.top};\n            if(!that.pause && that.scene)\n                that.scene.handleMouseClick(this.touchEvent.x,this.touchEvent.y);\n        };\n        const touchCancel = (e:TouchEvent) => {\n            this.touchEvent = undefined;\n            e.preventDefault();\n        };\n\n        window.addEventListener('keydown', keyDown);\n        window.addEventListener('keyup',keyUp);\n        canvas.addEventListener('mousedown', mouseDown);\n        canvas.addEventListener('mousemove', mouseMove);\n        canvas.addEventListener('mouseup', mouseUp);\n        canvas.addEventListener(\"touchmove\", touchMove, false);\n        canvas.addEventListener(\"touchend\", touchEnd, false);\n        canvas.addEventListener(\"touchcancel\", touchCancel, false);\n        canvas.addEventListener(\"touchstart\", touchStart, false);\n\n        let lastTime = 0;\n        this.restart();\n        \n        function loop(time: number) {\n            if(that.isShutdown){\n                if(that.debug)\n                    console.log(\"shutting down game controller.\");\n                window.removeEventListener('keydown', keyDown);\n                window.removeEventListener('keyup',keyUp);\n                canvas.removeEventListener('mousedown', mouseDown);\n                canvas.removeEventListener('mousemove', mouseMove);\n                canvas.removeEventListener('mouseup', mouseUp);\n                canvas.removeEventListener(\"touchmove\", touchMove, false);\n                canvas.removeEventListener(\"touchend\", touchEnd, false);\n                canvas.removeEventListener(\"touchcancel\", touchCancel, false);\n                canvas.removeEventListener(\"touchstart\", touchStart, false);\n                return;\n            }\n            let timeSinceLastAnimation = (!lastTime) ? 0: time - lastTime;\n            lastTime = time;\n            if(timeSinceLastAnimation > 100 || that.pause){\n                //assume animation thread was paused due to moving off window/browser\n                timeSinceLastAnimation = 0;\n            }\n            const ctx = canvas.getContext('2d')!;\n            const size = {width:canvas.width, height: canvas.height};\n            if (size.width !== window.innerWidth || size.height !== window.innerHeight) {\n                // If window size is changed this is called to resize the canvas\n                // It is not called via the resize event as that can fire to often an\n                // debounce makes it feel sluggish so is called from main loop.\n                that.restart();\n            }\n\n            that._updateScene(ctx, timeSinceLastAnimation);\n\n            requestAnimationFrame(loop);\n        }\n        requestAnimationFrame(loop);\n        this.readyCallback!();\n    }\n\n    private _updateScene(ctx:CanvasRenderingContext2D,timeSinceLastAnimation:number){\n        this.keysPressed.forEach((value, key) => {\n            if(this.debug){\n                console.log(`KeyPressed Event: ${key}`);\n            }\n            this.scene.handleKeyPressed(key);\n        });\n        if(this.touchEvent){\n            this.scene.handleTouch(this.touchEvent.x,this.touchEvent.y);\n        }\n\n        ctx.save(); //Freeze redraw\n\n        this.paintBackground(ctx);\n        this.scene.paint({x:0,y:0}, ctx, timeSinceLastAnimation);\n        this.scene.updateModel(timeSinceLastAnimation);\n\n        if(!this.scene.isAlive){\n            console.log(`Scene Killed: ${this.scene.name}`);\n            this.scene.handleKill();\n            if(!this.scene.isAlive)\n                throw Error(`Scene is still dead.  Can't have a dead scene (${this.scene.name})`);\n        }\n\n        ctx.restore();//now do redraw\n    }\n\n    private paintBackground(ctx: CanvasRenderingContext2D) {\n        if(this.scene.paintBackground)\n            this.scene.paintBackground(ctx);\n        else{\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.scene.size.width, this.scene.size.height);\n        }\n    }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { IconButton, Link } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\ninfoButton: {\n\n  },\n})\n);\n\nexport default function InfoDialog() {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton edge=\"start\" className={classes.infoButton} onClick={handleClickOpen} color=\"primary\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Cicles\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          A simple 2D game library for JavaScript to teach my kids programming.   \n          A demo space game implemented using the library.\n        \n          <br></br>\n          \n          <Link component=\"button\" variant=\"body2\"\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </Link>\n          <br></br><br></br>\n          <Link variant=\"body2\">\n          nickzinn@gmail.com\n          </Link>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            <b>CLOSE</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './GameComponent.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PauseCircleOutline, PlayCircleOutline, Refresh, VolumeUp, VolumeOff } from '@material-ui/icons';\nimport { GameController} from '../gamelib/GameController';\nimport { CircularProgress, createStyles, Theme, WithStyles, withStyles, Backdrop } from '@material-ui/core';\nimport InfoDialog from './InfoDialog';\nimport { GameInitializer } from '../gamelib/GameInitializer';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  controlButton: {\n  },\n  score: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link:{\n    textDecoration: 'none'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\ninterface Props<T extends GameInitializer<T>> extends WithStyles<typeof styles> {\n  gameInitializer:T;\n}\n\ninterface IState{\n  score:number;\n  imagesLoaded:boolean;\n  pause:boolean;\n  mute:boolean;\n}\n\nconst GameComponent = withStyles(styles)( class <T extends GameInitializer<T>> extends React.Component<Props<T>> {\n \n  canvasRef = React.createRef<HTMLCanvasElement>();\n  gameController:GameController<T>;\n  state:IState;\n\n  constructor(props:Props<T>){\n    super(props);\n    this.gameController= new GameController<T>(props.gameInitializer);\n    this.gameController.debug = true;\n    this.state = { score:0, imagesLoaded:false, pause:false, mute:false};\n  }\n  componentDidMount() { \n    const canvas = this.canvasRef.current;\n    this.gameController.init(canvas!, () => this.setState({ imagesLoaded:true }));\n    this.gameController.subscribeEvent( (e) => {\n      if(e.type === 'score')\n        this.setState({score:e.value});\n    })\n  }\n  handleRestart(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.restart();\n  }\n  handlePause(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.pause = !this.gameController.pause;\n    this.setState({pause: this.gameController.pause});\n  }\n  handleMute(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.mute = !this.gameController.mute;\n    this.setState({mute: this.gameController.mute});  \n  }\n  componentWillUnmount(){\n    this.gameController.isShutdown = true;\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n    <React.Fragment>\n      <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar variant=\"dense\">\n          <InfoDialog></InfoDialog>\n          <Typography variant=\"h6\" color=\"primary\" >\n          <Link to=\"/\" className={classes.link}> \n          <Typography variant=\"h6\" color=\"primary\" >Circles</Typography></Link>\n          </Typography>\n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\n            &nbsp;\n          </Typography>\n          <Typography variant=\"body1\" color=\"primary\" className={classes.score}>\n            Score: {this.state.score}\n          </Typography>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handlePause(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.pause ? <PlayCircleOutline /> : <PauseCircleOutline />}\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleRestart(e)} color=\"primary\" aria-label=\"menu\">\n            <Refresh />\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleMute(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.mute ? <VolumeOff /> : <VolumeUp />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Backdrop className={classes.backdrop} open={!this.state.imagesLoaded } >\n          <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <canvas id='Canvas' ref={this.canvasRef} />\n    </React.Fragment>\n  );\n  }\n});\n\nexport  default GameComponent;","import { Point } from \"../types/Point\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Size } from \"../types/Size\";\nimport { Behavior } from \"../types/Behavior\";\n\nexport class DefaultSprite implements Sprite{\n    name:string;\n    position:Point;\n    size:Size;\n    isAlive:boolean = true;\n\t\n    speed:number = 0.0;\n    angle:number = 0.0;\n    acceleration:number = 0.0;\n\tcanCollide:boolean = false;\n    isFixedPosition:boolean = false;\n    zOrder:number = 0;\n\t\n\tprivate behaviors:Behavior[] = [];\n\t\n\tconstructor(name:string,position:Point={x:0.0,y:0.0}, size:Size={width:0.0, height:0.0}){\n        this.name = name;\n        this.position = position;\n        this.size = size;\n\t}\n\t\n\taddBehavior(behavior:Behavior){\n        if(behavior.init) behavior.init(this);\n        this.behaviors.push(behavior);\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n        this.behaviors.forEach( (b) =>  b.paint?.(this, location, ctx, timeSinceLastAnimation));\n    }\n    updateModel(timeSinceLastUpdate: number) {\n        this.behaviors.forEach( (b) =>  b.updateModel?.(this, timeSinceLastUpdate));\n    }\n    \n    handleKill():void{\n        this.behaviors.forEach( (b) =>  b.handleKill?.(this));\n    }\n    \n    handleCollision?(otherSprite:Sprite):void{\n        this.behaviors.forEach( (b) =>  b.handleCollision?.(this, otherSprite));\n    }\n}","export interface Point{\n    x:number;\n    y:number;\n}\n\nexport function pointAsInt(point:Point): Point{\n    return {x:Math.round(point.x), y:Math.round(point.y)};\n}\n\nexport function calcDistance(a:Point, b:Point):number{\n        const xDist = Math.abs(a.x - b.x);\n        const yDist = Math.abs(a.y - b.y);\n        return Math.hypot(xDist, yDist);\n}","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Rectangle{\n    position:Point;\n    size:Size;\n\n}\n\nexport function union(rect1:Rectangle, rect2:Rectangle):Rectangle{\n    let tx2 = rect1.size.width;\n    let ty2 = rect1.size.height;\n    if ((tx2 | ty2) < 0) {\n        // This rectangle has negative dimensions...\n        // If r has non-negative dimensions then it is the answer.\n        // If r is non-existant (has a negative dimension), then both\n        // are non-existant and we can return any non-existant rectangle\n        // as an answer.  Thus, returning r meets that criterion.\n        // Either way, r is our answer.\n        return rect2;\n    }\n    let rx2 = rect2.size.width;\n    let ry2 = rect2.size.height;\n    if ((rx2 | ry2) < 0) {\n        return rect1;\n    }\n    let tx1 = rect1.position.x;\n    let ty1 = rect1.position.y;\n    tx2 += tx1;\n    ty2 += ty1;\n    const rx1 = rect2.position.x;\n    const ry1 = rect2.position.y;\n    rx2 += rx1;\n    ry2 += ry1;\n    if (tx1 > rx1) tx1 = rx1;\n    if (ty1 > ry1) ty1 = ry1;\n    if (tx2 < rx2) tx2 = rx2;\n    if (ty2 < ry2) ty2 = ry2;\n    tx2 -= tx1;\n    ty2 -= ty1;\n    return { position:{x:tx1, y:ty1},size:{width:tx2, height:ty2}};\n\n}\n\nexport function intersects(rect1:Rectangle, rect2:Rectangle):boolean{\n\n    let tw = rect1.size.width;\n    let th = rect1.size.height;\n    let rw = rect2.size.width;\n    let rh = rect2.size.height;\n    if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\n        return false;\n    }\n    const tx = rect1.position.x;\n    const ty = rect1.position.y;\n    const rx = rect2.position.x;\n    const ry = rect2.position.y;\n    rw += rx;\n    rh += ry;\n    tw += tx;\n    th += ty;\n    //      overflow || intersect\n    return ((rw < rx || rw > tx) &&\n            (rh < ry || rh > ty) &&\n            (tw < tx || tw > rx) &&\n            (th < ty || th > ry));\n}\n\nexport function pointInRect(point:Point, rect:Rectangle):boolean{\n    return point.x >= rect.position.x && point.x < rect.position.x + rect.size.width\n        && point.y >= rect.position.y && point.y < rect.position.y + rect.size.height;\n}\n\n\nexport function centerPosition(rect:Rectangle): Point{\n    return {x: rect.position.x + rect.size.width/2, y: rect.position.y + rect.size.height/2};\n}\n\nexport function centerPositionAsInt(rect:Rectangle): Point{\n    return {x: Math.round(rect.position.x + rect.size.width/2), y: Math.round(rect.position.y + rect.size.height/2)};\n}","import { Point } from \"./Point\";\n\nexport interface Vector{\n    speed:number;\n    angle:number;\n}\n\nexport function vectorToXYSpeed(vector:Vector): Point{\n    if(vector.speed !== undefined && vector.angle !== undefined)\n        return {x: vector.speed * Math.cos(vector.angle), y: vector.speed * Math.sin(vector.angle)};\n    else return {x:0,y:0};\n}\n\nexport function xySpeedToVector(xy:Point):Vector{\n    return {angle:Math.atan2(xy.y, xy.x), speed:Math.hypot(xy.x, xy.y)};\n}\n\nexport function addVectors(vector1:Vector, vector2:Vector): Vector{\n    const speed1 = vectorToXYSpeed(vector1);\n    const speed2 = vectorToXYSpeed(vector2);\n    return xySpeedToVector({x: speed1.x + speed2.x, y: speed1.y + speed2.y});\n}","import { GameController } from \"./GameController\";\nimport { DefaultSprite } from \"./behaviors/DefaultSprite\";\nimport { Point, pointAsInt } from \"./types/Point\";\nimport { Sprite } from \"./types/Sprite\";\nimport { Size } from \"./types/Size\";\nimport { union, Rectangle, intersects, pointInRect } from \"./types/Rectangle\";\nimport { GameInitializer } from \"./GameInitializer\";\nimport { vectorToXYSpeed } from \"./types/Vector\";\n\nfunction insert<T>(array:T[], value:T, comparator: (a:T, b:T)=>number){\n\tlet low =0;\n\tif(array.length>0){\n\t\tlet high=array.length;\n\t\twhile(low < high){\n\t\t\tlet mid = Math.floor( (low+high)/2);\n\t\t\tconst c = comparator(array[mid], value);\n\t\t\tif(c <0){\n\t\t\t\tlow = mid+1;\n\t\t\t}else if( c> 0){\n\t\t\t\thigh = mid;\n\t\t\t}else{\n\t\t\t\tlow = mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tarray.splice(low, 0, value);\n}\nfunction remove(array:any[], key:any){\n    const index = array.indexOf(key, 0);\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n}\n\nexport default class Scene<T extends GameInitializer<T>> extends DefaultSprite{\n\n    viewPort:Point = {x:0, y:0};\n    controller:GameController<T>;\n    debug: boolean = false;\n\twrapAround:boolean = false;\n\tsceneSpeed:number = 1.0;\n\tmodelSize:Size;\n\tsprites:Sprite[] = [];\n\n\tprivate collisionListeners:Sprite[] = [];\n\t\n    constructor(name:string, controller:GameController<T>, modelSize:Size={width:0.0, height:0.0}){\n        super(name);\n        this.controller = controller;\n        this.modelSize = modelSize;\n    }\n    handleKeyPressed(key: string): void {\n    }\n\n    handleMouseClick(x:number, y:number){\n    }\n\thandleTouch(x:number, y:number){\n    }\n\n\tgetSpritesAtPoint(point:Point):Sprite[]{\n\t\treturn this.sprites.filter( (s) => pointInRect(point, s) );\n\t}\n\t\n\taddSprite(sprite:Sprite) {\n\t\tthis._handleWrap(sprite.position,sprite.size);\n\t\tthis._validateSprite(sprite);\n\t\tif(!sprite.zOrder)\n\t\t\tsprite.zOrder = 0;\n\t\tinsert(this.sprites, sprite, (a,b) => a.zOrder! - b.zOrder!);\n\t\tsprite.priorPosition = sprite.position;\n\t\tif (sprite.handleCollision)\n\t\t\tthis.collisionListeners.push(sprite);\n\t}\n\n\tremoveSprite(sprite:Sprite) {\n\t\tsprite.handleKill?.();\n        if(this.debug)\n            console.log(`Remove sprite(${sprite.name}) (${sprite.position.x}, ${sprite.position.y})`);\n        remove(this.sprites, sprite);\n        remove(this.collisionListeners, sprite);\n\t}\n\n\tpublic resetGame() {\n\t    this.sprites = [];\n\t\tthis.collisionListeners = [];\n\t}\n\n    updateModel(timeSinceLastUpdate: number) {\n\t\tsuper.updateModel(timeSinceLastUpdate);\n        \n        // handle movements and check collision\n\t\tthis.handleMovement(timeSinceLastUpdate);\n\t}\n\n    handleMovement(timeSinceLastUpdate: number) {\n        const dx = timeSinceLastUpdate/1000.0;\n        const tempArray:Sprite[] = this.sprites.slice();\n\t\twhile (tempArray.length) {\n\t\t\tconst sprite:Sprite = tempArray.pop()!;\n\t\t\tif(!sprite.isAlive){\n\t\t\t\t// remove any dead sprites.\n\t\t\t\tthis.removeSprite(sprite);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet newRect;\n\t\t\tif (!sprite.isFixedPosition) {\n\t\t\t\tconst oldRect = {position:pointAsInt(sprite.position), size:sprite.size};\n\t\t\t\tconst pointSpeed = vectorToXYSpeed(sprite);\n\t\t\t\tlet newPosition = {x:sprite.position.x + pointSpeed.x * dx * this.sceneSpeed,\n\t\t\t\t\t\t\t\t   y:sprite.position.y + pointSpeed.y * dx * this.sceneSpeed};\n\t\t\t\tlet wrapped = this._handleWrap(newPosition, sprite.size);\n\t\t\t\tsprite.priorPosition = oldRect.position;\n\t\t\t\tsprite.position = newPosition;\n\t\t\t\t// check collisions\n\t\t\t\tnewRect = {position: pointAsInt(sprite.position), size: sprite.size};\n\t\t\t\tif (!wrapped)\n\t\t\t\t\tnewRect = union(oldRect, newRect);\n\t\t\t\t\n\t\t\t\tif (sprite.acceleration) {\n\t\t\t\t\tif (Math.sign(sprite.acceleration\n\t\t\t\t\t\t\t+ sprite.speed) !== Math.sign(sprite\n\t\t\t\t\t\t\t.speed))\n\t\t\t\t\t\tsprite.speed = 0;\n\t\t\t\t\telse\n\t\t\t\t\t\tsprite.speed = sprite.speed + sprite.acceleration;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(sprite.canCollide){\n\t\t\t\tif(!newRect)\n\t\t\t\t\tnewRect = sprite;\n\t\t\t\tthis._handleCollision(newRect, sprite);\n\t\t\t}\n\t\t\tif(sprite.updateModel)\n\t\t\t\tsprite.updateModel(timeSinceLastUpdate);\n\t\t\ttry {\n\t\t\t\tthis._validateSprite(sprite);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(`Sprite position not valid.  Killing spite (${sprite.name}). ${error}`);\n\t\t\t\tsprite.isAlive=false;\n\t\t\t}\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthis.removeSprite(sprite);\n\t\t}\n\t}\n\n\tprivate _handleCollision( newRect:Rectangle, sprite:Sprite) {\n\t\t//need to make this more sophisticated so it doesn't break out after one collision.\n\t\tlet collisionSprite;\n\t\tif(sprite.handleCollision){\n\t\t\tfor(let i =0; i< this.sprites.length;i++){\n\t\t\t\tconst otherSprite = this.sprites[i];\n\t\t\t\tif (sprite !== otherSprite && otherSprite.canCollide) {\n\t\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\t\tsprite.handleCollision(otherSprite);\n\t\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!collisionSprite)\n\t\t\tcollisionSprite = sprite;\n\t\t\n\t\tfor(let i =0; i< this.collisionListeners.length;i++){\n\t\t\tconst otherSprite = this.collisionListeners[i];\n\t\t\tif (sprite !== otherSprite) {\n\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\totherSprite.handleCollision!(sprite);\n\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!collisionSprite.isAlive) {\n\t\t\tthis.removeSprite(collisionSprite);\n\t\t}\n\t}\n\tcount =0;\n\ttotalTime =0;\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void {\n        //enable you to embed a scene as a sprite in another scene\n        location = {x: location.x + this.viewPort.x, y:location.y+this.viewPort.y}; \n\t\tsuper.paint(location, ctx, timeSinceLastAnimation);\n\t\tlet displayedSprites =0\n\t\tfor(let sprite of this.sprites){\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthrow Error(\"No Dead Sprites Should Make it to render step.\\n\" + sprite);\n\t\t\tlet pos = pointAsInt(sprite.position);\n\t\t\t\tif(!sprite.isFixedPosition){\n\t\t\t\t\tpos = {x: pos.x - location.x, y: pos.y - location.y}\n\t\t\t\t}\n\t\t\tif(pos.x > this.size.width || pos.y > this.size.height \n\t\t\t\t|| (sprite.size.width + pos.x < 0)\n\t\t\t\t|| (sprite.size.height + pos.y < 0)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsprite.paint(pos, ctx, timeSinceLastAnimation);\n\t\t\tdisplayedSprites++;\n\t\t}\n\t\tif(this.debug){\n\t\t\tif(++this.count % 300 === 0){\n\t\t\t\tthis.totalTime  = timeSinceLastAnimation;\n\t\t\t\tthis.count =1;\n\t\t\t}else{\n\t\t\t\tthis.totalTime +=timeSinceLastAnimation;\n\t\t\t}\n\t\t\tctx.fillStyle = \"red\"\n\t\t\tctx.font =\"8px Electrolize\";\n\t\t\tctx.fillText(`FPS: ${Math.round(1000 / (this.totalTime/ ++this.count))} Alive Sprites: ${this.sprites.length} On Screen Sprites: ${displayedSprites}` , 10, this.size.height -10);\n\t\t}\n\t}\n\n\taddSprites(sprites:Sprite[] ) {\n\t\tif(!sprites || !sprites.length)\n\t\t\tthrow Error(`Attempting to add empty array of sprites in scene (${this.name})`);\n\t\tif(this.debug){\n\t\t\tconsole.log(`Bulk adding ${sprites.length} of type (${sprites[0].name})`)\n\t\t}\n\t\tsprites.forEach( (s) => this.addSprite(s) )\n\t}\n\n\tpaintBackground?(ctx: CanvasRenderingContext2D):void;\n\t\n\t_validateSprite(sprite:Sprite){\n\t\tif(sprite.position.x < 0 || sprite.position.y < 0 )\n\t\t\tthrow Error(`Sprite position less 0 (${sprite.position.x}, ${sprite.position.y})`);\n\t\tif(this.modelSize.width !==0){\n\t\t\tif(sprite.position.x >= this.modelSize.width || sprite.position.y >= this.modelSize.height)\n\t\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y}) > model(${this.modelSize.width},${this.modelSize.height})`);\n\t\t}else if(sprite.position.x >= this.size.width || sprite.position.y >= this.size.height) {\n\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y})  > screen(${this.size.width},${this.size.height}) `);\n\t\t}\n\t\tif(sprite.size.width <=0 || sprite.size.height <= 0)\n\t\t\tthrow Error(`Sprite size too small (${sprite.size.width}, ${sprite.size.height})`);\n\t\tif( (sprite.speed !== undefined &&  sprite.angle === undefined) \n\t\t\t|| (sprite.speed === undefined &&  sprite.angle !== undefined))\n\t\t\tthrow Error(`Either speed(${sprite.speed}) and angle(${sprite.angle}) are both defined or both undefined.`)\n\t}\n\t_handleWrap(position:Point, size:Size):boolean{\n\t\t// handle wrap around\n\t\tlet wrapped = false;\n\t\tif (this.wrapAround) {\n\t\t\tlet width = this.size.width;\n\t\t\tlet height = this.size.height;\n\t\t\tif(this.modelSize.width !==0){\n\t\t\t\twidth= this.modelSize.width;\n\t\t\t\theight = this.modelSize.height;\n\t\t\t}\n\t\t\tif (position.x < 0) {\n\t\t\t\tposition.x = width - size.width;\n\t\t\t\twrapped = true;\n\t\t\t} else if (position.x + size.width > width) {\n\t\t\t\tposition.x = 0;\n\t\t\t\twrapped = true;\n\t\t\t}\n\t\t\tif (position.y < 0) {\n\t\t\t\tposition.y = height - size.height;\n\t\t\t\twrapped = true;\n\t\t\t} else if (position.y + size.height > height) {\n\t\t\t\tposition.y = 0;\n\t\t\t\twrapped = true;\n\t\t\t}\n\t\t}\t\n\t\treturn wrapped;\n\t}\n\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { SpriteSheet } from \"../util/SpriteSheet\";\n\nexport class SpriteSheetBehavior implements Behavior{\n    spriteSheet:SpriteSheet;\n    framesPerSecond:number = 25;\n\tage:number = 0;\n    animateOnce:boolean;\n\trotate:boolean = false;\n\tconstructor(spriteSheet:SpriteSheet,  animateOnce:boolean = false) {\n\t\tthis.spriteSheet = spriteSheet;\n\t\tthis.animateOnce = animateOnce;\n\t}\n    init(sprite:Sprite){\n\t\tsprite.size = this.spriteSheet.size;\n\t}\n    paint(sprite:Sprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n\t\tlet frame;\n\t\tif(this.spriteSheet.type==='rotate'){\n\t\t\tframe = Math.floor( ((Math.abs(this.getAngle(sprite)) % (Math.PI*2))/(Math.PI*2)) * this.spriteSheet.frameCount*2);\n\t\t\tif(frame>=this.spriteSheet.frameCount){\n\t\t\t\tframe = (this.spriteSheet.frameCount*2) - (frame) -1;\n\t\t\t}\n        }else if(this.framesPerSecond && this.spriteSheet.frameCount !== 0){\n\t\t\tconst timePerFrame = 1.0 / this.framesPerSecond;\n\t\t\tframe = Math.floor( (this.age/timePerFrame ) % this.spriteSheet.frameCount);\n\t\t}else{\n\t\t\tframe =0;\n\t\t}\n\t\tframe = Math.min(frame, this.spriteSheet.frameCount-1);\n\t\tconst column = Math.floor(frame % this.spriteSheet.columns) + 1;\n\t\tconst row = Math.floor( frame/this.spriteSheet.columns ) + 1 ;\n\t\tthis.spriteSheet.paint(location,ctx,this.getAngle(sprite),row,column);\t\t\n\n\t}\n\tupdateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n\t\tconst dx = timeSinceLastUpdate/1000;\n\t\tthis.age += dx;\n\t\tif(this.animateOnce){\n\t\t\tif (this.age > this.spriteSheet.frameCount / this.framesPerSecond) {\n\t\t\t\t// System.out.println(\"FPS:\" + getFramesPerSecond()\n\t\t\t\t// \t\t+ \"\\tFC:\" + getFrameCount() + \"\\tage:\" + age);\n\t\t\t\tsprite.isAlive = false;\n\t\t\t}\n\t\t}\n\t}\n\tgetAngle(sprite:Sprite){\n\t\treturn (sprite.angle) ? sprite.angle : 0;\n\t}\n}\n","import { Point } from \"../types/Point\";\nimport { SpriteSheetBehavior } from \"../behaviors/SpriteSheetBehavior\";\nimport { DefaultSprite } from \"../behaviors/DefaultSprite\";\nimport Scene from \"../Scene\";\nimport { GameInitializer } from \"../GameInitializer\";\n\n\nexport class AnimatedSprite<T extends GameInitializer<T>, S extends Scene<T>> extends DefaultSprite{\n    scene:S;\n    spriteSheetBehavior:SpriteSheetBehavior;\n\n    constructor(scene:S, name:string,position:Point ={x:0,y:0},animateOnce:boolean =false){\n        super(name, position);\n        this.scene = scene;\n        const spriteSheet = scene.controller.imagePreloader.getSpriteSheetFromCache(name)\n        this.spriteSheetBehavior =   new SpriteSheetBehavior(spriteSheet, animateOnce);\n        this.addBehavior(this.spriteSheetBehavior);\n    }\n    set animateOnce(animateOnce:boolean){\n        this.spriteSheetBehavior.animateOnce = animateOnce;\n    }\n    get animateOnce(){\n        return this.spriteSheetBehavior.animateOnce;\n    }\n}","\nimport { DefaultSprite } from \"../behaviors/DefaultSprite\";\nimport { Point } from \"../types/Point\";\n\nexport class CountdownSprite extends DefaultSprite{\n    timeInMillis:number;\n    fontStyle:string;\n    age = 0;\n    color:string;\n    fontHeight:number;\n\n    constructor(timeInMillis:number, color:string=\"red\", fontStyle = \"100px Electrolize\", fontHeight = 80){\n        super(\"CountdownTimer\");\n        this.timeInMillis = timeInMillis;\n        this.fontStyle = fontStyle;\n        this.size = {width: fontHeight*Math.floor(timeInMillis/2500).toString().length, height:fontHeight};\n        this.color = color;\n        this.fontHeight = fontHeight;\n\t}\n\n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n        // ctx.fillStyle = \"blue\";\n        // ctx.fillRect(location.x, location.y, this.size.width, this.size.height);\n\n        const displayTime = Math.floor((this.timeInMillis - this.age)/1000).toString();\n        ctx.fillStyle = this.color;\n        ctx.font = this.fontStyle;\n        \n        ctx.fillText(displayTime, location.x, location.y+this.size.height);\n        \n        \n        \n    }\n\n    updateModel(timeSinceLastUpdate: number):void{\n        this.age += timeSinceLastUpdate;\n        if(this.age >this.timeInMillis )\n            this.isAlive = false;\n    }\n}\n\n","import { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { Size } from \"../types/Size\";\n\nexport class TitleSprite implements Sprite{\n    name: string = 'Title';\n    position: Point = {x:0,y:0};\n    size: Size = {width:1, height:1};\n    speed =0;\n    angle =0;\n    isAlive: boolean = true;\n    zOrder: number = 100;\n    canCollide: boolean = false;\n    isFixedPosition = true;\n    title:string;\n    subtitle1:string;\n    subtitle2:string;\n\n    constructor(title:string, subtitle1:string, subtitle2:string){\n        this.title = title;\n        this.subtitle1 = subtitle1;\n        this.subtitle2 = subtitle2;\n    }\n\n    paint(location: Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void {\n        //ctx.measureText\n        const w = ctx.canvas.width,  h = ctx.canvas.height;\n        const oldFont = ctx.font;\n        function shadowText(txt:string, x:number,y:number, i:number){\n            ctx.fillStyle = \"grey\";\n            ctx.fillText(txt, x+i, y+i);\n            ctx.fillStyle = \"white\";\n            ctx.fillText(txt, x,y);\n        }\n\n        ctx.font = (w>400) ? (w>500) ? (w>800) ? (w>1000) ? \"110px Electrolize\": \"80px Electrolize\": \"60px Electrolize\" : \"40px Electrolize\": \"30px Electrolize\";\n        let measure = ctx.measureText(this.title);\n        let hpos = h/3;\n        shadowText(this.title, (w-measure.width)/2, hpos, 3);\n        const subHeight = (w>500) ? (w>800) ? 30: 24 : 18;\n        ctx.font = `${subHeight}px Electrolize`;\n        measure = ctx.measureText(this.subtitle1);\n        hpos += subHeight*2;\n        shadowText(this.subtitle1, (w-measure.width)/2,hpos, 1);\n\n        measure = ctx.measureText(this.subtitle2);\n        hpos += subHeight*2;\n        shadowText(this.subtitle2, (w-measure.width)/2,hpos,1);\n\n        ctx.font = oldFont;\n    }\n\n}","import { GameController } from \"../gamelib/GameController\";\nimport { Point } from \"../gamelib/types/Point\";\nimport Scene from \"../gamelib/Scene\";\nimport { Sprite } from \"../gamelib/types/Sprite\";\nimport { Size } from \"../gamelib/types/Size\";\nimport { GameInitializer } from \"../gamelib/GameInitializer\";\nimport { AnimatedSprite } from \"../gamelib/sprites/AnimatedSprite\";\nimport { vectorToXYSpeed } from \"../gamelib/types/Vector\";\nimport { CountdownSprite } from \"../gamelib/sprites/CountdownSprite\";\nimport { TitleSprite } from \"../gamelib/sprites/TitleSprite\";\n\nfunction createWall(position:Point, size:Size, isVertical:boolean):Sprite{\n    const wall = {\n        name:'wall',\n        position,\n        size,\n        isAlive:true,\n        canCollide:false,\n        speed:0,\n        angle:0,\n        paint: function(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n            ctx.fillStyle =  \"\trgb(50,50,50)\";\n            ctx.fillRect(position.x, position.y, size.width, size.height);\n        },\n        handleCollision(otherSprite:Sprite):void{\n            const speed = vectorToXYSpeed(otherSprite);\n            if(isVertical){\n                if(speed.x>0)\n                   otherSprite.position.x = this.position.x - otherSprite.size.width;\n                else\n                    otherSprite.position.x = this.position.x + this.size.width;\n                otherSprite.position.y = otherSprite.priorPosition!.y;\n                otherSprite.angle =  Math.PI - otherSprite.angle + (Math.random() - .5 )*.2;\n            }else{\n                if(speed.y>0)\n                    otherSprite.position.y = this.position.y - otherSprite.size.height;\n                else\n                    otherSprite.position.y = this.position.y + this.size.height;\n                otherSprite.position.x = otherSprite.priorPosition!.x;\n                otherSprite.angle =  -1.0 * otherSprite.angle + (Math.random() - .5 )*.2;\n            }\n        }\n    };\n    return wall;\n}\n\nexport class BouncingBall implements GameInitializer<BouncingBall>{\n\n    preloadImages = [{name:'ball', src:'/circles/assets/images/ball.png', rows:4, columns:8}];\n    preloadSounds = [{name:'boop', src:'/circles/assets/sounds/boop.wav'}\n                    ,{name:'error', src:'/circles/assets/sounds/error.wav'}];\n\n \tinit(controller:GameController<BouncingBall>):void {\n        this.launchInstructions(controller);\n    }\n    launchGame(controller:GameController<BouncingBall>){\n\t\tconst scene = new Scene('bouncing ball',controller);\n        controller.scene = scene;\n        let score =0;\n        controller.publishEvent({type:'score', value:(score)});\n        scene.handleMouseClick = function(x:number, y:number){\n            const sprites = scene.getSpritesAtPoint({x,y});\n            if(sprites.length){\n                sprites.filter( (s) => s.canCollide ).forEach( (s) => {\n                    if(s.name === 'CountdownTimer')\n                        return;\n                    scene.removeSprite(s);\n                    controller.publishEvent({type:'score', value:(score++)});\n                    controller.soundEffects.play('boop');\n                } );\n            }else{ \n                controller.publishEvent({type:'score', value:(score--)});\n                controller.soundEffects.play('error');\n            }\n        }\n        scene.wrapAround = false;\n        scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n                ctx.fillStyle = 'black';\n                ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n        }\n\n        const sz = scene.size;\n        const wallSize = 4;\n        //create walls\n        scene.addSprite( createWall({x:0,y:0},{width:sz.width-wallSize,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:sz.height-wallSize},{width:sz.width,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n        scene.addSprite( createWall({x:sz.width-wallSize,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n\n        const rand =  (min:number, max:number) => Math.random() * (max-min) + min;\n        const randPosition = (r:number) => ({x: rand(sz.width-(r+wallSize)*2, r+wallSize), y: rand(sz.height-(r+wallSize)*2, r+wallSize)});\n        for(let x=0; x<30;x++){\n            const ball = new AnimatedSprite(scene, 'ball');\n            const radius = ball.size.width/2;\n            ball.position = randPosition(radius);\n            ball.isAlive = true;\n            ball.speed = Math.random() * 250+100;\n            ball.angle = Math.random() * Math.PI *2;\n            ball.zOrder = Math.random() * 10 -5;\n            ball.canCollide = true;\n            ball.size = {width: ball.size.width -2, height: ball.size.height -2}\n            scene.addSprite(ball);\t\n        }\n        const countdown = new CountdownSprite(15000);\n        countdown.position = randPosition( countdown.size.width );\n        countdown.speed = 500;\n        countdown.angle = Math.random() * Math.PI *2;\n        countdown.zOrder = 1;\n        countdown.canCollide = true;\n        countdown.handleKill = () =>  this.launchGameOverScene(controller, score);\n        scene.addSprite(countdown);\n    }\n    launchGameOverScene(controller:GameController<BouncingBall>, score:number){\n        const scene = new Scene('GameOver',controller);\n        controller.scene = scene;\n        let age =0;\n        scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n            ctx.fillStyle = 'black';\n            ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n        }\n        scene.addBehavior({ updateModel: (s,time) => age+=time });\n        scene.handleKeyPressed = () => {if(age>1000) this.launchGame(controller)};\n        scene.handleMouseClick = () => {if(age>1000) this.launchGame(controller)};\n        const win = (score>10);\n        scene.addSprite( new TitleSprite( win ? 'YOU WIN!!!' : \"YOU LOSE\", `${ win ? 'Awesome,': 'Times Up!'} Score ${score}`\n            , 'HIT ANY KEY TO PLAY AGAIN' ) );\n        return scene;\n    }\n    launchInstructions(controller:GameController<BouncingBall>){\n        const scene = new Scene('Intro',controller);\n        controller.scene = scene;\n            \n        scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n                ctx.fillStyle = 'black';\n                ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n        }\n        scene.handleKeyPressed = () => this.launchGame(controller);\n        scene.handleMouseClick = () => this.launchGame(controller);\n        scene.addSprite( new TitleSprite( \"CLICK THE BALLS\", `You have 15 seconds. Don't miss.`\n            , 'HIT ANY KEY TO PLAY' ) );\n        return scene;\n    }\n}\n\n","import { Point } from \"../../../gamelib/types/Point\";\nimport { Sprite } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\n\nexport function newSmallExplosion(scene:MainGameScene, position:Point):Sprite{\n    return newExplosion(scene, position, 'explosionSmall');\n}\n\nexport function newBigExplosion(scene:MainGameScene, position:Point):Sprite{\n    return newExplosion(scene, position, 'explosionBig');\n}\n\nfunction newExplosion(scene:MainGameScene, position:Point, name:string):Sprite {\n    const explosion = new AnimatedSprite(scene,name, position, true);\n    explosion.position = {x: position.x - explosion.size.width / 2\n        ,y: position.y - explosion.size.height / 2};\n    scene.controller.soundEffects.play(name);\n    return explosion;\n}","import { SpaceGame } from \"../SpaceGame\";\nimport { Sprite } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { newSmallExplosion } from \"./Explosion\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport Scene from \"../../../gamelib/Scene\";\nimport { centerPosition } from \"../../../gamelib/types/Rectangle\";\n\nexport function generateOpenningSequenceAsteroids(scene:Scene<SpaceGame>, n:number):Sprite[]{\n    const sz = scene.controller.scene.size;\n    const rand =  (minn:number, max:number) => Math.random() * (max-minn) + minn;\n    const min =100;\n    const sprites:Sprite[] = [];\n    for(let x=0; x<n;x++){\n        const a = new AnimatedSprite(scene, 'asteroid', {x: rand(sz.width-min, min),y:rand(sz.height-min, min)});\n        a.speed = Math.random() * 200+50;\n        a.angle = Math.random() * Math.PI *2;\n        a.zOrder = -1;\n        a.canCollide = true;\n        a.size = {width: a.size.width, height: a.size.height}\n        sprites.push(a);\t\n    }\n    return sprites;\n}\nexport function generateGameAsteroids(scene:MainGameScene, n:number ):Sprite[]{\n    const roids = generateOpenningSequenceAsteroids(scene, n);\n    roids.forEach( (a) => {\n        a.position.x = Math.random() * scene.modelSize.width;\n        a.position.y = 0;\n        a.speed = Math.random() * 100 +50;\n        a.handleCollision = (otherSprite) =>{\n            if (otherSprite === scene.player && !scene.pause) {\n                scene.hit(10);\n                scene.addSprite(newSmallExplosion(scene, centerPosition(a)));\n                a.isAlive = false;\n            }\n        };\n    });\n    return roids;\n}","import { DefaultSprite } from \"../../../gamelib/behaviors/DefaultSprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { Point } from \"../../../gamelib/types/Point\";\n\n\nexport class Radar extends DefaultSprite{\n\n    scene:MainGameScene;\n\n    constructor(scene:MainGameScene){\n        super('Radar');\n        const margin = 3;\n        const x = Math.floor( scene.size.width * 14.0 / 16.0)- margin;\t\t\n        const width = scene.size.width - 3 - x;\n        const y = Math.floor( width / scene.modelSize.width * scene.modelSize.height);\n        this.position = {x: x-3,y:margin+50};\n        this.size = {width,height: y};\n        this.isFixedPosition = true;\n        this.zOrder = 100;\n\t\tthis.scene =scene;\n\t\tthis.canCollide = false;\n\t\tthis.handleCollision = undefined;\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n\t\tctx.strokeStyle = 'white';\n\t\tctx.strokeRect(location.x-1, location.y-1, this.size.width+2, this.size.height+2);\n\t\tctx.fillStyle = 'white';\n\n\t\tconst scale = this.size.width/this.scene.modelSize.width;\n\t\tfor(let sprite of this.scene.sprites){\n\t\t\tif(sprite === this) continue;\n\t\t\tconst x1 = Math.floor(location.x + (sprite.position.x * scale));\n\t\t\tconst y1 = Math.floor(location.y + (sprite.position.y * scale));\n\t\t\tlet size =2;\n\t\t\tif(sprite.name === 'enemy' )\n\t\t\t\tctx.fillStyle = 'red';\n\t\t\telse if(sprite.name === 'player'){\n\t\t\t\tctx.fillStyle = 'green';\n\t\t\t\tsize =3;\n\t\t\t}\n\t\t\tctx.fillRect(x1, y1,size,size);\n\t\t\t\n\t\t\t\n\t\t\tctx.fillStyle = 'white';\n\t\t}\n\t\tctx.strokeStyle = 'red';\n\t\tconst topX = Math.floor(this.scene.viewPort.x * scale + location.x);\n\t\tconst topY = Math.floor(this.scene.viewPort.y * scale + location.y)\n\t\tconst width = Math.floor(this.scene.size.width * scale);\n\t\tconst height = Math.floor(this.scene.size.height * scale);\n\t\tctx.strokeRect(topX, topY, width, height);\n\t}\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\n\nexport class ExpirationBehavior implements Behavior{\n\tage = 0;\n\texpirationTime:number;\n\tpublic constructor(expirationTime:number){\n\t\tthis.expirationTime =  expirationTime;\n\t}\n    \n    updateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n        this.age+=timeSinceLastUpdate;\n\t\tif(this.age > this.expirationTime)\n\t\t\tsprite.isAlive = false;\n\t}\n}\n","import { MainGameScene } from \"../MainGameScene\";\nimport { Point } from \"../../../gamelib/types/Point\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport { SpaceGame } from \"../SpaceGame\";\nimport { Missle } from \"./Missle\";\nimport { addVectors } from \"../../../gamelib/types/Vector\";\n\nconst MAX_SPEED = 375;\n\nexport class Ship  extends AnimatedSprite<SpaceGame, MainGameScene> {\n\tshipAngle:number;\n\tlastMissleFired?:Missle;\n\n\tconstructor(scene:MainGameScene, position:Point, name:string) {\n\t\tsuper(scene,name, position);\n\t\tthis.shipAngle = 0;\n\t\tthis.speed = 0;\n\t\tthis.angle = 0;\n\t\tthis.acceleration = -.1;\n\t\tthis.canCollide = true;  \n\t\tthis.spriteSheetBehavior.getAngle = () => this.shipAngle;\n\t}\n\n\tleft() {\n\t\tthis.shipAngle += -.15;\n\t}\n\n\tright() {\n\t\tthis.shipAngle += +.15;\n\t}\n\n\tmove(amount:number = 15.0) {\n\t\tconst newVector = addVectors(this, {speed:amount, angle:this.shipAngle});\n\t\tthis.angle = newVector.angle;\n\t\tthis.speed = Math.min(newVector.speed, MAX_SPEED);\n\t}\n}\n","import { Point } from \"../types/Point\";\nimport { SpriteSheet } from \"./SpriteSheet\";\nimport { centerPosition, union } from \"../types/Rectangle\";\n\n/**\n * blends one image (secondary) into another image (primary)\n */\nexport class BlendedSpriteSheet implements SpriteSheet{\n    primarySpriteSheet:SpriteSheet;\n    secondarySpriteSheet:SpriteSheet;\n    blend:string;\n    blendAmount:number;\n    constructor(primarySpriteSheet:SpriteSheet, secondarySpriteSheet:SpriteSheet, blend:string = 'add'){\n        this.blend = blend;\n        this.primarySpriteSheet = primarySpriteSheet;\n        this.secondarySpriteSheet = secondarySpriteSheet;\n        this.blendAmount = 1.0;\n    }\n    paint(location:Point, ctx: CanvasRenderingContext2D, angle:number,row:number, column:number):void{\n        this.primarySpriteSheet.paint(location, ctx, angle, row, column);\n        \n        //place secondary image in the center of primary.\n        const center = centerPosition({position:location, size: this.primarySpriteSheet.size});\n        const w2 = this.secondarySpriteSheet.size.width, h2 = this.secondarySpriteSheet.size.height;\n        const location2 = {x: Math.floor(center.x - w2/2),\n                        y: Math.floor(center.y - h2/2)  }\n        const out = union( {position:location, size: this.primarySpriteSheet.size}, \n            {position:location2, size: this.secondarySpriteSheet.size} );\n        const baseIM = ctx.getImageData(out.position.x, out.position.y, out.size.width, out.size.height);\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(location2.x, location2.y, w2, h2);\n\n        this.secondarySpriteSheet.paint(location2,ctx,0,1,1);\n        const id2 = ctx.getImageData(location2.x, location2.y, w2, h2);\n\n        const data2= id2.data;\n        const dataBase = baseIM.data;\n        const offsetx = location2.x - out.position.x, offsety = location2.y - out.position.y;\n        if(this.blend === 'add'){\n            add(dataBase, out.size.width, out.size.height, data2, offsetx, offsety, w2, h2, this.blendAmount);\n        }else if(this.blend === 'subtract'){\n            subtract(dataBase, out.size.width, out.size.height, data2,  offsetx, offsety, w2, h2);\n        }\n        ctx.putImageData(baseIM, out.position.x, out.position.y);\n    }\n    get rows(){\n        return this.primarySpriteSheet.rows;\n    }\n    get columns(){\n        return this.primarySpriteSheet.columns;\n    }\n    get angle(){\n        return this.primarySpriteSheet.angle;\n    }\n    get size(){\n        return this.primarySpriteSheet.size;\n    }\n    set size(size){\n        this.primarySpriteSheet.size = size;\n    }\n    get type(){\n        return this.primarySpriteSheet.type;\n    }\n    get frameCount(){\n        return this.primarySpriteSheet.frameCount;\n    }\n}\nfunction add(data1: Uint8ClampedArray, w1: number, h1: number, \n    data2: Uint8ClampedArray, offsetx:number, offsety:number, w2: number, h2: number, blendAmount:number){\n    for (let x2 = 0; x2 < w2; x2++) {\n        for (let y2 = 0; y2 < h2; y2++) {\n            const x1 = x2 + offsetx, y1 = y2 + offsety;\n            let index1 = (y1 * w1 + x1) * 4;\n            let index2 = (y2 * w2 + x2) * 4;\n            data1[index1] = Math.min(Math.floor(data2[index2] * blendAmount) + data1[index1], 255); //red\n            data1[++index1] = Math.min(Math.floor(data2[++index2] * blendAmount) + data1[index1], 255); //green\n            data1[++index1] = Math.min(Math.floor(data2[++index2] * blendAmount) + data1[index1], 255); //blue\n            data1[++index1] = 255;\n        }\n    }\n}\n\nfunction subtract(data1: Uint8ClampedArray, w1: number, h1: number, data2: Uint8ClampedArray, offsetx:number, offsety:number,w2: number, h2: number){\n}\n\n","import { Ship } from \"./Ship\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { Point, pointAsInt } from \"../../../gamelib/types/Point\";\nimport { BlendedSpriteSheet } from \"../../../gamelib/util/BlendedSpriteSheet\";\n\nexport class Player extends Ship {\n\tshield = 100;\n\tshieldAge =0;\n\tblendedSpriteSheet: BlendedSpriteSheet;\n\tconstructor(scene:MainGameScene, position:Point) {\n\t\tsuper(scene, position, \"player\");\n\t\tthis.acceleration = -4;\n\t\tconst primary = this.spriteSheetBehavior.spriteSheet;\n\t\tconst secondary = scene.controller.imagePreloader.getSpriteSheetFromCache(\"shield\");\n\t\tthis.blendedSpriteSheet = new BlendedSpriteSheet(primary, secondary);\n\t}\n\n\t//handle viewport movement\n\tupdateModel(timeSinceLastUpdate: number):void{\n\t\tsuper.updateModel(timeSinceLastUpdate);\n\t\tlet viewport = this.scene.viewPort;\n\t\tconst size = this.scene.size;\n\t\tconst margin = {x:size.width / 3, y:size.height / 3};\n\t\tconst position = pointAsInt(this.position);\n\t\tif(position.x < viewport.x + margin.x)\n\t\t\tviewport.x = position.x - margin.x;\n\t\telse if(position.x > viewport.x + size.width - margin.x)\n\t\t\tviewport.x = position.x - size.width + margin.x;\n\t\tif(position.y < viewport.y + margin.y)\n\t\t\tviewport.y = position.y - margin.y;\n\t\telse if(position.y > viewport.y + size.height - margin.y)\n\t\t\tviewport.y = position.y - size.height + margin.y;\n\t\tthis.scene.viewPort = {x:Math.min(Math.max(viewport.x, 0), this.scene.modelSize.width- size.width)\n\t\t\t,y:Math.min(Math.max(viewport.y, 0), this.scene.modelSize.height- size.height)};\n\t}\n\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\t\t\n\t\tif(this.shieldAge && this.shieldAge >0){\n\t\t\tthis.blendedSpriteSheet.blendAmount = Math.min(.2, this.shield/100);\n\t\t\tthis.shieldAge -= timeSinceLastAnimation;\n\t\t\tthis.spriteSheetBehavior.spriteSheet = this.blendedSpriteSheet;\n\t\t\tsuper.paint(location,ctx,timeSinceLastAnimation);\n\t\t\tthis.spriteSheetBehavior.spriteSheet = this.blendedSpriteSheet.primarySpriteSheet;\n\t\t}else{\n\t\t\tsuper.paint(location,ctx,timeSinceLastAnimation);\t\n\t\t}\n\t}\n\tanimateShield(){\n\t\tthis.shieldAge = 500;\n\t}\n}\n","import { MainGameScene } from \"../MainGameScene\";\nimport { Ship } from \"./Ship\";\n\nexport class Enemy extends Ship {\n\n    constructor(scene:MainGameScene) {\n        super(scene, {x:Math.floor(Math.random() * scene.modelSize.width), y:50}, \"enemy\");\n        this.speed = 100;\n        this.angle = Math.random();\n        this.shipAngle = 0;\n    }\n\n    private count:number =0;\n\n    updateModel(timeSinceLastUpdate: number):void{\n        super.updateModel(timeSinceLastUpdate);\n        const xDist = this.position.x - this.scene.player.position.x;\n        const yDist = this.position.y - this.scene.player.position.y;\n        const distance = Math.hypot(xDist, yDist);\n        if (distance > 1500)\n            return;\n        const requiredHeading = Math.atan2(yDist, xDist);\n        const crossproduct = Math.sin(requiredHeading - this.shipAngle);\n\n        if (crossproduct > .1) \n            this.shipAngle -= .1;\n        else if (crossproduct < -.1)\n            this.shipAngle += .1 ;\n        else if (this.count++ % Math.max(100 - this.scene.level * 20, 30) === 0 && distance < 600   )\n            this.scene.fire(this);\n        if (distance > 300) {\n            this.move();\n        }\n    }\n\n    move(amount:number = 12.0) {\n        super.move(amount);\n    \tthis.speed = Math.min(this.speed, 300);\n\t}\n}","import { Sprite } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport { SpaceGame } from \"../SpaceGame\";\nimport { Point } from \"../../../gamelib/types/Point\";\nimport { ExpirationBehavior } from \"../../../gamelib/behaviors/ExpirationBehavior\";\n\nconst NAME = \"missle\";\n\nexport class Missle extends AnimatedSprite<SpaceGame, MainGameScene>{\n\towner:Sprite;\n\tbehavior:ExpirationBehavior;\n\tconstructor(position:Point,angle:number, speed:number,\n\t\t\towner:Sprite, scene:MainGameScene, expiration:number) {\n\t\tsuper(scene,NAME, position);\n\t\tthis.owner = owner;\n\t\tthis.angle = angle;\n\t\tthis.speed = speed;\n\t\tthis.acceleration = 10;\n\t\tthis.canCollide = true;\n\t\tthis.behavior =new ExpirationBehavior(expiration);\n\t\tthis.addBehavior(this.behavior);\n\t}\n\t\n\thandleCollision(otherSprite:Sprite):void{\n\t\tif(otherSprite === this.owner || otherSprite.name === NAME )\n\t\t\treturn;\n\t\tthis.isAlive = false;\n\t\tthis.scene.missleHit(this.owner,otherSprite);\n\t}\n}","import Scene from \"../../gamelib/Scene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { Point } from \"../../gamelib/types/Point\";\n\nexport class BackgroundScene extends Scene<SpaceGame> {\n    stars:Point[] = []\n\n    paintBackground(ctx: CanvasRenderingContext2D) {\n        const image = this.controller.imagePreloader.getImageFromCache(this.name);\n        const sz = (this.modelSize.width === 0) ? this.size : this.modelSize;\n        const p = (this.modelSize.width === 0) ? {x:0,y:0} : this.viewPort;\n  \n        const rows = Math.floor(sz.height / image.height) + 1;\n        const columns = Math.floor(sz.width / image.width) + 1;\n        for(let row = 1; row <=rows; row++){\n            for(let col =1; col<=columns; col++){\n                //draw and clip viewport\n                let w= Math.min( image.width, sz.width - ((col-1) * image.width ) );\n                let h= Math.min( image.height, sz.height - ((row-1) * image.height ));\n\n                let x1 = ((col-1) * image.width ) - p.x;\n                let y1 = ((row-1) * image.height ) - p.y;\n\n                let srcX=0, srcY=0;\n                //clip drawing.\n                if(x1 < 0){\n                    srcX = x1 * -1;\n                    w -= srcX;\n                    x1 =0;\n                    if( w <=0)\n                        continue; \n                }\n                if(y1 < 0){\n                    srcY = y1 * -1;\n                    h -= srcY;\n                    y1 =0;\n                    if( h <=0)\n                        continue; \n                }\n                if(x1+w > this.size.width){\n                    w -=  (x1 + w) - this.size.width;\n                    if(w<=0)\n                        continue;\n                }\n                if(y1+h > this.size.height){\n                    h -=  (y1 + h) - this.size.height;\n                    if(h<=0)\n                        continue;\n                }\n                ctx.drawImage(image, srcX, srcY,w,h,x1,y1,w,h);\n            }\n        }\n    }\n}","import { GameController } from \"../../gamelib/GameController\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { Point } from \"../../gamelib/types/Point\";\nimport { Radar } from \"./sprites/Radar\";\nimport { Sprite } from \"../../gamelib/types/Sprite\";\nimport { ExpirationBehavior } from \"../../gamelib/behaviors/ExpirationBehavior\";\nimport { launchOpenningSequence } from \"./OpenningSequence\";\nimport { newBigExplosion, newSmallExplosion } from \"./sprites/Explosion\";\nimport { Player } from \"./sprites/Player\";\nimport { Enemy } from \"./sprites/Enemy\";\nimport { Missle } from \"./sprites/Missle\";\nimport { launchBetweenLevelsScene } from \"./BetweenLevelScene\";\nimport { Ship } from \"./sprites/Ship\";\nimport { generateGameAsteroids } from \"./sprites/Asteroids\";\nimport { BackgroundScene } from \"./BackgroundScene\";\nimport { centerPosition } from \"../../gamelib/types/Rectangle\";\n\n\nexport class MainGameScene extends BackgroundScene{\n    _score:number=0;\n    level:number;\n\tstars:Point[] = []\n\tplayer:Player;\n\talienCount:number;\n\tpause:boolean = false;\n\n    constructor(controller:GameController<SpaceGame>, level:number, score:number){\n        super('MainGameScene', controller);\n        this.level = level;\n        this.score = score;\n        controller.scene = this;\n\t\tthis.modelSize = {width: this.size.width *3, height: this.size.height*3};\n\t\tconst area = this.modelSize.width * this.modelSize.height;\n        this.wrapAround = true;\n\t\t\n        this.addSprites(generateGameAsteroids(this, Math.floor( (area/300000)*(.6 + level*.4) ))) ;\n \n        this.addSprite(new Radar(this));\n\n\t\tconst center = { x:this.modelSize.width/2, y:this.modelSize.height/2};\n\t\tthis.viewPort = {x:center.x - this.size.width/2, y:center.y - this.size.height/2 };\n\t\t\n\t\tthis.player = new Player(this, center);\n\t\tthis.addSprite(this.player);\n\n\t\tthis.alienCount = level;\n\t\tfor (let i = 0; i < this.alienCount; i++)\n\t\t\tthis.addSprite(new Enemy(this));\n\n\t\tthis.speed = 1;\n\t}\n\n\tfire(ship:Ship) {\n\t\tif(ship.lastMissleFired && ship.lastMissleFired.behavior.age < 150 && ship.lastMissleFired.isAlive){\n\t\t\treturn;\n\t\t}\n\t\tconst center = centerPosition(ship);\n\t\tconst pos =  {x:center.x + Math.cos(ship.shipAngle) * ship.size.width,\n\t\t\t\t\ty:center.y + Math.sin(ship.shipAngle) * ship.size.height};\n\t\tlet expiration:number;\n\t\tif (this.player === ship) {\n\t\t\texpiration = 1500;\n\t\t\tthis.controller.soundEffects.play(\"missle\");\n\n\t\t} else {\n\t\t\texpiration = 1000;\n\t\t\tthis.controller.soundEffects.play(\"alienMissle\");\n\t\t}\n\t\tconst missle = new Missle(pos, ship.shipAngle, ship.speed + 50, ship, this, expiration);\n\t\tship.lastMissleFired = missle;\n\t\tthis.addSprite(missle);\n\t}\n\n\thandleKeyPressed(key: string): void {\n\t\tif(this.pause)\n\t\t\treturn;\n\t\tswitch(key){\n\t\t\tcase 'a':\n\t\t\tcase 'ArrowLeft':\n\t\t\t  \tthis.player.left();\n\t\t\t  \tbreak;\n\t\t\tcase 'w':\n\t\t\tcase 'ArrowUp':\n\t\t\t  \tthis.player.move();\n\t\t\t\t  break;\n\t\t\tcase 's':\n\t\t\tcase 'ArrowDown':\n\t\t\t\tthis.player.move(-15.0);\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\tcase 'ArrowRight':\n\t\t\t  \tthis.player.right();\n\t\t\t  \tbreak;\n\t\t\tcase ' ':\n\t\t\t\tthis.fire(this.player);\n\t\t\t\tbreak;\n\t\t  }\n\t}\n\n\tgameOver() {\n\t\tif(this.pause)\n\t\t\treturn;\n\t\tthis.pause = true;\n\t\tthis.controller.soundEffects.play(\"gameOver\");\n\n\t\tthis.addBehavior(new ExpirationBehavior(4000));\n\t\tthis.addBehavior({ handleKill: () => {\n\t\t\tif(this.controller.gameInitializer.highscore < this.score){\n\t\t\t\tthis.controller.gameInitializer.highscore = this.score;\n\t\t\t\tthis.controller.soundEffects.play(\"newHighScore\");\n\t\t\t}\n\t\t\tlaunchOpenningSequence(this.controller);\n\t\t}});\n\t}\n\tnextLevel(){\n\t\tthis.pause =true;\n\t\tthis.addBehavior(new ExpirationBehavior(4000));\n\t\tthis.addBehavior({ handleKill: ()=> launchBetweenLevelsScene(this.controller, this.level, this.score)});\n\t}\n\n\thit(hitPoints:number){\n\t\tif(this.pause)\n\t\t\treturn;\n\t\tif(this.player.shield-hitPoints <= 0){\n\t\t\tconst center = centerPosition(this.player);\n\t\t\tthis.addSprite(newBigExplosion(this, center));\n\t\t\tthis.player.isAlive = false;\n\t\t\tthis.gameOver();\n\t\t}else{\n\t\t\tthis.player.shield -= hitPoints;\n\t\t\tthis.player.animateShield();\n\t\t}\t\n\t}\n\tmissleHit(owner:Sprite, otherSprite:Sprite) {\n\t\tif(this.debug){\n\t\t\tconsole.log(`Missle from ${owner.name} hits sprite ${otherSprite.name}`);\n\t\t}\n\t\tif(this.pause)\n\t\t\treturn;\n\t\n\t\tif (otherSprite.name === 'player'){\n\t\t\tthis.hit(49);\n\t\t}else if(otherSprite.name === 'enemy') {\n\t\t\totherSprite.isAlive = false;\n\t\t\tthis.addSprite(newBigExplosion(this, centerPosition(otherSprite)));\n\t\t\tthis.score += 50;\n\t\t\tif(--this.alienCount === 0){\n\t\t\t\tthis.nextLevel();\n\t\t\t}\n\t\t}else if(owner === this.player &&  otherSprite.name === 'asteroid'){\n\t\t\totherSprite.isAlive = false; \n\t\t\tthis.addSprite(newSmallExplosion(this, centerPosition(otherSprite)));\n\t\t\tthis.score += 5;\n\t\t}\n\t}\n\tset score(score:number){\n\t\tthis._score = score;\n\t\tthis.controller.publishEvent({type:'score', value:(this.score)});\n\t}\n\tget score():number{\n\t\treturn this._score;\n\t}\n\thandleMouseClick(x:number, y:number){\n\t\tif(this.pause)\n\t\t\treturn;\n\t\tthis.handleTouch(x,y);\n\t\tthis.fire(this.player);\n\t}\n\n\thandleTouch(x:number, y:number){\n\t\tconst xDist = this.player.position.x - x - this.viewPort.x;\n        const yDist = this.player.position.y - y - this.viewPort.y;\n        const distance = Math.hypot(xDist, yDist);\n        const requiredHeading = Math.atan2(yDist, xDist);\n        const crossproduct = Math.sin(requiredHeading - this.player.shipAngle);\n\n        if (crossproduct > .1) \n            this.player.shipAngle -= .1;\n        else if (crossproduct < -.1)\n            this.player.shipAngle += .1 ;\n        if (distance >100) {\n\t\t\tthis.player.move();\n\t\t\tthis.acceleration = -1;\n        }else{\n\t\t\tthis.acceleration = -5;\n\t\t}\n\t}\n}\n","import { SpaceGame } from \"./SpaceGame\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { MainGameScene } from \"./MainGameScene\";\nimport { generateOpenningSequenceAsteroids } from \"./sprites/Asteroids\";\nimport { TitleSprite } from \"../../gamelib/sprites/TitleSprite\";\nimport { BackgroundScene } from \"./BackgroundScene\";\n\nexport function launchBetweenLevelsScene(controller:GameController<SpaceGame>, level:number, score:number){\n    const scene = new BackgroundScene('BetweenLevelScene',controller);\n    controller.scene = scene;\n    controller.publishEvent({type:'score', value:score});\n    scene.wrapAround = true;\n\n    scene.handleKeyPressed = (key: string) => { new MainGameScene(controller,level+1,score) };\n    scene.handleMouseClick = () => new MainGameScene(controller,level+1,score);\n    scene.addSprite( new TitleSprite(`LEVEL ${level} COMPLETE`, `Score ${score}`\n        , 'HIT ANY KEY FOR NEXT LEVEL' ) );\n    scene.addSprites(generateOpenningSequenceAsteroids(scene, 30));\n    scene.controller.soundEffects.play(\"levelComplete\");\n    return scene;\n}\n","import { GameController } from \"../../gamelib/GameController\";\nimport { generateOpenningSequenceAsteroids } from \"./sprites/Asteroids\";\nimport { MainGameScene } from \"./MainGameScene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { TitleSprite } from \"../../gamelib/sprites/TitleSprite\";\nimport { BackgroundScene } from \"./BackgroundScene\";\n\nexport function launchOpenningSequence(controller:GameController<SpaceGame>){\n    const scene = new BackgroundScene('OpenningScene',controller);\n    controller.scene = scene;\n    controller.publishEvent({type:'score', value:0});\n    scene.wrapAround = true;\n\n    scene.handleKeyPressed = (key: string) => { new MainGameScene(controller,1,0) };\n    scene.handleMouseClick = () => new MainGameScene(controller,1,0);\n\n    scene.addSprite( new TitleSprite('Space Hunter', `High Score ${controller.gameInitializer.highscore}`\n        , 'HIT ANY KEY FOR NEW GAME' ) );\n     scene.addSprites(generateOpenningSequenceAsteroids(scene, 30));\n}","import { GameInitializer } from \"../../gamelib/GameInitializer\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { launchOpenningSequence } from \"./OpenningSequence\";\n\nexport class SpaceGame implements GameInitializer<SpaceGame>{\n    \n    highscore:number =0;\n\n    preloadImages = [{name:'asteroid', src:'/circles/assets/images/asteroid.png', rows:2, columns:10}\n                    ,{name:'player' , src: '/circles/assets/images/ship_anim.png', rows:1, columns:24, scale:.4, angle:Math.PI/2, type:'rotate' }\n                    ,{name: 'shield', src:'/circles/assets/images/shield.png', scale:.3}\n                    ,{name: 'enemy', src:'/circles/assets/images/Enemy.png', scale:.8 }\n                    ,{name: 'explosionSmall', src: '/circles/assets/images/ExplosionSheetSmall.png', rows:4, columns:4}\n                    ,{name: 'explosionBig', src: '/circles/assets/images/ExplosionSheet2.png', rows:6, columns:8}                                        \n                    ,{name: 'missle', src: '/circles/assets/images/Laser.png'}                                        \n                    ,{name: 'OpenningScene', src: '/circles/assets/images/Scene.jpg', noTransparent:true}  \n                    ,{name: 'MainGameScene', src: '/circles/assets/images/starfield_alpha2.png', noTransparent:true}  \n\n\n//                    ,{name: 'MainGameScene', src: '/circles/assets/images/asteroid.png', noTransparent:true}  \n                    ,{name: 'BetweenLevelScene', src: '/circles/assets/images/Scene.jpg', noTransparent:true}                    \n];\n    preloadSounds = [{name:'missle', src:'/circles/assets/sounds/missle_fire.wav'}\n                    ,{name:'alienMissle', src:'/circles/assets/sounds/alien_missle_fire.wav'}\n                    ,{name:'gameOver', src:'/circles/assets/sounds/game_over.wav'}\n                    ,{name:'levelComplete', src:'/circles/assets/sounds/level_complete.wav'}\n                    ,{name:'explosionSmall', src:'/circles/assets/sounds/small_explosion.wav'}\n                    ,{name:'explosionBig', src:'/circles/assets/sounds/big_explosion.wav'}\n                    ,{name:'newHighScore', src:'circles/assets/sounds/new_high_score.wav'}];\n\n\tinit(controller:GameController<SpaceGame>):void {\n        launchOpenningSequence(controller);  \n        controller.debug = true;      \n\t}\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link  as ReactLink, Box } from '@material-ui/core';\nimport {  AppBar, Toolbar,Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n      },\n    container:{\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n        overflowY:'auto',\n    },\n    root: {\n        maxWidth: 345,\n        marginBottom: theme.spacing(3),\n    },\n    media: {\n        height: 140,\n    },\n    link:{\n        textDecoration: 'none'\n    },\n    githublink:{\n        marginLeft: theme.spacing(3),\n    }\n}));\n\nexport  function Home() {\n    const classes = useStyles();\n\n    return (\n\n        <React.Fragment>\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Circles\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box component=\"div\" overflow=\"visible\">\n        <Grid container alignItems=\"center\" justify = \"center\" direction=\"column\" className={classes.container} >\n            <Card className={classes.root}>\n                <Link to=\"/space\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/asteroids-screen.png\"\n                            title=\"Play Asteroids\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Space Hunter\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Shoot all the asteroids.  Use W-A-S-D to move around and space bar to fire.  Watch out for the enemy...\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n            <Card className={classes.root}>\n                <Link to=\"/ball\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/balls-screen.png\"\n                            title=\"Play Bouncing Ball\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Bouncing Ball\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Try to catch the balls.  If you miss your score goes down, so be careful!  Built this to test the library.\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n            <ReactLink  component=\"button\" variant=\"body2\" className={classes.githublink}\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </ReactLink>\n        </Grid>\n        </Box>\n</React.Fragment>\n    );\n}","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport GameComponent from './gamecontainer/GameComponent';\nimport { BouncingBall } from './sample/BouncingBall';\nimport { SpaceGame } from './sample/space/SpaceGame';\nimport { Home } from './Home';\n\nexport default function App() {\n  return (\n    <Router hashType='noslash'>\n        <Switch>\n          <Route path=\"/space\">\n          <GameComponent gameInitializer={new SpaceGame()} ></GameComponent>\n          </Route>\n          <Route path=\"/ball\">\n          <GameComponent gameInitializer={new BouncingBall()} ></GameComponent>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Electrolize',\n  },\n    overrides: {\n\n        MuiCssBaseline: {\n          '@global': {\n            body: {\n                width: '100%',\n                height: '100%',\n                margin: '0',\n            }\n          },\n        },\n      },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-electrolize';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}