{"version":3,"sources":["gamelib/util/SpriteSheet.ts","gamelib/util/ImagePreloader.ts","gamelib/util/SoundEffects.ts","gamelib/GameController.ts","gamecontainer/InfoDialog.tsx","gamecontainer/GameComponent.tsx","gamelib/behaviors/DefaultSprite.ts","gamelib/types/Point.ts","gamelib/types/Sprite.ts","gamelib/types/Rectangle.ts","gamelib/Scene.ts","gamelib/behaviors/SpriteSheetBehavior.ts","gamelib/sprites/AnimatedSprite.ts","sample/BouncingBall.ts","sample/space/sprites/Explosion.ts","sample/space/sprites/Asteroids.ts","sample/space/sprites/Radar.ts","gamelib/behaviors/ExpirationBehavior.ts","sample/space/sprites/Ship.ts","sample/space/sprites/Player.ts","sample/space/sprites/Enemy.ts","sample/space/sprites/Missle.ts","gamelib/sprites/TitleSprite.ts","sample/space/MainGameScene.ts","sample/space/BetweenLevelScene.ts","sample/space/OpenningSequence.ts","sample/space/SpaceGame.ts","Home.tsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["emptySize","width","height","SpriteSheet","image","rows","columns","scale","size","srcSize","this","Math","floor","location","ctx","angle","row","column","Error","translate","x","y","rotate","drawImage","srcX","srcY","setTransform","ImagePreloader","imageCache","Map","loadsCompleted","nLoads","loadCallback","callback","key","spriteSheet","get","images","des","Image","src","onload","_createOnLoad","newImage","canvas","document","createElement","getContext","top","imgd","getImageData","pix","data","newColor","i","n","length","r","g","b","putImageData","output","toDataURL","makeTransparent","sheet","set","name","SoundEffects","effectPreloads","sounds","rate","_mute","effect","Howl","preload","sound","play","console","log","mute","Howler","GameController","gameInitializer","debug","keysPressed","imagePreloader","soundEffects","isShutdown","pause","touchEvent","readyCallback","_scene","gameEventListeners","preloadSounds","preLoadImages","preloadImages","registerCallback","_handleImagesLoaded","window","innerWidth","innerHeight","init","scene","event","type","value","forEach","handler","gameEventListener","push","that","keyDown","keyUp","delete","mouseDown","e","rect","getBoundingClientRect","clientX","left","clientY","preventDefault","handleMouseClick","touchMove","touch","targetTouches","touchEnd","undefined","touchStart","touchCancel","addEventListener","lastTime","restart","requestAnimationFrame","loop","time","removeEventListener","timeSinceLastAnimation","_updateScene","handleKeyPressed","handleTouch","save","paintBackground","paint","updateModel","isAlive","handleKill","restore","fillStyle","fillRect","useStyles","makeStyles","theme","createStyles","infoButton","InfoDialog","React","useState","open","setOpen","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","IconButton","edge","className","onClick","color","aria-label","Info","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","component","variant","DialogActions","Button","autoFocus","GameComponent","withStyles","root","flexGrow","controlButton","score","marginRight","spacing","title","link","textDecoration","backdrop","zIndex","drawer","props","canvasRef","createRef","gameController","state","imagesLoaded","current","setState","subscribeEvent","stopPropagation","Fragment","AppBar","position","style","background","boxShadow","Toolbar","Typography","to","handlePause","PlayCircleOutline","PauseCircleOutline","handleRestart","Refresh","handleMute","VolumeOff","VolumeUp","Backdrop","CircularProgress","ref","Component","DefaultSprite","speed","acceleration","canCollide","isFixedPosition","zOrder","behaviors","behavior","timeSinceLastUpdate","otherSprite","handleCollision","pointAsInt","point","round","xySpeed","sprite","cos","sin","centerPosition","union","rect1","rect2","tx2","ty2","rx2","ry2","tx1","ty1","rx1","ry1","intersects","tw","th","rw","rh","tx","ty","rx","ry","remove","array","index","indexOf","splice","Scene","controller","modelSize","viewPort","wrapAround","sceneSpeed","sprites","collisionListeners","count","totalTime","filter","s","pointInRect","_handleWrap","_validateSprite","comparator","low","high","mid","c","insert","a","priorPosition","handleMovement","dx","tempArray","slice","pop","newRect","oldRect","pointSpeed","newPosition","wrapped","sign","_handleCollision","error","removeSprite","collisionSprite","displayedSprites","pos","fillText","addSprite","SpriteSheetBehavior","animateOnce","framesPerSecond","age","frame","frameCount","timePerFrame","getAngle","AnimatedSprite","spriteSheetBehavior","getSpriteSheetFromCache","addBehavior","createWall","isVertical","PI","random","BouncingBall","publishEvent","getSpritesAtPoint","sz","rand","min","max","ball","radius","newSmallExplosion","newExplosion","newBigExplosion","explosion","generateOpenningSequenceAsteroids","minn","Radar","margin","strokeStyle","strokeRect","x1","y1","topX","topY","ExpirationBehavior","expirationTime","Ship","shipAngle","lastMissleFired","xSpeed","ySpeed","MAX_SPEED","atan2","hypot","Player","shield","shieldAge","viewport","Enemy","xDist","player","yDist","distance","requiredHeading","crossproduct","level","fire","move","Missle","owner","expiration","missleHit","TitleSprite","subtitle1","subtitle2","w","h","oldFont","font","shadowText","txt","measure","measureText","hpos","subHeight","MainGameScene","_score","stars","alienCount","area","addSprites","roids","hit","generateGameAsteroids","createStars","center","ship","missle","right","star","xP","yP","highscore","launchOpenningSequence","hitPoints","gameOver","animateShield","launchBetweenLevelsScene","SpaceGame","appBar","container","marginTop","marginBottom","padding","up","maxWidth","media","githublink","marginLeft","Home","noWrap","Box","overflow","Grid","alignItems","justify","direction","Card","CardActionArea","CardMedia","CardContent","gutterBottom","App","path","Boolean","hostname","match","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","body","ReactDOM","render","ThemeProvider","CssBaseline","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a899fbb5.chunk.js","sourcesContent":["import { Size } from \"../types/Size\";\nimport { Point } from \"../types/Point\";\n\nconst emptySize = {width:0, height:0}\n\nexport class SpriteSheet{\n    readonly rows:number;\n    readonly columns:number;\n    readonly image:HTMLImageElement;\n    size:Size;\n    readonly srcSize:Size;\n    constructor(image:HTMLImageElement, rows:number = 1, columns:number =1, scale:number=1.0) {\n        this.image = image;\n        this.rows = rows;\n        this.columns = columns;\n        this.srcSize = {width:Math.floor(this.image.width/this.columns),\n            height: Math.floor(this.image.height/this.rows)};\n        this.size = emptySize;\n        this.scale = scale;\n    }\n    paint(location:Point, ctx: CanvasRenderingContext2D, angle:number= 0,row:number=1, column:number=1):void{\n        if(row<1 || row > this.rows || column < 1 || column > this.columns)\n            throw Error(`Row and columns of sprite need to be in bounds (${row},${column})`);\n        if(angle){\n            ctx.translate(location.x + this.size.width / 2.0, location.y+ this.size.height / 2.0);\n            ctx.rotate(angle);\n            location.x = 0 - this.size.width / 2.0;\n            location.y = 0 - this.size.height / 2.0;\n        }\n        if(this.columns === 1 && this.rows === 1)\n            ctx.drawImage(this.image, 0, 0, this.srcSize.width, this.srcSize.height,\n                location.x, location.y, this.size.width, this.size.height);\n        else{\n            const srcX = Math.floor(this.image.width * ((column-1)/this.columns));\n            const srcY = Math.floor(this.image.height * ((row-1)/this.rows));\n            ctx.drawImage(this.image, srcX, srcY, this.srcSize.width, this.srcSize.height,\n                 location.x, location.y, this.size.width, this.size.height);\n        }\n        if(angle){\n            ctx.setTransform(1, 0, 0, 1, 0, 0);    \n        }\n    }\n    set scale(scale:number){\n        this.size = {width:Math.floor(this.srcSize.width * scale), height:Math.floor(this.srcSize.height * scale)};\n    }\n\n    get frameCount():number{\n        return this.rows*this.columns;\n    }\n}","import { SpriteSheet } from \"./SpriteSheet\";\n\nexport interface PreloadImage{\n    name:string;\n    src:string;\n    rows?:number;\n    columns?:number;\n}\n\n\nfunction makeTransparent(image: HTMLImageElement):HTMLImageElement  {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n    canvas.height = image.height;\n    canvas.width = image.width;\n    ctx.drawImage(image,0,0);\n    const imgd = ctx.getImageData(0, 0, image.width, image.height);\n    const pix = imgd.data;\n    const newColor = {r:0,g:0,b:0, a:0};\n    let top:number[]\n    for (let i = 0, n = pix.length; i <n; i += 4) {\n        const r = pix[i], g = pix[i+1],b = pix[i+2];\n        if(i===0){\n            top = [r,g,b];\n        }\n        if(r === top![0] && g === top![1] && b === top![2]){ \n            // Change the white to whatever.\n            pix[i] = newColor.r;\n            pix[i+1] = newColor.g;\n            pix[i+2] = newColor.b;\n            pix[i+3] = newColor.a;\n        }\n    }\n    ctx.putImageData(imgd, 0,0);\n    const output = document.createElement('img');\n    output.src = canvas.toDataURL('image/png');\n    return output;\n}\n\n\nexport class ImagePreloader{\n    imageCache: Map<string,SpriteSheet> = new Map();\n    loadsCompleted:number =0;\n    nLoads:number = 0;\n\n    private loadCallback?:() => void;\n\n    registerCallback(callback:() => void  ){\n        if(this.loadsCompleted === this.nLoads)\n            callback();\n        this.loadCallback = callback;\n    }\n    \n    getSpriteSheetFromCache(key:string):SpriteSheet{\n        const spriteSheet = this.imageCache.get(key);\n        this.nLoads++;\n        if(!spriteSheet)\n            throw Error(\"unable to load image: \" + key);\n        return spriteSheet;\n    }\n    \n    preLoadImages(images:PreloadImage[]):void{\n        \n        for(let des of images){\n            const image = new Image();\n            this.nLoads++;\n            image.src = des.src;\n            image.onload = this._createOnLoad(image, des);\n        }\n    }\n    private _createOnLoad(image:HTMLImageElement, des:PreloadImage){\n        return () => {\n            const newImage = makeTransparent(image);\n            newImage.onload = () => {\n                const rows = (des.rows) ? des.rows : 1;\n                const columns = (des.columns) ? des.columns :1;\n                const sheet = new SpriteSheet(newImage, rows, columns);\n                this.imageCache.set(des.name, sheet);\n                if(++this.loadsCompleted === this.nLoads && this.loadCallback){\n                    this.loadCallback();\n                }\n            }\n        };\n    }\n}\n\n//export var __IMAGEPRELOADER__:ImagePreloader = new ImagePreloader();\n","import { Howl, Howler } from 'howler';\n\n\nexport interface PreloadSoundEffect{\n    name:string;\n    src:string;\n}\n\nexport default class SoundEffects {\n    sounds:Map<string, Howl> = new Map();\n    rate:number = 1.0;\n\n    private _mute:boolean = false;\n\n  constructor (effectPreloads:PreloadSoundEffect[]) {\n    for(let effect of effectPreloads )\n        this.sounds.set(effect.name, new Howl({src:effect.src,preload: true}) );\n    this.rate = 1.0;\n    this._mute = false;\n  }\n\n  play (key:string) {\n    const sound = this.sounds.get(key);\n    if(sound){\n        sound.rate(this.rate);\n        sound.play();\n    }else{\n        console.log(`Sound not found! ${key}`);\n    }\n  }\n\n  get mute ():boolean { return this._mute; }\n\n  set mute (mute:boolean) {\n    Howler.mute(mute);\n    this._mute = mute;\n  }\n}\n","import Scene from './Scene';\nimport { ImagePreloader } from './util/ImagePreloader';\nimport { GameInitializer } from './GameInitializer';\nimport SoundEffects from './util/SoundEffects';\nimport { Point } from './types/Point';\n\nexport interface GameEvent{\n    type:string;\n    value:any;\n}\n\nexport interface HandleGameEvent{\n    (event:GameEvent):void;\n}\n\n\nexport class GameController<T extends GameInitializer<T>>{\n\n    debug: boolean = false;\n    keysPressed: Map<string, boolean> = new Map();\n    imagePreloader:ImagePreloader;\n    soundEffects:SoundEffects;\n    canvas?:HTMLCanvasElement;\n    isShutdown:boolean = false;\n    pause:boolean = false;\n    gameInitializer:T;\n    touchEvent?:Point;\n    \n    private _mute:boolean = false;\n    private readyCallback?: () => void;\n    private _scene?: Scene<T>;\n    \n    private gameEventListeners:HandleGameEvent[] = [];\n    constructor(gameInitializer:T){\n        this.gameInitializer = gameInitializer;\n        this.soundEffects = new SoundEffects(gameInitializer.preloadSounds || []);\n        this.imagePreloader = new ImagePreloader();\n        this.imagePreloader.preLoadImages(gameInitializer.preloadImages);\n    }\n\n    init(canvas:HTMLCanvasElement, readyCallback: () => void) {\n        this.readyCallback = readyCallback;\n        this.canvas = canvas;  \n        this.imagePreloader.registerCallback( ()=>{  this._handleImagesLoaded()});\n    }\n\n    restart(){\n        const canvas = this.canvas!;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.gameInitializer.init(this);\n        if(!this.scene)\n            throw Error(\"Game Initializer must set scene.\");\n    }\n\n    set scene(scene: Scene<T>) {\n        if (this.debug)\n            console.log(`SetScene: ${scene.name}`);\n        scene.debug = this.debug;\n        const canvas = this.canvas;\n        scene.size = {width:canvas!.width, height:canvas!.height};\n        this._scene = scene;\n    }\n    get scene(): Scene<T> {\n        return this._scene!;\n    }\n\n    publishEvent(event:GameEvent){\n        if(this.debug)\n            console.log(`Publish Game Event: {${event.type}, ${event.value}}`);\n        this.gameEventListeners.forEach( (handler) => handler(event));\n    }\n\n    subscribeEvent(gameEventListener:HandleGameEvent){\n        this.gameEventListeners.push(gameEventListener);\n    }\n    set mute(mute:boolean){\n        this._mute = mute;\n        this.soundEffects.mute = mute;\n    }\n    get mute(){\n        return this._mute;\n    }\n    private _handleImagesLoaded(){\n        const that = this;\n        const canvas = this.canvas!;\n        const keyDown = (event:KeyboardEvent) => that.keysPressed.set(event.key, true);\n        const keyUp = (event:KeyboardEvent) => that.keysPressed.delete(event.key);\n        const mouseDown = (e:MouseEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const x = e.clientX - rect.left, y = e.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`MouseDown Event: (${x},${y})`);\n            if(!that.pause && that.scene){\n                that.scene.handleMouseClick(x,y);\n            }\n        };\n        const touchMove = (e:TouchEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            e.preventDefault();\n            this.touchEvent = {x:touch.clientX - rect.left, y: touch.clientY - rect.top}\n        };\n        const touchEnd = (e:TouchEvent) => {\n            this.touchEvent = undefined;\n            e.preventDefault();\n        };\n        const touchStart = (e:TouchEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            e.preventDefault();\n            this.touchEvent = {x:touch.clientX - rect.left, y: touch.clientY - rect.top};\n            if(!that.pause && that.scene)\n                that.scene.handleMouseClick(this.touchEvent.x,this.touchEvent.y);\n        };\n        const touchCancel = (e:TouchEvent) => {\n            this.touchEvent = undefined;\n            e.preventDefault();\n        };\n\n        document.addEventListener('keydown', keyDown);\n        document.addEventListener('keyup',keyUp);\n        canvas.addEventListener('mousedown', mouseDown);\n        canvas.addEventListener(\"touchmove\", touchMove, false);\n        canvas.addEventListener(\"touchend\", touchEnd, false);\n        canvas.addEventListener(\"touchcancel\", touchCancel, false);\n        canvas.addEventListener(\"touchstart\", touchStart, false);\n\n        let lastTime = 0;\n        this.restart();\n        \n        function loop(time: number) {\n            if(that.isShutdown){\n                if(that.debug)\n                    console.log(\"shutting down game controller.\");\n                document.removeEventListener('keydown', keyDown);\n                document.removeEventListener('keyup',keyUp);\n                canvas.removeEventListener('mousedown', mouseDown);\n                canvas.removeEventListener(\"touchmove\", touchMove, false);\n                canvas.removeEventListener(\"touchend\", touchEnd, false);\n                canvas.removeEventListener(\"touchcancel\", touchCancel, false);\n                canvas.removeEventListener(\"touchstart\", touchStart, false);\n                return;\n            }\n            let timeSinceLastAnimation = (!lastTime) ? 0: time - lastTime;\n            lastTime = time;\n            if(timeSinceLastAnimation > 100 || that.pause){\n                //assume animation thread was paused due to moving off window/browser\n                timeSinceLastAnimation = 0;\n            }\n            const ctx = canvas.getContext('2d')!;\n            const size = {width:canvas.width, height: canvas.height};\n            if (size.width !== window.innerWidth || size.height !== window.innerHeight) {\n                // If window size is changed this is called to resize the canvas\n                // It is not called via the resize event as that can fire to often an\n                // debounce makes it feel sluggish so is called from main loop.\n                that.restart();\n            }\n\n            that._updateScene(ctx, timeSinceLastAnimation);\n\n            requestAnimationFrame(loop);\n        }\n        requestAnimationFrame(loop);\n        this.readyCallback!();\n    }\n\n    private _updateScene(ctx:CanvasRenderingContext2D,timeSinceLastAnimation:number){\n        this.keysPressed.forEach((value, key) => {\n            if(this.debug){\n                console.log(`KeyPressed Event: ${key}`);\n            }\n            this.scene.handleKeyPressed(key);\n        });\n        if(this.touchEvent){\n            this.scene.handleTouch(this.touchEvent.x,this.touchEvent.y);\n        }\n\n        ctx.save(); //Freeze redraw\n\n        this.paintBackground(ctx);\n        this.scene.paint({x:0,y:0}, ctx, timeSinceLastAnimation);\n        this.scene.updateModel(timeSinceLastAnimation);\n\n        if(!this.scene.isAlive){\n            console.log(`Scene Killed: ${this.scene.name}`);\n            this.scene.handleKill();\n            if(!this.scene.isAlive)\n                throw Error(`Scene is still dead.  Can't have a dead scene (${this.scene.name})`);\n        }\n\n        ctx.restore();//now do redraw\n    }\n\n    private paintBackground(ctx: CanvasRenderingContext2D) {\n        if(this.scene.paintBackground)\n            this.scene.paintBackground(ctx);\n        else{\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.scene.size.width, this.scene.size.height);\n        }\n    }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { IconButton, Link } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\ninfoButton: {\n\n  },\n})\n);\n\nexport default function InfoDialog() {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton edge=\"start\" className={classes.infoButton} onClick={handleClickOpen} color=\"primary\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Cicles\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          A simple 2D game library for JavaScript to teach my kids programming.   \n          A demo space game implemented using the library.\n        \n          <br></br>\n          \n          <Link component=\"button\" variant=\"body2\"\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </Link>\n          <br></br><br></br>\n          <Link variant=\"body2\">\n          nickzinn@gmail.com\n          </Link>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            <b>CLOSE</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './GameComponent.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PauseCircleOutline, PlayCircleOutline, Refresh, VolumeUp, VolumeOff } from '@material-ui/icons';\nimport { GameController} from '../gamelib/GameController';\nimport { CircularProgress, createStyles, Theme, WithStyles, withStyles, Backdrop } from '@material-ui/core';\nimport InfoDialog from './InfoDialog';\nimport { GameInitializer } from '../gamelib/GameInitializer';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  controlButton: {\n  },\n  score: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link:{\n    textDecoration: 'none'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\ninterface Props<T extends GameInitializer<T>> extends WithStyles<typeof styles> {\n  gameInitializer:T;\n}\n\ninterface IState{\n  score:number;\n  imagesLoaded:boolean;\n  pause:boolean;\n  mute:boolean;\n}\n\nconst GameComponent = withStyles(styles)( class <T extends GameInitializer<T>> extends React.Component<Props<T>> {\n \n  canvasRef = React.createRef<HTMLCanvasElement>();\n  gameController:GameController<T>;\n  state:IState;\n\n  constructor(props:Props<T>){\n    super(props);\n    this.gameController= new GameController<T>(props.gameInitializer);\n    this.gameController.debug = true;\n    this.state = { score:0, imagesLoaded:false, pause:false, mute:false};\n  }\n  componentDidMount() { \n    const canvas = this.canvasRef.current;\n    this.gameController.init(canvas!, () => this.setState({ imagesLoaded:true }));\n    this.gameController.subscribeEvent( (e) => {\n      if(e.type === 'score')\n        this.setState({score:e.value});\n    })\n  }\n  handleRestart(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.restart();\n  }\n  handlePause(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.pause = !this.gameController.pause;\n    this.setState({pause: this.gameController.pause});\n  }\n  handleMute(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.mute = !this.gameController.mute;\n    this.setState({mute: this.gameController.mute});  \n  }\n  componentWillUnmount(){\n    this.gameController.isShutdown = true;\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n    <React.Fragment>\n      <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar>\n          <InfoDialog></InfoDialog>\n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\n          <Link to=\"/circles\" className={classes.link}> \n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>Circles</Typography>           </Link>\n          </Typography>\n          <Typography variant=\"body1\" color=\"primary\" className={classes.score}>\n            Score: {this.state.score}\n          </Typography>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handlePause(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.pause ? <PlayCircleOutline /> : <PauseCircleOutline />}\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleRestart(e)} color=\"primary\" aria-label=\"menu\">\n            <Refresh />\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleMute(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.mute ? <VolumeOff /> : <VolumeUp />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Backdrop className={classes.backdrop} open={!this.state.imagesLoaded } >\n          <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <canvas id='Canvas' ref={this.canvasRef} />\n    </React.Fragment>\n  );\n  }\n});\n\nexport  default GameComponent;","import { Point } from \"../types/Point\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Size } from \"../types/Size\";\nimport { Behavior } from \"../types/Behavior\";\n\nexport class DefaultSprite implements Sprite{\n    name:string;\n    position:Point;\n    size:Size;\n    isAlive:boolean = true;\n\t\n    speed:number = 0.0;\n    angle:number = 0.0;\n    acceleration:number = 0.0;\n\tcanCollide:boolean = false;\n    isFixedPosition:boolean = false;\n    zOrder:number = 0;\n\t\n\tprivate behaviors:Behavior[] = [];\n\t\n\tconstructor(name:string,position:Point={x:0.0,y:0.0}, size:Size={width:0.0, height:0.0}){\n        this.name = name;\n        this.position = position;\n        this.size = size;\n\t}\n\t\n\taddBehavior(behavior:Behavior){\n        if(behavior.init) behavior.init(this);\n        this.behaviors.push(behavior);\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n        this.behaviors.forEach( (b) =>  b.paint?.(this, location, ctx, timeSinceLastAnimation));\n    }\n    updateModel(timeSinceLastUpdate: number) {\n        this.behaviors.forEach( (b) =>  b.updateModel?.(this, timeSinceLastUpdate));\n    }\n    \n    handleKill():void{\n        this.behaviors.forEach( (b) =>  b.handleKill?.(this));\n    }\n    \n    handleCollision?(otherSprite:Sprite):void{\n        this.behaviors.forEach( (b) =>  b.handleCollision?.(this, otherSprite));\n    }\n}","export interface Point{\n    x:number;\n    y:number;\n}\n\nexport function pointAsInt(point:Point): Point{\n    return {x:Math.round(point.x), y:Math.round(point.y)};\n}\n\nexport function calcDistance(a:Point, b:Point):number{\n        const xDist = Math.abs(a.x - b.x);\n        const yDist = Math.abs(a.y - b.y);\n        return Math.hypot(xDist, yDist);\n}","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Sprite{\n    name:string;\n    position:Point;\n    size:Size;\n    isAlive:boolean;\n    speed?: number;\n    angle?: number;\n    acceleration?: number;\n    priorPosition?:Point;\n    zOrder?:number\n\n    //optional properties\n\tcanCollide?: boolean;\n\tisFixedPosition?: boolean;\n\t\n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void;\n\n    updateModel?(timeSinceLastUpdate: number):void;\n\t\t\n\thandleKill?():void;\n    \n    handleCollision?(otherSprite:Sprite):void;\n    \n}\n\nexport function xySpeed(sprite:Sprite): Point{\n    if(sprite.speed !== undefined && sprite.angle !== undefined)\n        return {x: sprite.speed * Math.cos(sprite.angle), y: sprite.speed * Math.sin(sprite.angle)};\n    else return {x:0,y:0};\n}\n\n\nexport function centerPosition(sprite:Sprite): Point{\n    return {x: sprite.position.x + sprite.size.width/2, y: sprite.position.y + sprite.size.height/2};\n}\n\n","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Rectangle{\n    position:Point;\n    size:Size;\n\n}\n\nexport function union(rect1:Rectangle, rect2:Rectangle):Rectangle{\n    let tx2 = rect1.size.width;\n    let ty2 = rect1.size.height;\n    if ((tx2 | ty2) < 0) {\n        // This rectangle has negative dimensions...\n        // If r has non-negative dimensions then it is the answer.\n        // If r is non-existant (has a negative dimension), then both\n        // are non-existant and we can return any non-existant rectangle\n        // as an answer.  Thus, returning r meets that criterion.\n        // Either way, r is our answer.\n        return rect2;\n    }\n    let rx2 = rect2.size.width;\n    let ry2 = rect2.size.height;\n    if ((rx2 | ry2) < 0) {\n        return rect1;\n    }\n    let tx1 = rect1.position.x;\n    let ty1 = rect1.position.y;\n    tx2 += tx1;\n    ty2 += ty1;\n    const rx1 = rect2.position.x;\n    const ry1 = rect2.position.y;\n    rx2 += rx1;\n    ry2 += ry1;\n    if (tx1 > rx1) tx1 = rx1;\n    if (ty1 > ry1) ty1 = ry1;\n    if (tx2 < rx2) tx2 = rx2;\n    if (ty2 < ry2) ty2 = ry2;\n    tx2 -= tx1;\n    ty2 -= ty1;\n    return { position:{x:tx1, y:ty1},size:{width:tx2, height:ty2}};\n\n}\n\nexport function intersects(rect1:Rectangle, rect2:Rectangle):boolean{\n\n    let tw = rect1.size.width;\n    let th = rect1.size.height;\n    let rw = rect2.size.width;\n    let rh = rect2.size.height;\n    if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\n        return false;\n    }\n    const tx = rect1.position.x;\n    const ty = rect1.position.y;\n    const rx = rect2.position.x;\n    const ry = rect2.position.y;\n    rw += rx;\n    rh += ry;\n    tw += tx;\n    th += ty;\n    //      overflow || intersect\n    return ((rw < rx || rw > tx) &&\n            (rh < ry || rh > ty) &&\n            (tw < tx || tw > rx) &&\n            (th < ty || th > ry));\n}\n\nexport function pointInRect(point:Point, rect:Rectangle):boolean{\n    return point.x >= rect.position.x && point.x < rect.position.x + rect.size.width\n        && point.y >= rect.position.y && point.y < rect.position.y + rect.size.height;\n}","import { GameController } from \"./GameController\";\nimport { DefaultSprite } from \"./behaviors/DefaultSprite\";\nimport { Point, pointAsInt } from \"./types/Point\";\nimport { Sprite, xySpeed } from \"./types/Sprite\";\nimport { Size } from \"./types/Size\";\nimport { union, Rectangle, intersects, pointInRect } from \"./types/Rectangle\";\nimport { GameInitializer } from \"./GameInitializer\";\n\nfunction insert<T>(array:T[], value:T, comparator: (a:T, b:T)=>number){\n\tlet low =0;\n\tif(array.length>0){\n\t\tlet high=array.length;\n\t\twhile(low < high){\n\t\t\tlet mid = Math.floor( (low+high)/2);\n\t\t\tconst c = comparator(array[mid], value);\n\t\t\tif(c <0){\n\t\t\t\tlow = mid+1;\n\t\t\t}else if( c> 0){\n\t\t\t\thigh = mid;\n\t\t\t}else{\n\t\t\t\tlow = mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tarray.splice(low, 0, value);\n}\nfunction remove(array:any[], key:any){\n    const index = array.indexOf(key, 0);\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n}\n\nexport default class Scene<T extends GameInitializer<T>> extends DefaultSprite{\n\n    viewPort:Point = {x:0, y:0};\n    controller:GameController<T>;\n    debug: boolean = false;\n\twrapAround:boolean = false;\n\tsceneSpeed:number = 1.0;\n\tmodelSize:Size;\n\tsprites:Sprite[] = [];\n\n\tprivate collisionListeners:Sprite[] = [];\n\t\n    constructor(name:string, controller:GameController<T>, modelSize:Size={width:0.0, height:0.0}){\n        super(name);\n        this.controller = controller;\n        this.modelSize = modelSize;\n    }\n    handleKeyPressed(key: string): void {\n    }\n\n    handleMouseClick(x:number, y:number){\n    }\n\thandleTouch(x:number, y:number){\n    }\n\n\tgetSpritesAtPoint(point:Point):Sprite[]{\n\t\treturn this.sprites.filter( (s) => pointInRect(point, s) );\n\t}\n\t\n\taddSprite(sprite:Sprite) {\n\t\tthis._handleWrap(sprite.position,sprite.size);\n\t\tthis._validateSprite(sprite);\n\t\tif(!sprite.zOrder)\n\t\t\tsprite.zOrder = 0;\n\t\tinsert(this.sprites, sprite, (a,b) => a.zOrder! - b.zOrder!);\n\t\tsprite.priorPosition = sprite.position;\n\t\tif (sprite.handleCollision)\n\t\t\tthis.collisionListeners.push(sprite);\n\t}\n\n\tremoveSprite(sprite:Sprite) {\n\t\tsprite.handleKill?.();\n        if(this.debug)\n            console.log(`Remove sprite(${sprite.name}) (${sprite.position.x}, ${sprite.position.y})`);\n        remove(this.sprites, sprite);\n        remove(this.collisionListeners, sprite);\n\t}\n\n\tpublic resetGame() {\n\t    this.sprites = [];\n\t\tthis.collisionListeners = [];\n\t}\n\n    updateModel(timeSinceLastUpdate: number) {\n\t\tsuper.updateModel(timeSinceLastUpdate);\n        \n        // handle movements and check collision\n\t\tthis.handleMovement(timeSinceLastUpdate);\n\t}\n\n    handleMovement(timeSinceLastUpdate: number) {\n        const dx = timeSinceLastUpdate/1000.0;\n        const tempArray:Sprite[] = this.sprites.slice();\n\t\twhile (tempArray.length) {\n\t\t\tconst sprite:Sprite = tempArray.pop()!;\n\t\t\tif(!sprite.isAlive){\n\t\t\t\t// remove any dead sprites.\n\t\t\t\tthis.removeSprite(sprite);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet newRect;\n\t\t\tif (!sprite.isFixedPosition && sprite.speed !== undefined) {\n\t\t\t\tconst oldRect = {position:pointAsInt(sprite.position), size:sprite.size};\n\t\t\t\tconst pointSpeed = xySpeed(sprite);\n\t\t\t\tlet newPosition = {x:sprite.position.x + pointSpeed.x * dx * this.sceneSpeed,\n\t\t\t\t\t\t\t\t   y:sprite.position.y + pointSpeed.y * dx * this.sceneSpeed};\n\t\t\t\tlet wrapped = this._handleWrap(newPosition, sprite.size);\n\t\t\t\tsprite.priorPosition = oldRect.position;\n\t\t\t\tsprite.position = newPosition;\n\t\t\t\t// check collisions\n\t\t\t\tnewRect = {position: pointAsInt(sprite.position), size: sprite.size};\n\t\t\t\tif (!wrapped)\n\t\t\t\t\tnewRect = union(oldRect, newRect);\n\t\t\t\t\n\t\t\t\tif (sprite.acceleration) {\n\t\t\t\t\tif (Math.sign(sprite.acceleration\n\t\t\t\t\t\t\t+ sprite.speed) !== Math.sign(sprite\n\t\t\t\t\t\t\t.speed))\n\t\t\t\t\t\tsprite.speed = 0;\n\t\t\t\t\telse\n\t\t\t\t\t\tsprite.speed = sprite.speed + sprite.acceleration;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(sprite.canCollide){\n\t\t\t\tif(!newRect)\n\t\t\t\t\tnewRect = sprite;\n\t\t\t\tthis._handleCollision(newRect, sprite);\n\t\t\t}\n\t\t\tif(sprite.updateModel)\n\t\t\t\tsprite.updateModel(timeSinceLastUpdate);\n\t\t\ttry {\n\t\t\t\tthis._validateSprite(sprite);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(`Sprite position not valid.  Killing spite (${sprite.name}). ${error}`);\n\t\t\t\tsprite.isAlive=false;\n\t\t\t}\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthis.removeSprite(sprite);\n\t\t}\n\t}\n\n\tprivate _handleCollision( newRect:Rectangle, sprite:Sprite) {\n\t\t//need to make this more sophisticated so it doesn't break out after one collision.\n\t\tlet collisionSprite;\n\t\tif(sprite.handleCollision){\n\t\t\tfor(let i =0; i< this.sprites.length;i++){\n\t\t\t\tconst otherSprite = this.sprites[i];\n\t\t\t\tif (sprite !== otherSprite && otherSprite.canCollide) {\n\t\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\t\tsprite.handleCollision(otherSprite);\n\t\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!collisionSprite)\n\t\t\tcollisionSprite = sprite;\n\t\t\n\t\tfor(let i =0; i< this.collisionListeners.length;i++){\n\t\t\tconst otherSprite = this.collisionListeners[i];\n\t\t\tif (sprite !== otherSprite) {\n\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\totherSprite.handleCollision!(sprite);\n\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!collisionSprite.isAlive) {\n\t\t\tthis.removeSprite(collisionSprite);\n\t\t}\n\t}\n\tcount =0;\n\ttotalTime =0;\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void {\n        //enable you to embed a scene as a sprite in another scene\n        location = {x: location.x + this.viewPort.x, y:location.y+this.viewPort.y}; \n\t\tsuper.paint(location, ctx, timeSinceLastAnimation);\n\t\tlet displayedSprites =0\n\t\tfor(let sprite of this.sprites){\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthrow Error(\"No Dead Sprites Should Make it to render step.\\n\" + sprite);\n\t\t\tlet pos = pointAsInt(sprite.position);\n\t\t\t\tif(!sprite.isFixedPosition){\n\t\t\t\t\tpos = {x: pos.x - location.x, y: pos.y - location.y}\n\t\t\t\t}\n\t\t\tif(pos.x > this.size.width || pos.y > this.size.height \n\t\t\t\t|| (sprite.size.width + pos.x < 0)\n\t\t\t\t|| (sprite.size.height + pos.y < 0)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsprite.paint(pos, ctx, timeSinceLastAnimation);\n\t\t\tdisplayedSprites++;\n\t\t}\n\t\tif(this.debug){\n\t\t\tif(++this.count % 300 === 0){\n\t\t\t\tthis.totalTime  = timeSinceLastAnimation;\n\t\t\t\tthis.count =1;\n\t\t\t}else{\n\t\t\t\tthis.totalTime +=timeSinceLastAnimation;\n\t\t\t}\n\t\t\tctx.fillStyle = \"red\"\n\t\t\tctx.fillText(`FPS: ${Math.round(1000 / (this.totalTime/ ++this.count))} Alive Sprites: ${this.sprites.length} On Screen Sprites: ${displayedSprites}` , 10, this.size.height -10);\n\t\t}\n\t}\n\n\taddSprites(sprites:Sprite[] ) {\n\t\tif(!sprites || !sprites.length)\n\t\t\tthrow Error(`Attempting to add empty array of sprites in scene (${this.name})`);\n\t\tif(this.debug){\n\t\t\tconsole.log(`Bulk adding ${sprites.length} of type (${sprites[0].name})`)\n\t\t}\n\t\tsprites.forEach( (s) => this.addSprite(s) )\n\t}\n\n\tpaintBackground?(ctx: CanvasRenderingContext2D):void;\n\t\n\t_validateSprite(sprite:Sprite){\n\t\tif(sprite.position.x < 0 || sprite.position.y < 0 )\n\t\t\tthrow Error(`Sprite position less 0 (${sprite.position.x}, ${sprite.position.y})`);\n\t\tif(this.modelSize.width !==0){\n\t\t\tif(sprite.position.x >= this.modelSize.width || sprite.position.y >= this.modelSize.height)\n\t\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y}) > model(${this.modelSize.width},${this.modelSize.height})`);\n\t\t}else if(sprite.position.x >= this.size.width || sprite.position.y >= this.size.height) {\n\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y})  > screen(${this.size.width},${this.size.height}) `);\n\t\t}\n\t\tif(sprite.size.width <=0 || sprite.size.height <= 0)\n\t\t\tthrow Error(`Sprite size too small (${sprite.size.width}, ${sprite.size.height})`);\n\t\tif( (sprite.speed !== undefined &&  sprite.angle === undefined) \n\t\t\t|| (sprite.speed === undefined &&  sprite.angle !== undefined))\n\t\t\tthrow Error(`Either speed(${sprite.speed}) and angle(${sprite.angle}) are both defined or both undefined.`)\n\t}\n\t_handleWrap(position:Point, size:Size):boolean{\n\t\t// handle wrap around\n\t\tlet wrapped = false;\n\t\tif (this.wrapAround) {\n\t\t\tlet width = this.size.width;\n\t\t\tlet height = this.size.height;\n\t\t\tif(this.modelSize.width !==0){\n\t\t\t\twidth= this.modelSize.width;\n\t\t\t\theight = this.modelSize.height;\n\t\t\t}\n\t\t\tif (position.x < 0) {\n\t\t\t\tposition.x = width - size.width;\n\t\t\t\twrapped = true;\n\t\t\t} else if (position.x + size.width > width) {\n\t\t\t\tposition.x = 0;\n\t\t\t\twrapped = true;\n\t\t\t}\n\t\t\tif (position.y < 0) {\n\t\t\t\tposition.y = height - size.height;\n\t\t\t\twrapped = true;\n\t\t\t} else if (position.y + size.height > height) {\n\t\t\t\tposition.y = 0;\n\t\t\t\twrapped = true;\n\t\t\t}\n\t\t}\t\n\t\treturn wrapped;\n\t}\n\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { SpriteSheet } from \"../util/SpriteSheet\";\n\nexport class SpriteSheetBehavior implements Behavior{\n    spriteSheet:SpriteSheet;\n    framesPerSecond:number = 25;\n\tage:number = 0;\n    animateOnce:boolean;\n\trotate:boolean = false;\n\tconstructor(spriteSheet:SpriteSheet,  animateOnce:boolean = false) {\n\t\tthis.spriteSheet = spriteSheet;\n\t\tthis.animateOnce = animateOnce;\n\t}\n    init(sprite:Sprite){\n\t\tsprite.size = this.spriteSheet.size;\n\t}\n    paint(sprite:Sprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n\t\tlet frame;\n\t\tif(this.framesPerSecond && this.spriteSheet.frameCount !== 0){\n\t\t\tconst timePerFrame = 1.0 / this.framesPerSecond;\n\t\t\tframe = Math.floor( (this.age/timePerFrame ) % this.spriteSheet.frameCount);\n\t\t}else{\n\t\t\tframe =0;\n\t\t}\n\t\tconst column = Math.floor(frame % this.spriteSheet.columns) + 1;\n\t\tconst row = Math.floor( frame/this.spriteSheet.columns ) + 1 ;\n\t\tthis.spriteSheet.paint(location,ctx,this.getAngle(sprite),row,column);\t\t\n\n\t}\n\tupdateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n\t\tconst dx = timeSinceLastUpdate/1000;\n\t\tthis.age += dx;\n\t\tif(this.animateOnce){\n\t\t\tif (this.age > this.spriteSheet.frameCount / this.framesPerSecond) {\n\t\t\t\t// System.out.println(\"FPS:\" + getFramesPerSecond()\n\t\t\t\t// \t\t+ \"\\tFC:\" + getFrameCount() + \"\\tage:\" + age);\n\t\t\t\tsprite.isAlive = false;\n\t\t\t}\n\t\t}\n\t}\n\tgetAngle(sprite:Sprite){\n\t\treturn (sprite.angle) ? sprite.angle : 0;\n\t}\n}\n","import { Point } from \"../types/Point\";\nimport { SpriteSheetBehavior } from \"../behaviors/SpriteSheetBehavior\";\nimport { DefaultSprite } from \"../behaviors/DefaultSprite\";\nimport Scene from \"../Scene\";\nimport { GameInitializer } from \"../GameInitializer\";\n\n\nexport class AnimatedSprite<T extends GameInitializer<T>, S extends Scene<T>> extends DefaultSprite{\n    scene:S;\n    spriteSheetBehavior:SpriteSheetBehavior;\n\n    constructor(scene:S, name:string,position:Point ={x:0,y:0},animateOnce:boolean =false){\n        super(name, position);\n        this.scene = scene;\n        const spriteSheet = scene.controller.imagePreloader.getSpriteSheetFromCache(name)\n        this.spriteSheetBehavior =   new SpriteSheetBehavior(spriteSheet, animateOnce);\n        this.addBehavior(this.spriteSheetBehavior);\n    }\n    set animateOnce(animateOnce:boolean){\n        this.spriteSheetBehavior.animateOnce = animateOnce;\n    }\n    get animateOnce(){\n        return this.spriteSheetBehavior.animateOnce;\n    }\n}","import { GameController } from \"../gamelib/GameController\";\nimport { Point } from \"../gamelib/types/Point\";\nimport Scene from \"../gamelib/Scene\";\nimport { Sprite, xySpeed } from \"../gamelib/types/Sprite\";\nimport { Size } from \"../gamelib/types/Size\";\nimport { GameInitializer } from \"../gamelib/GameInitializer\";\nimport { AnimatedSprite } from \"../gamelib/sprites/AnimatedSprite\";\n\nfunction createWall(position:Point, size:Size, isVertical:boolean):Sprite{\n    const wall = {\n        name:'wall',\n        position,\n        size,\n        isAlive:true,\n        canCollide:false,\n        paint: function(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n            ctx.fillStyle =  \"\trgb(50,50,50)\";\n            ctx.fillRect(position.x, position.y, size.width, size.height);\n        },\n        handleCollision(otherSprite:Sprite):void{\n            const speed = xySpeed(otherSprite);\n            if(isVertical){\n                if(speed.x>0)\n                   otherSprite.position.x = this.position.x - otherSprite.size.width;\n                else\n                    otherSprite.position.x = this.position.x + this.size.width;\n                otherSprite.position.y = otherSprite.priorPosition!.y;\n                otherSprite.angle =  Math.PI - otherSprite.angle! + (Math.random() - .5 )*.2;\n            }else{\n                if(speed.y>0)\n                    otherSprite.position.y = this.position.y - otherSprite.size.height;\n                else\n                    otherSprite.position.y = this.position.y + this.size.height;\n                otherSprite.position.x = otherSprite.priorPosition!.x;\n                otherSprite.angle =  -1.0 * otherSprite.angle! + (Math.random() - .5 )*.2;\n            }\n        }\n    };\n    return wall;\n}\n\nexport class BouncingBall implements GameInitializer<BouncingBall>{\n\n    preloadImages = [{name:'ball', src:'/circles/assets/images/ball.png', rows:4, columns:8}];\n    preloadSounds = [{name:'boop', src:'/circles/assets/sounds/boop.wav'}\n                    ,{name:'error', src:'/circles/assets/sounds/error.wav'}];\n\n\tinit(controller:GameController<BouncingBall>):void {\n\t\tconst scene = new Scene('bouncing ball',controller);\n        controller.scene = scene;\n        let score =0;\n        controller.publishEvent({type:'score', value:(score)});\n        scene.handleMouseClick = function(x:number, y:number){\n            const sprites = scene.getSpritesAtPoint({x,y});\n            if(sprites.length){\n                sprites.filter( (s) => s.canCollide ).forEach( (s) => {\n                    scene.removeSprite(s);\n                    controller.publishEvent({type:'score', value:(score++)});\n                    controller.soundEffects.play('boop');\n                } );\n            }else{ \n                controller.publishEvent({type:'score', value:(score--)});\n                controller.soundEffects.play('error');\n            }\n        }\n        scene.wrapAround = false;\n        scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n                ctx.fillStyle = 'black';\n                ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n        }\n\n        const sz = scene.size;\n        const wallSize = 4;\n        //create walls\n        scene.addSprite( createWall({x:0,y:0},{width:sz.width-wallSize,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:sz.height-wallSize},{width:sz.width,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n        scene.addSprite( createWall({x:sz.width-wallSize,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n\n        const rand =  (min:number, max:number) => Math.random() * (max-min) + min;\n        for(let x=0; x<30;x++){\n            const ball = new AnimatedSprite(scene, 'ball');\n            const radius = ball.size.width/2;\n            ball.position = {x: rand(sz.width-(radius+wallSize)*2, radius+wallSize),y:rand(sz.height-(radius+wallSize)*2, radius+wallSize)};\n            ball.isAlive = true;\n            ball.speed = Math.random() * 250+100;\n            ball.angle = Math.random() * Math.PI *2;\n            ball.zOrder = Math.random() * 10 -5;\n            ball.canCollide = true;\n            ball.size = {width: ball.size.width -2, height: ball.size.height -2}\n            scene.addSprite(ball);\t\n        }\n\t}\n}","import { Point } from \"../../../gamelib/types/Point\";\nimport { Sprite } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\n\nexport function newSmallExplosion(scene:MainGameScene, position:Point):Sprite{\n    return newExplosion(scene, position, 'explosionSmall');\n}\n\nexport function newBigExplosion(scene:MainGameScene, position:Point):Sprite{\n    return newExplosion(scene, position, 'explosionBig');\n}\n\nfunction newExplosion(scene:MainGameScene, position:Point, name:string):Sprite {\n    const explosion = new AnimatedSprite(scene,name, position, true);\n    explosion.position = {x: position.x - explosion.size.width / 2\n        ,y: position.y - explosion.size.height / 2};\n    scene.controller.soundEffects.play(name);\n    return explosion;\n}","import { SpaceGame } from \"../SpaceGame\";\nimport { Sprite, centerPosition } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { newSmallExplosion } from \"./Explosion\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport Scene from \"../../../gamelib/Scene\";\n\nexport function generateOpenningSequenceAsteroids(scene:Scene<SpaceGame>, n:number):Sprite[]{\n    const sz = scene.controller.scene.size;\n    const rand =  (minn:number, max:number) => Math.random() * (max-minn) + minn;\n    const min =100;\n    const sprites:Sprite[] = [];\n    for(let x=0; x<n;x++){\n        const a = new AnimatedSprite(scene, 'asteroid', {x: rand(sz.width-min, min),y:rand(sz.height-min, min)});\n        a.speed = Math.random() * 200+50;\n        a.angle = Math.random() * Math.PI *2;\n        a.zOrder = -1;\n        a.canCollide = true;\n        a.size = {width: a.size.width, height: a.size.height}\n        sprites.push(a);\t\n    }\n    return sprites;\n}\nexport function generateGameAsteroids(scene:MainGameScene, n:number ):Sprite[]{\n    const roids = generateOpenningSequenceAsteroids(scene, n);\n    roids.forEach( (a) => {\n        a.position.x = Math.random() * scene.modelSize.width;\n        a.position.y = 0;\n        a.speed = Math.random() * 100 +50;\n        a.handleCollision = (otherSprite) =>{\n            if (otherSprite === scene.player && !scene.pause) {\n                scene.hit(10);\n                scene.addSprite(newSmallExplosion(scene, centerPosition(a)));\n                a.isAlive = false;\n            }\n        };\n    });\n    return roids;\n}","import { DefaultSprite } from \"../../../gamelib/behaviors/DefaultSprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { Point } from \"../../../gamelib/types/Point\";\n\n\nexport class Radar extends DefaultSprite{\n\n    scene:MainGameScene;\n\n    constructor(scene:MainGameScene){\n        super('Radar');\n        const margin = 3;\n        const x = Math.floor( scene.size.width * 14.0 / 16.0)- margin;\t\t\n        const width = scene.size.width - 3 - x;\n        const y = Math.floor( width / scene.modelSize.width * scene.modelSize.height);\n        this.position = {x: x-3,y:margin+50};\n        this.size = {width,height: y};\n        this.isFixedPosition = true;\n        this.zOrder = 100;\n\t\tthis.scene =scene;\n\t\tthis.canCollide = false;\n\t\tthis.handleCollision = undefined;\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n\t\tctx.strokeStyle = 'white';\n\t\tctx.strokeRect(location.x-1, location.y-1, this.size.width+2, this.size.height+2);\n\t\tctx.fillStyle = 'white';\n\n\t\tconst scale = this.size.width/this.scene.modelSize.width;\n\t\tfor(let sprite of this.scene.sprites){\n\t\t\tif(sprite === this) continue;\n\t\t\tconst x1 = Math.floor(location.x + (sprite.position.x * scale));\n\t\t\tconst y1 = Math.floor(location.y + (sprite.position.y * scale));\n\t\t\tif(sprite.name === 'enemy' )\n\t\t\t\tctx.fillStyle = 'red';\n\t\t\telse if(sprite.name === 'player')\n\t\t\t\tctx.fillStyle = 'green';\n\t\t\tctx.fillRect(x1, y1,2,2);\n\t\t\tctx.fillStyle = 'white';\n\t\t}\n\t\tctx.strokeStyle = 'red';\n\t\tconst topX = Math.floor(this.scene.viewPort.x * scale + location.x);\n\t\tconst topY = Math.floor(this.scene.viewPort.y * scale + location.y)\n\t\tconst width = Math.floor(this.scene.size.width * scale);\n\t\tconst height = Math.floor(this.scene.size.height * scale);\n\t\tctx.strokeRect(topX, topY, width, height);\n\t}\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\n\nexport class ExpirationBehavior implements Behavior{\n\tage = 0;\n\texpirationTime:number;\n\tpublic constructor(expirationTime:number){\n\t\tthis.expirationTime =  expirationTime;\n\t}\n    \n    updateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n        this.age+=timeSinceLastUpdate;\n\t\tif(this.age > this.expirationTime)\n\t\t\tsprite.isAlive = false;\n\t}\n}\n","import { MainGameScene } from \"../MainGameScene\";\nimport { Point } from \"../../../gamelib/types/Point\";\nimport { xySpeed } from \"../../../gamelib/types/Sprite\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport { SpaceGame } from \"../SpaceGame\";\nimport { Missle } from \"./Missle\";\n\nconst MAX_SPEED = 375;\n\nexport class Ship  extends AnimatedSprite<SpaceGame, MainGameScene> {\n\tshipAngle:number;\n\tlastMissleFired?:Missle;\n\n\tconstructor(scene:MainGameScene, position:Point, name:string) {\n\t\tsuper(scene,name, position);\n\t\tthis.shipAngle = 0;\n\t\tthis.speed = 0;\n\t\tthis.angle = 0;\n\t\tthis.acceleration = -.1;\n\t\tthis.canCollide = true;  \n\t\tthis.spriteSheetBehavior.getAngle = () => this.shipAngle;\n\t}\n\n\tleft() {\n\t\tthis.shipAngle += -.15;\n\t}\n\n\tright() {\n\t\tthis.shipAngle += +.15;\n\t}\n\n\tmove() {\n\t\tconst speed = xySpeed(this);\n\n\t\tlet xSpeed = speed.x + 15.0 * Math.cos(this.shipAngle);\n\t\tlet ySpeed = speed.y + 15.0 * Math.sin(this.shipAngle);\n\t\txSpeed = Math.max(Math.min(MAX_SPEED, xSpeed), MAX_SPEED * -1);\n\t\tySpeed = Math.max(Math.min(MAX_SPEED, ySpeed), MAX_SPEED * -1);\n\n\t\tthis.angle =Math.atan2(ySpeed, xSpeed);\n\t\tthis.speed =Math.hypot(xSpeed, ySpeed);\n\t}\n}\n","import { Ship } from \"./Ship\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { Point, pointAsInt } from \"../../../gamelib/types/Point\";\n\n\nexport class Player extends Ship {\n\tshield = 100;\n\tshieldAge =0;\n\t\n\tconstructor(scene:MainGameScene, position:Point) {\n\t\tsuper(scene, position, \"player\");\n\t}\n\n\t//handle viewport movement\n\tupdateModel(timeSinceLastUpdate: number):void{\n\t\tsuper.updateModel(timeSinceLastUpdate);\n\t\tlet viewport = this.scene.viewPort;\n\t\tconst size = this.scene.size;\n\t\tconst margin = {x:size.width / 3, y:size.height / 3};\n\t\tconst position = pointAsInt(this.position);\n\t\tif(position.x < viewport.x + margin.x)\n\t\t\tviewport.x = position.x - margin.x;\n\t\telse if(position.x > viewport.x + size.width - margin.x)\n\t\t\tviewport.x = position.x - size.width + margin.x;\n\t\tif(position.y < viewport.y + margin.y)\n\t\t\tviewport.y = position.y - margin.y;\n\t\telse if(position.y > viewport.y + size.height - margin.y)\n\t\t\tviewport.y = position.y - size.height + margin.y;\n\t\tthis.scene.viewPort = {x:Math.min(Math.max(viewport.x, 0), this.scene.modelSize.width- size.width)\n\t\t\t,y:Math.min(Math.max(viewport.y, 0), this.scene.modelSize.height- size.height)};\n\t}\n\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n\t\tsuper.paint(location,ctx,timeSinceLastAnimation);\t\n\t\tif(this.shieldAge){\n\t\t\tthis.shieldAge -= timeSinceLastAnimation;\n\t\t\tif(this.shieldAge > 0){\n\t\t\t\t//TODO animate shield\n\t\t\t}else{\n\t\t\t\tthis.shieldAge = 0;\n\t\t\t}\n\t\t}\n\t}\n\tanimateShield(){\n\t\tthis.shieldAge = 1000;\n\t}\n}\n","import { MainGameScene } from \"../MainGameScene\";\nimport { Ship } from \"./Ship\";\n\nexport class Enemy extends Ship {\n\n    constructor(scene:MainGameScene) {\n        super(scene, {x:Math.floor(Math.random() * scene.modelSize.width), y:50}, \"enemy\");\n        this.speed = 100;\n        this.angle = Math.random();\n        this.shipAngle = 0;\n    }\n\n    private count:number =0;\n\n    updateModel(timeSinceLastUpdate: number):void{\n        super.updateModel(timeSinceLastUpdate);\n        const xDist = this.position.x - this.scene.player.position.x;\n        const yDist = this.position.y - this.scene.player.position.y;\n        const distance = Math.hypot(xDist, yDist);\n        if (distance > 1500)\n            return;\n        const requiredHeading = Math.atan2(yDist, xDist);\n        const crossproduct = Math.sin(requiredHeading - this.shipAngle);\n\n        if (crossproduct > .1) \n            this.shipAngle -= .1;\n        else if (crossproduct < -.1)\n            this.shipAngle += .1 ;\n        else if (this.count++ % Math.max(100 - this.scene.level * 20, 30) === 0 && distance < 600   )\n            this.scene.fire(this);\n        if (distance > 300) {\n            this.move();\n        }\n    }\n}","import { Sprite } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport { SpaceGame } from \"../SpaceGame\";\nimport { Point } from \"../../../gamelib/types/Point\";\nimport { ExpirationBehavior } from \"../../../gamelib/behaviors/ExpirationBehavior\";\n\nconst NAME = \"missle\";\n\nexport class Missle extends AnimatedSprite<SpaceGame, MainGameScene>{\n\towner:Sprite;\n\tbehavior:ExpirationBehavior;\n\tconstructor(position:Point,angle:number, speed:number,\n\t\t\towner:Sprite, scene:MainGameScene, expiration:number) {\n\t\tsuper(scene,NAME, position);\n\t\tthis.owner = owner;\n\t\tthis.angle = angle;\n\t\tthis.speed = speed;\n\t\tthis.acceleration = 10;\n\t\tthis.canCollide = true;\n\t\tthis.behavior =new ExpirationBehavior(expiration);\n\t\tthis.addBehavior(this.behavior);\n\t}\n\t\n\thandleCollision(otherSprite:Sprite):void{\n\t\tif(otherSprite === this.owner || otherSprite.name === NAME )\n\t\t\treturn;\n\t\tthis.isAlive = false;\n\t\tthis.scene.missleHit(this.owner,otherSprite);\n\t}\n}","import { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { Size } from \"../types/Size\";\n\nexport class TitleSprite implements Sprite{\n    name: string = 'Title';\n    position: Point = {x:0,y:0};\n    size: Size = {width:1, height:1};\n    isAlive: boolean = true;\n    zOrder: number = 100;\n    canCollide: boolean = false;\n    isFixedPosition = true;\n    title:string;\n    subtitle1:string;\n    subtitle2:string;\n\n    constructor(title:string, subtitle1:string, subtitle2:string){\n        this.title = title;\n        this.subtitle1 = subtitle1;\n        this.subtitle2 = subtitle2;\n    }\n\n    paint(location: Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void {\n        //ctx.measureText\n        const w = ctx.canvas.width,  h = ctx.canvas.height;\n        const oldFont = ctx.font;\n        function shadowText(txt:string, x:number,y:number, i:number){\n            ctx.fillStyle = \"grey\";\n            ctx.fillText(txt, x+i, y+i);\n            ctx.fillStyle = \"white\";\n            ctx.fillText(txt, x,y);\n        }\n\n        ctx.font = (w>500) ? (w>800) ? \"110px Electrolize\": \"60px Electrolize\" : \"40px Electrolize\";\n        let measure = ctx.measureText(this.title);\n        let hpos = h/3;\n        shadowText(this.title, (w-measure.width)/2, hpos, 3);\n        const subHeight = (w>500) ? (w>800) ? 30: 24 : 18;\n        ctx.font = `${subHeight}px Electrolize`;\n        measure = ctx.measureText(this.subtitle1);\n        hpos += subHeight*2;\n        shadowText(this.subtitle1, (w-measure.width)/2,hpos, 1);\n\n        measure = ctx.measureText(this.subtitle2);\n        hpos += subHeight*2;\n        shadowText(this.subtitle2, (w-measure.width)/2,hpos,1);\n\n        ctx.font = oldFont;\n    }\n\n}","import { GameController } from \"../../gamelib/GameController\";\nimport Scene from \"../../gamelib/Scene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { Point } from \"../../gamelib/types/Point\";\nimport { Radar } from \"./sprites/Radar\";\nimport { centerPosition, Sprite } from \"../../gamelib/types/Sprite\";\nimport { ExpirationBehavior } from \"../../gamelib/behaviors/ExpirationBehavior\";\nimport { launchOpenningSequence } from \"./OpenningSequence\";\nimport { newBigExplosion, newSmallExplosion } from \"./sprites/Explosion\";\nimport { Player } from \"./sprites/Player\";\nimport { Enemy } from \"./sprites/Enemy\";\nimport { Missle } from \"./sprites/Missle\";\nimport { launchBetweenLevelsScene } from \"./BetweenLevelScene\";\nimport { Ship } from \"./sprites/Ship\";\nimport { generateGameAsteroids } from \"./sprites/Asteroids\";\n\n\nexport class MainGameScene extends Scene<SpaceGame> {\n    _score:number=0;\n    level:number;\n\tstars:Point[] = []\n\tplayer:Player;\n\talienCount:number;\n\tpause:boolean = false;\n\n    constructor(controller:GameController<SpaceGame>, level:number, score:number){\n        super('MainGameScene', controller);\n        this.level = level;\n        this.score = score;\n        controller.scene = this;\n\t\tthis.modelSize = {width: this.size.width *3, height: this.size.height*3};\n\t\tconst area = this.modelSize.width * this.modelSize.height;\n        this.wrapAround = true;\n\t\t\n        this.addSprites(generateGameAsteroids(this, Math.floor( (area/300000)*level))) ;\n        \n\t\tthis.createStars( Math.floor(area/9000));\n        \n        this.addSprite(new Radar(this));\n\n\t\tconst center = { x:this.modelSize.width/2, y:this.modelSize.height/2};\n\t\tthis.viewPort = {x:center.x - this.size.width/2, y:center.y - this.size.height/2 };\n\t\t\n\t\tthis.player = new Player(this, center);\n\t\tthis.addSprite(this.player);\n\n\t\tthis.alienCount = level;\n\t\tfor (let i = 0; i < this.alienCount; i++)\n\t\t\tthis.addSprite(new Enemy(this));\n\n\t\tthis.speed = 1;\n\t}\n\n\tfire(ship:Ship) {\n\t\tif(ship.lastMissleFired && ship.lastMissleFired.behavior.age < 250 && ship.lastMissleFired.isAlive){\n\t\t\treturn;\n\t\t}\n\t\tconst center = centerPosition(ship);\n\t\tconst pos =  {x:center.x + Math.cos(ship.shipAngle) * ship.size.width,\n\t\t\t\t\ty:center.y + Math.sin(ship.shipAngle) * ship.size.height};\n\t\tlet expiration:number;\n\t\tif (this.player === ship) {\n\t\t\texpiration = 1500;\n\t\t\tthis.controller.soundEffects.play(\"missle\");\n\n\t\t} else {\n\t\t\texpiration = 1000;\n\t\t\tthis.controller.soundEffects.play(\"alienMissle\");\n\t\t}\n\t\tconst missle = new Missle(pos, ship.shipAngle, ship.speed + 50, ship, this, expiration);\n\t\tship.lastMissleFired = missle;\n\t\tthis.addSprite(missle);\n\t}\n\n\thandleKeyPressed(key: string): void {\n\t\tif(this.pause)\n\t\t\treturn;\n\t\tswitch(key){\n\t\t\tcase 'a':\n\t\t\tcase 'ArrowLeft':\n\t\t\t  \tthis.player.left();\n\t\t\t  \tbreak;\n\t\t\tcase 'w':\n\t\t\tcase 'ArrowUp':\n\t\t\t  \tthis.player.move();\n\t\t\t  \tbreak;\n\t\t\tcase 'd':\n\t\t\tcase 'ArrowRight':\n\t\t\t  \tthis.player.right();\n\t\t\t  \tbreak;\n\t\t\tcase ' ':\n\t\t\t\tthis.fire(this.player);\n\t\t\t\tbreak;\n\t\t  }\n\t}\n\n\tpaintBackground(ctx: CanvasRenderingContext2D) {\n\t\tctx.fillStyle = 'black';\n        ctx.fillRect(0, 0, this.size.width, this.size.height);\n        ctx.fillStyle = 'white';\n    \tfor(let star of this.stars){\n\t\t\tconst xP = star.x - this.viewPort.x;\n\t\t\tconst yP = star.y - this.viewPort.y;\n\t\t\tif (xP < this.size.width && yP < this.size.height && xP > 0 && yP > 0)\n\t\t\t\tctx.fillRect(xP, yP, 1, 1);\t\t\n\t\t}\n\t}\n\n\tgameOver() {\n\t\tthis.pause = true;\n\t\tthis.controller.soundEffects.play(\"gameOver\");\n\n\t\tthis.addBehavior(new ExpirationBehavior(4000));\n\t\tthis.addBehavior({ handleKill: () => {\n\t\t\tif(this.controller.gameInitializer.highscore < this.score){\n\t\t\t\tthis.controller.gameInitializer.highscore = this.score;\n\t\t\t\tthis.controller.soundEffects.play(\"newHighScore\");\n\t\t\t}\n\t\t\tlaunchOpenningSequence(this.controller);\n\t\t}});\n\t}\n\n\thit(hitPoints:number){\n\t\tif(this.player.shield-hitPoints <= 0){\n\t\t\tconst center = centerPosition(this.player);\n\t\t\tthis.addSprite(newBigExplosion(this, center));\n\t\t\tthis.player.isAlive = false;\n\t\t\tthis.gameOver();\n\t\t}else{\n\t\t\tthis.player.shield -= hitPoints;\n\t\t\tthis.player.animateShield();\n\t\t}\t\n\t}\n\tmissleHit(owner:Sprite, otherSprite:Sprite) {\n\t\tif(this.debug){\n\t\t\tconsole.log(`Missle from ${owner.name} hits sprite ${otherSprite.name}`);\n\t\t}\n\t\tif(this.pause)\n\t\t\treturn;\n\t\n\t\tif (otherSprite.name === 'player' || otherSprite.name === 'enemy') {\n\t\t\totherSprite.isAlive = false;\n\t\t\tthis.addSprite(newBigExplosion(this, centerPosition(otherSprite)));\n\t\t\tif(otherSprite !== this.player){\n\t\t\t\tthis.score += 50;\n\t\t\t\tif(--this.alienCount !== 0)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tthis.pause =true;\n\t\t\t\tthis.addBehavior(new ExpirationBehavior(4000));\n\t\t\t\tthis.addBehavior({ handleKill: ()=> launchBetweenLevelsScene(this.controller, this.level, this.score)});\n\t\t\t}else{\n\t\t\t\tthis.gameOver();\n\t\t\t}\n\t\t}else if(owner === this.player &&  otherSprite.name === 'asteroid'){\n\t\t\totherSprite.isAlive = false; \n\t\t\tthis.addSprite(newSmallExplosion(this, centerPosition(otherSprite)));\n\t\t\tthis.score += 5;\n\t\t}\n\t}\n\tset score(score:number){\n\t\tthis._score = score;\n\t\tthis.controller.publishEvent({type:'score', value:(this.score)});\n\t}\n\tget score():number{\n\t\treturn this._score;\n\t}\n\tprivate createStars(n:number){\n\t\tfor (let i = 0; i < n; i++)\n\t\t\tthis.stars.push( {x: Math.floor(Math.random()*this.modelSize.width),\n\t\t\ty:  Math.floor(Math.random()*this.modelSize.height)} );\n\t}\n\thandleMouseClick(x:number, y:number){\n\t\tif(this.pause)\n\t\t\treturn;\n\t\tthis.handleTouch(x,y);\n\t\tthis.fire(this.player);\n\t}\n\n\thandleTouch(x:number, y:number){\n\t\tconst xDist = this.player.position.x - x - this.viewPort.x;\n        const yDist = this.player.position.y - y - this.viewPort.x;\n        const distance = Math.hypot(xDist, yDist);\n        const requiredHeading = Math.atan2(yDist, xDist);\n        const crossproduct = Math.sin(requiredHeading - this.player.shipAngle);\n\n        if (crossproduct > .1) \n            this.player.shipAngle -= .2;\n        else if (crossproduct < -.1)\n            this.player.shipAngle += .2 ;\n        if (distance >100) {\n\t\t\tthis.player.move();\n\t\t\tthis.acceleration = -.02;\n        }else{\n\t\t\tthis.acceleration = -1.;\n\t\t}\n\t}\n}\n","import Scene from \"../../gamelib/Scene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { MainGameScene } from \"./MainGameScene\";\nimport { generateOpenningSequenceAsteroids } from \"./sprites/Asteroids\";\nimport { TitleSprite } from \"../../gamelib/sprites/TitleSprite\";\n\nexport function launchBetweenLevelsScene(controller:GameController<SpaceGame>, level:number, score:number){\n    const scene = new Scene('BetweenLevelScene',controller);\n    controller.scene = scene;\n    controller.publishEvent({type:'score', value:score});\n    scene.wrapAround = true;\n\n    scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n            ctx.fillStyle = 'black';\n            ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n    }\n    scene.handleKeyPressed = (key: string) => { if(key==='n') new MainGameScene(controller,level+1,score) };\n    scene.handleMouseClick = () => new MainGameScene(controller,level+1,score);\n    scene.addSprite( new TitleSprite(`LEVEL ${level} COMPLETE`, `Score ${score}`\n        , 'CLICK OR PRESS N FOR NEXT LEVEL' ) );\n    scene.addSprites(generateOpenningSequenceAsteroids(scene, 30));\n    scene.controller.soundEffects.play(\"levelComplete\");\n    return scene;\n}\n","import { GameController } from \"../../gamelib/GameController\";\nimport Scene from \"../../gamelib/Scene\";\nimport { generateOpenningSequenceAsteroids } from \"./sprites/Asteroids\";\nimport { MainGameScene } from \"./MainGameScene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { TitleSprite } from \"../../gamelib/sprites/TitleSprite\";\n\nexport function launchOpenningSequence(controller:GameController<SpaceGame>){\n    const scene = new Scene('space game',controller);\n    controller.scene = scene;\n    controller.publishEvent({type:'score', value:0});\n    scene.wrapAround = true;\n\n    scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n            ctx.fillStyle = 'black';\n            ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n    }\n    scene.handleKeyPressed = (key: string) => { if(key==='n') new MainGameScene(controller,1,0) };\n    scene.handleMouseClick = () => new MainGameScene(controller,1,0);\n\n    scene.addSprite( new TitleSprite('Space Hunter', `High Score ${controller.gameInitializer.highscore}`\n        , 'CLICK OR PRESS N FOR NEW GAME' ) );\n     scene.addSprites(generateOpenningSequenceAsteroids(scene, 30));\n}","import { GameInitializer } from \"../../gamelib/GameInitializer\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { launchOpenningSequence } from \"./OpenningSequence\";\n\nexport class SpaceGame implements GameInitializer<SpaceGame>{\n    \n    highscore:number =0;\n\n    preloadImages = [{name:'asteroid', src:'/circles/assets/images/asteroid.png', rows:2, columns:10}\n                    ,{name:'player' , src: '/circles/assets/images/Enemy.png'}\n                    ,{name: 'enemy', src:'/circles/assets/images/nightraider-small.png' }\n                    ,{name: 'explosionSmall', src: '/circles/assets/images/ExplosionSheetSmall.png', rows:4, columns:4}\n                    ,{name: 'explosionBig', src: '/circles/assets/images/ExplosionSheet2.png', rows:6, columns:8}                                        \n                    ,{name: 'missle', src: '/circles/assets/images/Laser.png'}                                        \n];\n    preloadSounds = [{name:'missle', src:'/circles/assets/sounds/missle_fire.wav'}\n                    ,{name:'alienMissle', src:'/circles/assets/sounds/alien_missle_fire.wav'}\n                    ,{name:'gameOver', src:'/circles/assets/sounds/game_over.wav'}\n                    ,{name:'levelComplete', src:'/circles/assets/sounds/level_complete.wav'}\n                    ,{name:'explosionSmall', src:'/circles/assets/sounds/small_explosion.wav'}\n                    ,{name:'explosionBig', src:'/circles/assets/sounds/big_explosion.wav'}\n                    ,{name:'newHighScore', src:'circles/assets/sounds/new_high_score.wav'}];\n\n\tinit(controller:GameController<SpaceGame>):void {\n        launchOpenningSequence(controller);  \n        controller.debug = true;      \n\t}\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link  as ReactLink, Box } from '@material-ui/core';\nimport {  AppBar, Toolbar,Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n      },\n    container:{\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n        overflowY:'auto',\n    },\n    root: {\n        maxWidth: 345,\n        marginBottom: theme.spacing(3),\n    },\n    media: {\n        height: 140,\n    },\n    link:{\n        textDecoration: 'none'\n    },\n    githublink:{\n        marginLeft: theme.spacing(3),\n    }\n}));\n\nexport  function Home() {\n    const classes = useStyles();\n\n    return (\n\n        <React.Fragment>\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Circles\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box component=\"div\" overflow=\"visible\">\n        <Grid container alignItems=\"center\" justify = \"center\" direction=\"column\" className={classes.container} >\n            <Card className={classes.root}>\n                <Link to=\"/circles/ball\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/balls-screen.png\"\n                            title=\"Play Bouncing Ball\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Bouncing Ball\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Try to catch the balls.  If you miss your score goes down, so be careful!  Built this to test the library.\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n\n            <Card className={classes.root}>\n                <Link to=\"/circles/space\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/asteroids-screen.png\"\n                            title=\"Play Asteroids\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Space Hunter\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Shoot all the asteroids.  Use W-A-S-D to move around and space bar to fire.  Watch out for the enemy...\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n            <ReactLink  component=\"button\" variant=\"body2\" className={classes.githublink}\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </ReactLink>\n        </Grid>\n        </Box>\n</React.Fragment>\n    );\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport GameComponent from './gamecontainer/GameComponent';\nimport { BouncingBall } from './sample/BouncingBall';\nimport { SpaceGame } from './sample/space/SpaceGame';\nimport { Home } from './Home';\n\nexport default function App() {\n  return (\n    <Router>\n        <Switch>\n          <Route path=\"/circles/space\">\n          <GameComponent gameInitializer={new SpaceGame()} ></GameComponent>\n          </Route>\n          <Route path=\"/circles/ball\">\n          <GameComponent gameInitializer={new BouncingBall()} ></GameComponent>\n          </Route>\n          <Route path=\"/circles\">\n            <Home />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Electrolize',\n  },\n    overrides: {\n\n        MuiCssBaseline: {\n          '@global': {\n            body: {\n                width: '100%',\n                height: '100%',\n                margin: '0',\n            }\n          },\n        },\n      },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-electrolize';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}