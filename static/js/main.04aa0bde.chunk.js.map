{"version":3,"sources":["gamelib/util/SpriteSheet.ts","gamelib/util/ImagePreloader.ts","gamelib/util/SoundEffects.ts","gamelib/GameController.ts","gamecontainer/InfoDialog.tsx","gamecontainer/GameComponent.tsx","gamelib/behaviors/DefaultSprite.ts","gamelib/types/Point.ts","gamelib/types/Sprite.ts","gamelib/types/Rectangle.ts","gamelib/Scene.ts","gamelib/behaviors/SpriteSheetBehavior.ts","gamelib/sprites/AnimatedSprite.ts","sample/BouncingBall.ts","sample/space/sprites/Explosion.ts","sample/space/sprites/Asteroids.ts","sample/space/sprites/Radar.ts","gamelib/behaviors/ExpirationBehavior.ts","sample/space/sprites/Ship.ts","sample/space/sprites/Player.ts","sample/space/sprites/Enemy.ts","sample/space/sprites/Missle.ts","gamelib/sprites/TitleSprite.ts","sample/space/MainGameScene.ts","sample/space/BetweenLevelScene.ts","sample/space/OpenningSequence.ts","sample/space/SpaceGame.ts","Home.tsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["SpriteSheet","image","rows","columns","size","this","width","Math","floor","height","location","ctx","angle","row","column","Error","w","h","translate","x","y","rotate","drawImage","srcX","srcY","setTransform","ImagePreloader","imageCache","Map","loadsCompleted","nLoads","loadCallback","callback","key","spriteSheet","get","images","des","Image","src","onload","_createOnLoad","newImage","canvas","document","createElement","getContext","top","imgd","getImageData","pix","data","newColor","i","n","length","r","g","b","putImageData","output","toDataURL","makeTransparent","sheet","set","name","SoundEffects","effectPreloads","sounds","rate","_mute","effect","Howl","preload","sound","play","console","log","mute","Howler","GameController","gameInitializer","debug","keysPressed","imagePreloader","soundEffects","isShutdown","pause","readyCallback","_scene","gameEventListeners","preloadSounds","preLoadImages","preloadImages","registerCallback","_handleImagesLoaded","window","innerWidth","innerHeight","init","scene","event","type","value","forEach","handler","gameEventListener","push","that","keyDown","keyUp","delete","mouseDown","e","rect","getBoundingClientRect","clientX","left","clientY","preventDefault","handleMouseClick","touchMove","touch","targetTouches","handleTouchMove","addEventListener","lastTime","restart","requestAnimationFrame","loop","time","removeEventListener","timeSinceLastAnimation","_updateScene","handleKeyPressed","save","paintBackground","paint","updateModel","isAlive","handleKill","restore","fillStyle","fillRect","useStyles","makeStyles","theme","createStyles","infoButton","InfoDialog","React","useState","open","setOpen","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","IconButton","edge","className","onClick","color","aria-label","Info","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","component","variant","DialogActions","Button","autoFocus","GameComponent","withStyles","root","flexGrow","controlButton","score","marginRight","spacing","title","link","textDecoration","backdrop","zIndex","drawer","props","canvasRef","createRef","gameController","state","imagesLoaded","current","setState","subscribeEvent","stopPropagation","Fragment","AppBar","position","style","background","boxShadow","Toolbar","Typography","to","handlePause","PlayCircleOutline","PauseCircleOutline","handleRestart","Refresh","handleMute","VolumeOff","VolumeUp","Backdrop","CircularProgress","ref","Component","DefaultSprite","speed","acceleration","canCollide","isFixedPosition","zOrder","behaviors","behavior","timeSinceLastUpdate","otherSprite","handleCollision","pointAsInt","point","round","xySpeed","sprite","undefined","cos","sin","centerPosition","union","rect1","rect2","tx2","ty2","rx2","ry2","tx1","ty1","rx1","ry1","intersects","tw","th","rw","rh","tx","ty","rx","ry","remove","array","index","indexOf","splice","Scene","controller","modelSize","viewPort","wrapAround","sceneSpeed","sprites","collisionListeners","count","totalTime","filter","s","pointInRect","_handleWrap","_validateSprite","comparator","low","high","mid","c","insert","a","priorPosition","handleMovement","dx","tempArray","slice","pop","newRect","oldRect","pointSpeed","newPosition","wrapped","sign","_handleCollision","error","removeSprite","collisionSprite","displayedSprites","pos","fillText","addSprite","SpriteSheetBehavior","animateOnce","framesPerSecond","age","frame","frameCount","timePerFrame","getAngle","AnimatedSprite","spriteSheetBehavior","getSpriteSheetFromCache","addBehavior","createWall","isVertical","PI","random","BouncingBall","publishEvent","getSpritesAtPoint","sz","rand","min","max","ball","radius","newSmallExplosion","newExplosion","newBigExplosion","explosion","generateOpenningSequenceAsteroids","minn","Radar","margin","strokeStyle","strokeRect","scale","x1","y1","topX","topY","ExpirationBehavior","expirationTime","Ship","shipAngle","lastMissleFired","xSpeed","ySpeed","MAX_SPEED","atan2","hypot","Player","shield","shieldAge","viewport","Enemy","xDist","player","yDist","distance","requiredHeading","crossproduct","level","fire","move","Missle","owner","expiration","missleHit","TitleSprite","subtitle1","subtitle2","oldFont","font","shadowText","txt","measure","measureText","hpos","subHeight","MainGameScene","_score","stars","alienCount","area","addSprites","roids","hit","generateGameAsteroids","createStars","center","ship","missle","right","star","xP","yP","highscore","launchOpenningSequence","hitPoints","gameOver","animateShield","launchBetweenLevelsScene","SpaceGame","appBar","container","marginTop","marginBottom","padding","up","maxWidth","media","githublink","marginLeft","Home","noWrap","Box","overflow","Grid","alignItems","justify","direction","Card","CardActionArea","CardMedia","CardContent","gutterBottom","App","path","Boolean","hostname","match","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","body","ReactDOM","render","ThemeProvider","CssBaseline","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.04aa0bde.chunk.js","sourcesContent":["import { Size } from \"../types/Size\";\nimport { Point } from \"../types/Point\";\n\nexport class SpriteSheet{\n    readonly rows:number;\n    readonly columns:number;\n    readonly image:HTMLImageElement;\n    readonly size:Size;\n    constructor(image:HTMLImageElement, rows:number = 1, columns:number =1) {\n        this.image = image;\n        this.rows = rows;\n        this.columns = columns;\n        this.size = {width:Math.floor(this.image.width/this.columns),\n            height: Math.floor(this.image.height/this.rows)}\n    }\n    paint(location:Point, ctx: CanvasRenderingContext2D, angle:number= 0,row:number=1, column:number=1):void{\n        if(row<1 || row > this.rows || column < 1 || column > this.columns)\n            throw Error(`Row and columns of sprite need to be in bounds (${row},${column})`);\n        const w = this.size.width, h = this.size.height;\n        if(angle){\n            ctx.translate(location.x + w / 2.0, location.y+ h / 2.0);\n            ctx.rotate(angle);\n            location.x = 0 - w / 2.0;\n            location.y = 0 - h / 2.0;\n        }\n        if(this.columns === 1 && this.rows === 1)\n            ctx.drawImage(this.image, location.x, location.y, w , h);\n        else{\n            const srcX = Math.floor(this.image.width * ((column-1)/this.columns));\n            const srcY = Math.floor(this.image.height * ((row-1)/this.rows));\n            ctx.drawImage(this.image, srcX, srcY, w, h, location.x, location.y, w, h);\n        }\n        if(angle){\n            ctx.setTransform(1, 0, 0, 1, 0, 0);    \n        }\n    }\n    get frameCount():number{\n        return this.rows*this.columns;\n    }\n}","import { SpriteSheet } from \"./SpriteSheet\";\n\nexport interface PreloadImage{\n    name:string;\n    src:string;\n    rows?:number;\n    columns?:number;\n}\n\n\nfunction makeTransparent(image: HTMLImageElement):HTMLImageElement  {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n    canvas.height = image.height;\n    canvas.width = image.width;\n    ctx.drawImage(image,0,0);\n    const imgd = ctx.getImageData(0, 0, image.width, image.height);\n    const pix = imgd.data;\n    const newColor = {r:0,g:0,b:0, a:0};\n    let top:number[]\n    for (let i = 0, n = pix.length; i <n; i += 4) {\n        const r = pix[i], g = pix[i+1],b = pix[i+2];\n        if(i===0){\n            top = [r,g,b];\n        }\n        if(r === top![0] && g === top![1] && b === top![2]){ \n            // Change the white to whatever.\n            pix[i] = newColor.r;\n            pix[i+1] = newColor.g;\n            pix[i+2] = newColor.b;\n            pix[i+3] = newColor.a;\n        }\n    }\n    ctx.putImageData(imgd, 0,0);\n    const output = document.createElement('img');\n    output.src = canvas.toDataURL('image/png');\n    return output;\n}\n\n\nexport class ImagePreloader{\n    imageCache: Map<string,SpriteSheet> = new Map();\n    loadsCompleted:number =0;\n    nLoads:number = 0;\n\n    private loadCallback?:() => void;\n\n    registerCallback(callback:() => void  ){\n        if(this.loadsCompleted === this.nLoads)\n            callback();\n        this.loadCallback = callback;\n    }\n    \n    getSpriteSheetFromCache(key:string):SpriteSheet{\n        const spriteSheet = this.imageCache.get(key);\n        this.nLoads++;\n        if(!spriteSheet)\n            throw Error(\"unable to load image: \" + key);\n        return spriteSheet;\n    }\n    \n    preLoadImages(images:PreloadImage[]):void{\n        \n        for(let des of images){\n            const image = new Image();\n            this.nLoads++;\n            image.src = des.src;\n            image.onload = this._createOnLoad(image, des);\n        }\n    }\n    private _createOnLoad(image:HTMLImageElement, des:PreloadImage){\n        return () => {\n            const newImage = makeTransparent(image);\n            newImage.onload = () => {\n                const rows = (des.rows) ? des.rows : 1;\n                const columns = (des.columns) ? des.columns :1;\n                const sheet = new SpriteSheet(newImage, rows, columns);\n                this.imageCache.set(des.name, sheet);\n                if(++this.loadsCompleted === this.nLoads && this.loadCallback){\n                    this.loadCallback();\n                }\n            }\n        };\n    }\n}\n\n//export var __IMAGEPRELOADER__:ImagePreloader = new ImagePreloader();\n","import { Howl, Howler } from 'howler';\n\n\nexport interface PreloadSoundEffect{\n    name:string;\n    src:string;\n}\n\nexport default class SoundEffects {\n    sounds:Map<string, Howl> = new Map();\n    rate:number = 1.0;\n\n    private _mute:boolean = false;\n\n  constructor (effectPreloads:PreloadSoundEffect[]) {\n    for(let effect of effectPreloads )\n        this.sounds.set(effect.name, new Howl({src:effect.src,preload: true}) );\n    this.rate = 1.0;\n    this._mute = false;\n  }\n\n  play (key:string) {\n    const sound = this.sounds.get(key);\n    if(sound){\n        sound.rate(this.rate);\n        sound.play();\n    }else{\n        console.log(`Sound not found! ${key}`);\n    }\n  }\n\n  get mute ():boolean { return this._mute; }\n\n  set mute (mute:boolean) {\n    Howler.mute(mute);\n    this._mute = mute;\n  }\n}\n","import Scene from './Scene';\nimport { ImagePreloader } from './util/ImagePreloader';\nimport { GameInitializer } from './GameInitializer';\nimport SoundEffects from './util/SoundEffects';\n\nexport interface GameEvent{\n    type:string;\n    value:any;\n}\n\nexport interface HandleGameEvent{\n    (event:GameEvent):void;\n}\n\n\nexport class GameController<T extends GameInitializer<T>>{\n\n    debug: boolean = false;\n    keysPressed: Map<string, boolean> = new Map();\n    imagePreloader:ImagePreloader;\n    soundEffects:SoundEffects;\n    canvas?:HTMLCanvasElement;\n    isShutdown:boolean = false;\n    pause:boolean = false;\n    gameInitializer:T;\n    \n    private _mute:boolean = false;\n    private readyCallback?: () => void;\n    private _scene?: Scene<T>;\n    \n    private gameEventListeners:HandleGameEvent[] = [];\n    constructor(gameInitializer:T){\n        this.gameInitializer = gameInitializer;\n        this.soundEffects = new SoundEffects(gameInitializer.preloadSounds || []);\n        this.imagePreloader = new ImagePreloader();\n        this.imagePreloader.preLoadImages(gameInitializer.preloadImages);\n    }\n\n    init(canvas:HTMLCanvasElement, readyCallback: () => void) {\n        this.readyCallback = readyCallback;\n        this.canvas = canvas;  \n        this.imagePreloader.registerCallback( ()=>{  this._handleImagesLoaded()});\n    }\n\n    restart(){\n        const canvas = this.canvas!;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.gameInitializer.init(this);\n        if(!this.scene)\n            throw Error(\"Game Initializer must set scene.\");\n    }\n\n    set scene(scene: Scene<T>) {\n        if (this.debug)\n            console.log(`SetScene: ${scene.name}`);\n        scene.debug = this.debug;\n        const canvas = this.canvas;\n        scene.size = {width:canvas!.width, height:canvas!.height};\n        this._scene = scene;\n    }\n    get scene(): Scene<T> {\n        return this._scene!;\n    }\n\n    publishEvent(event:GameEvent){\n        if(this.debug)\n            console.log(`Publish Game Event: {${event.type}, ${event.value}}`);\n        this.gameEventListeners.forEach( (handler) => handler(event));\n    }\n\n    subscribeEvent(gameEventListener:HandleGameEvent){\n        this.gameEventListeners.push(gameEventListener);\n    }\n    set mute(mute:boolean){\n        this._mute = mute;\n        this.soundEffects.mute = mute;\n    }\n    get mute(){\n        return this._mute;\n    }\n    private _handleImagesLoaded(){\n        const that = this;\n        const canvas = this.canvas!;\n        const keyDown = (event:KeyboardEvent) => that.keysPressed.set(event.key, true);\n        const keyUp = (event:KeyboardEvent) => that.keysPressed.delete(event.key);\n        const mouseDown = (e:MouseEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const x = e.clientX - rect.left, y = e.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`MouseDown Event: (${x},${y})`);\n            if(!that.pause && that.scene){\n                that.scene.handleMouseClick(x,y)\n            }\n        };\n        const touchMove = (e:TouchEvent) => {\n            const rect = canvas.getBoundingClientRect();\n            const touch = e.targetTouches[0];\n            const x = touch.clientX - rect.left, y = touch.clientY - rect.top\n            e.preventDefault();\n            if(that.debug)\n                console.log(`TouchMove Event: (${x},${y})`);\n            if(!that.pause && that.scene){\n                that.scene.handleTouchMove(x,y);\n            }\n        };\n        \n        document.addEventListener('keydown', keyDown);\n        document.addEventListener('keyup',keyUp);\n        canvas.addEventListener('mousedown', mouseDown);\n        canvas.addEventListener(\"touchmove\", touchMove, false);\n\n        let lastTime = 0;\n        this.restart();\n        \n        function loop(time: number) {\n            if(that.isShutdown){\n                if(that.debug)\n                    console.log(\"shutting down game controller.\");\n                document.removeEventListener('keydown', keyDown);\n                document.removeEventListener('keyup',keyUp);\n                canvas.removeEventListener('mousedown', mouseDown);\n                canvas.removeEventListener(\"touchmove\", touchMove, false);\n                return;\n            }\n            let timeSinceLastAnimation = (!lastTime) ? 0: time - lastTime;\n            lastTime = time;\n            if(timeSinceLastAnimation > 100 || that.pause){\n                //assume animation thread was paused due to moving off window/browser\n                timeSinceLastAnimation = 0;\n            }\n            const ctx = canvas.getContext('2d')!;\n            const size = {width:canvas.width, height: canvas.height};\n            if (size.width !== window.innerWidth || size.height !== window.innerHeight) {\n                // If window size is changed this is called to resize the canvas\n                // It is not called via the resize event as that can fire to often an\n                // debounce makes it feel sluggish so is called from main loop.\n                that.restart();\n            }\n\n            that._updateScene(ctx, timeSinceLastAnimation);\n\n            requestAnimationFrame(loop);\n        }\n        requestAnimationFrame(loop);\n        this.readyCallback!();\n    }\n\n    private _updateScene(ctx:CanvasRenderingContext2D,timeSinceLastAnimation:number){\n        this.keysPressed.forEach((value, key) => {\n            if(this.debug){\n                console.log(`KeyPressed Event: ${key}`);\n            }\n            this.scene.handleKeyPressed(key);\n        });\n\n        ctx.save(); //Freeze redraw\n\n        this.paintBackground(ctx);\n        this.scene.paint({x:0,y:0}, ctx, timeSinceLastAnimation);\n        this.scene.updateModel(timeSinceLastAnimation);\n\n        if(!this.scene.isAlive){\n            console.log(`Scene Killed: ${this.scene.name}`);\n            this.scene.handleKill();\n            if(!this.scene.isAlive)\n                throw Error(`Scene is still dead.  Can't have a dead scene (${this.scene.name})`);\n        }\n\n        ctx.restore();//now do redraw\n    }\n\n    private paintBackground(ctx: CanvasRenderingContext2D) {\n        if(this.scene.paintBackground)\n            this.scene.paintBackground(ctx);\n        else{\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.scene.size.width, this.scene.size.height);\n        }\n    }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { IconButton, Link } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\ninfoButton: {\n\n  },\n})\n);\n\nexport default function InfoDialog() {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton edge=\"start\" className={classes.infoButton} onClick={handleClickOpen} color=\"primary\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Cicles\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          A simple 2D game library for JavaScript to teach my kids programming.   \n          A demo space game implemented using the library.\n        \n          <br></br>\n          \n          <Link component=\"button\" variant=\"body2\"\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </Link>\n          <br></br><br></br>\n          <Link variant=\"body2\">\n          nickzinn@gmail.com\n          </Link>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            <b>CLOSE</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './GameComponent.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PauseCircleOutline, PlayCircleOutline, Refresh, VolumeUp, VolumeOff } from '@material-ui/icons';\nimport { GameController} from '../gamelib/GameController';\nimport { CircularProgress, createStyles, Theme, WithStyles, withStyles, Backdrop } from '@material-ui/core';\nimport InfoDialog from './InfoDialog';\nimport { GameInitializer } from '../gamelib/GameInitializer';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  controlButton: {\n  },\n  score: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link:{\n    textDecoration: 'none'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\ninterface Props<T extends GameInitializer<T>> extends WithStyles<typeof styles> {\n  gameInitializer:T;\n}\n\ninterface IState{\n  score:number;\n  imagesLoaded:boolean;\n  pause:boolean;\n  mute:boolean;\n}\n\nconst GameComponent = withStyles(styles)( class <T extends GameInitializer<T>> extends React.Component<Props<T>> {\n \n  canvasRef = React.createRef<HTMLCanvasElement>();\n  gameController:GameController<T>;\n  state:IState;\n\n  constructor(props:Props<T>){\n    super(props);\n    this.gameController= new GameController<T>(props.gameInitializer);\n    this.gameController.debug = true;\n    this.state = { score:0, imagesLoaded:false, pause:false, mute:false};\n  }\n  componentDidMount() { \n    const canvas = this.canvasRef.current;\n    this.gameController.init(canvas!, () => this.setState({ imagesLoaded:true }));\n    this.gameController.subscribeEvent( (e) => {\n      if(e.type === 'score')\n        this.setState({score:e.value});\n    })\n  }\n  handleRestart(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.restart();\n  }\n  handlePause(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.pause = !this.gameController.pause;\n    this.setState({pause: this.gameController.pause});\n  }\n  handleMute(e:React.MouseEvent) {\n    e.stopPropagation();\n    this.gameController.mute = !this.gameController.mute;\n    this.setState({mute: this.gameController.mute});  \n  }\n  componentWillUnmount(){\n    this.gameController.isShutdown = true;\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n    <React.Fragment>\n      <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar>\n          <InfoDialog></InfoDialog>\n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\n          <Link to=\"/circles\" className={classes.link}> \n          <Typography variant=\"h6\" color=\"primary\" className={classes.title}>Circles</Typography>           </Link>\n          </Typography>\n          <Typography variant=\"body1\" color=\"primary\" className={classes.score}>\n            Score: {this.state.score}\n          </Typography>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handlePause(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.pause ? <PlayCircleOutline /> : <PauseCircleOutline />}\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleRestart(e)} color=\"primary\" aria-label=\"menu\">\n            <Refresh />\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.controlButton} onClick={(e) => this.handleMute(e)} color=\"primary\" aria-label=\"menu\">\n              {this.state.mute ? <VolumeOff /> : <VolumeUp />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Backdrop className={classes.backdrop} open={!this.state.imagesLoaded } >\n          <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <canvas id='Canvas' ref={this.canvasRef} />\n    </React.Fragment>\n  );\n  }\n});\n\nexport  default GameComponent;","import { Point } from \"../types/Point\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Size } from \"../types/Size\";\nimport { Behavior } from \"../types/Behavior\";\n\nexport class DefaultSprite implements Sprite{\n    name:string;\n    position:Point;\n    size:Size;\n    isAlive:boolean = true;\n\t\n    speed:number = 0.0;\n    angle:number = 0.0;\n    acceleration:number = 0.0;\n\tcanCollide:boolean = false;\n    isFixedPosition:boolean = false;\n    zOrder:number = 0;\n\t\n\tprivate behaviors:Behavior[] = [];\n\t\n\tconstructor(name:string,position:Point={x:0.0,y:0.0}, size:Size={width:0.0, height:0.0}){\n        this.name = name;\n        this.position = position;\n        this.size = size;\n\t}\n\t\n\taddBehavior(behavior:Behavior){\n        if(behavior.init) behavior.init(this);\n        this.behaviors.push(behavior);\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n        this.behaviors.forEach( (b) =>  b.paint?.(this, location, ctx, timeSinceLastAnimation));\n    }\n    updateModel(timeSinceLastUpdate: number) {\n        this.behaviors.forEach( (b) =>  b.updateModel?.(this, timeSinceLastUpdate));\n    }\n    \n    handleKill():void{\n        this.behaviors.forEach( (b) =>  b.handleKill?.(this));\n    }\n    \n    handleCollision?(otherSprite:Sprite):void{\n        this.behaviors.forEach( (b) =>  b.handleCollision?.(this, otherSprite));\n    }\n}","export interface Point{\n    x:number;\n    y:number;\n}\n\nexport function pointAsInt(point:Point): Point{\n    return {x:Math.round(point.x), y:Math.round(point.y)};\n}\n\nexport function calcDistance(a:Point, b:Point):number{\n        const xDist = Math.abs(a.x - b.x);\n        const yDist = Math.abs(a.y - b.y);\n        return Math.hypot(xDist, yDist);\n}","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Sprite{\n    name:string;\n    position:Point;\n    size:Size;\n    isAlive:boolean;\n    speed?: number;\n    angle?: number;\n    acceleration?: number;\n    priorPosition?:Point;\n    zOrder?:number\n\n    //optional properties\n\tcanCollide?: boolean;\n\tisFixedPosition?: boolean;\n\t\n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void;\n\n    updateModel?(timeSinceLastUpdate: number):void;\n\t\t\n\thandleKill?():void;\n    \n    handleCollision?(otherSprite:Sprite):void;\n    \n}\n\nexport function xySpeed(sprite:Sprite): Point{\n    if(sprite.speed !== undefined && sprite.angle !== undefined)\n        return {x: sprite.speed * Math.cos(sprite.angle), y: sprite.speed * Math.sin(sprite.angle)};\n    else return {x:0,y:0};\n}\n\n\nexport function centerPosition(sprite:Sprite): Point{\n    return {x: sprite.position.x + sprite.size.width/2, y: sprite.position.y + sprite.size.height/2};\n}\n\n","import { Point } from \"./Point\";\nimport { Size } from \"./Size\";\n\nexport interface Rectangle{\n    position:Point;\n    size:Size;\n\n}\n\nexport function union(rect1:Rectangle, rect2:Rectangle):Rectangle{\n    let tx2 = rect1.size.width;\n    let ty2 = rect1.size.height;\n    if ((tx2 | ty2) < 0) {\n        // This rectangle has negative dimensions...\n        // If r has non-negative dimensions then it is the answer.\n        // If r is non-existant (has a negative dimension), then both\n        // are non-existant and we can return any non-existant rectangle\n        // as an answer.  Thus, returning r meets that criterion.\n        // Either way, r is our answer.\n        return rect2;\n    }\n    let rx2 = rect2.size.width;\n    let ry2 = rect2.size.height;\n    if ((rx2 | ry2) < 0) {\n        return rect1;\n    }\n    let tx1 = rect1.position.x;\n    let ty1 = rect1.position.y;\n    tx2 += tx1;\n    ty2 += ty1;\n    const rx1 = rect2.position.x;\n    const ry1 = rect2.position.y;\n    rx2 += rx1;\n    ry2 += ry1;\n    if (tx1 > rx1) tx1 = rx1;\n    if (ty1 > ry1) ty1 = ry1;\n    if (tx2 < rx2) tx2 = rx2;\n    if (ty2 < ry2) ty2 = ry2;\n    tx2 -= tx1;\n    ty2 -= ty1;\n    return { position:{x:tx1, y:ty1},size:{width:tx2, height:ty2}};\n\n}\n\nexport function intersects(rect1:Rectangle, rect2:Rectangle):boolean{\n\n    let tw = rect1.size.width;\n    let th = rect1.size.height;\n    let rw = rect2.size.width;\n    let rh = rect2.size.height;\n    if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\n        return false;\n    }\n    const tx = rect1.position.x;\n    const ty = rect1.position.y;\n    const rx = rect2.position.x;\n    const ry = rect2.position.y;\n    rw += rx;\n    rh += ry;\n    tw += tx;\n    th += ty;\n    //      overflow || intersect\n    return ((rw < rx || rw > tx) &&\n            (rh < ry || rh > ty) &&\n            (tw < tx || tw > rx) &&\n            (th < ty || th > ry));\n}\n\nexport function pointInRect(point:Point, rect:Rectangle):boolean{\n    return point.x >= rect.position.x && point.x < rect.position.x + rect.size.width\n        && point.y >= rect.position.y && point.y < rect.position.y + rect.size.height;\n}","import { GameController } from \"./GameController\";\nimport { DefaultSprite } from \"./behaviors/DefaultSprite\";\nimport { Point, pointAsInt } from \"./types/Point\";\nimport { Sprite, xySpeed } from \"./types/Sprite\";\nimport { Size } from \"./types/Size\";\nimport { union, Rectangle, intersects, pointInRect } from \"./types/Rectangle\";\nimport { GameInitializer } from \"./GameInitializer\";\n\nfunction insert<T>(array:T[], value:T, comparator: (a:T, b:T)=>number){\n\tlet low =0;\n\tif(array.length>0){\n\t\tlet high=array.length;\n\t\twhile(low < high){\n\t\t\tlet mid = Math.floor( (low+high)/2);\n\t\t\tconst c = comparator(array[mid], value);\n\t\t\tif(c <0){\n\t\t\t\tlow = mid+1;\n\t\t\t}else if( c> 0){\n\t\t\t\thigh = mid;\n\t\t\t}else{\n\t\t\t\tlow = mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tarray.splice(low, 0, value);\n}\nfunction remove(array:any[], key:any){\n    const index = array.indexOf(key, 0);\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n}\n\nexport default class Scene<T extends GameInitializer<T>> extends DefaultSprite{\n\n    viewPort:Point = {x:0, y:0};\n    controller:GameController<T>;\n    debug: boolean = false;\n\twrapAround:boolean = false;\n\tsceneSpeed:number = 1.0;\n\tmodelSize:Size;\n\tsprites:Sprite[] = [];\n\n\tprivate collisionListeners:Sprite[] = [];\n\t\n    constructor(name:string, controller:GameController<T>, modelSize:Size={width:0.0, height:0.0}){\n        super(name);\n        this.controller = controller;\n        this.modelSize = modelSize;\n    }\n    handleKeyPressed(key: string): void {\n    }\n\n    handleMouseClick(x:number, y:number){\n    }\n\thandleTouchMove(x:number, y:number){\n    }\n\n\tgetSpritesAtPoint(point:Point):Sprite[]{\n\t\treturn this.sprites.filter( (s) => pointInRect(point, s) );\n\t}\n\t\n\taddSprite(sprite:Sprite) {\n\t\tthis._handleWrap(sprite.position,sprite.size);\n\t\tthis._validateSprite(sprite);\n\t\tif(!sprite.zOrder)\n\t\t\tsprite.zOrder = 0;\n\t\tinsert(this.sprites, sprite, (a,b) => a.zOrder! - b.zOrder!);\n\t\tsprite.priorPosition = sprite.position;\n\t\tif (sprite.handleCollision)\n\t\t\tthis.collisionListeners.push(sprite);\n\t}\n\n\tremoveSprite(sprite:Sprite) {\n\t\tsprite.handleKill?.();\n        if(this.debug)\n            console.log(`Remove sprite(${sprite.name}) (${sprite.position.x}, ${sprite.position.y})`);\n        remove(this.sprites, sprite);\n        remove(this.collisionListeners, sprite);\n\t}\n\n\tpublic resetGame() {\n\t    this.sprites = [];\n\t\tthis.collisionListeners = [];\n\t}\n\n    updateModel(timeSinceLastUpdate: number) {\n\t\tsuper.updateModel(timeSinceLastUpdate);\n        \n        // handle movements and check collision\n\t\tthis.handleMovement(timeSinceLastUpdate);\n\t}\n\n    handleMovement(timeSinceLastUpdate: number) {\n        const dx = timeSinceLastUpdate/1000.0;\n        const tempArray:Sprite[] = this.sprites.slice();\n\t\twhile (tempArray.length) {\n\t\t\tconst sprite:Sprite = tempArray.pop()!;\n\t\t\tif(!sprite.isAlive){\n\t\t\t\t// remove any dead sprites.\n\t\t\t\tthis.removeSprite(sprite);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet newRect;\n\t\t\tif (!sprite.isFixedPosition && sprite.speed !== undefined) {\n\t\t\t\tconst oldRect = {position:pointAsInt(sprite.position), size:sprite.size};\n\t\t\t\tconst pointSpeed = xySpeed(sprite);\n\t\t\t\tlet newPosition = {x:sprite.position.x + pointSpeed.x * dx * this.sceneSpeed,\n\t\t\t\t\t\t\t\t   y:sprite.position.y + pointSpeed.y * dx * this.sceneSpeed};\n\t\t\t\tlet wrapped = this._handleWrap(newPosition, sprite.size);\n\t\t\t\tsprite.priorPosition = oldRect.position;\n\t\t\t\tsprite.position = newPosition;\n\t\t\t\t// check collisions\n\t\t\t\tnewRect = {position: pointAsInt(sprite.position), size: sprite.size};\n\t\t\t\tif (!wrapped)\n\t\t\t\t\tnewRect = union(oldRect, newRect);\n\t\t\t\t\n\t\t\t\tif (sprite.acceleration) {\n\t\t\t\t\tif (Math.sign(sprite.acceleration\n\t\t\t\t\t\t\t+ sprite.speed) !== Math.sign(sprite\n\t\t\t\t\t\t\t.speed))\n\t\t\t\t\t\tsprite.speed = 0;\n\t\t\t\t\telse\n\t\t\t\t\t\tsprite.speed = sprite.speed + sprite.acceleration;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(sprite.canCollide){\n\t\t\t\tif(!newRect)\n\t\t\t\t\tnewRect = sprite;\n\t\t\t\tthis._handleCollision(newRect, sprite);\n\t\t\t}\n\t\t\tif(sprite.updateModel)\n\t\t\t\tsprite.updateModel(timeSinceLastUpdate);\n\t\t\ttry {\n\t\t\t\tthis._validateSprite(sprite);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(`Sprite position not valid.  Killing spite (${sprite.name}). ${error}`);\n\t\t\t\tsprite.isAlive=false;\n\t\t\t}\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthis.removeSprite(sprite);\n\t\t}\n\t}\n\n\tprivate _handleCollision( newRect:Rectangle, sprite:Sprite) {\n\t\t//need to make this more sophisticated so it doesn't break out after one collision.\n\t\tlet collisionSprite;\n\t\tif(sprite.handleCollision){\n\t\t\tfor(let i =0; i< this.sprites.length;i++){\n\t\t\t\tconst otherSprite = this.sprites[i];\n\t\t\t\tif (sprite !== otherSprite && otherSprite.canCollide) {\n\t\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\t\tsprite.handleCollision(otherSprite);\n\t\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!collisionSprite)\n\t\t\tcollisionSprite = sprite;\n\t\t\n\t\tfor(let i =0; i< this.collisionListeners.length;i++){\n\t\t\tconst otherSprite = this.collisionListeners[i];\n\t\t\tif (sprite !== otherSprite) {\n\t\t\t\tif (intersects(newRect, otherSprite)) {\n\t\t\t\t\totherSprite.handleCollision!(sprite);\n\t\t\t\t\tcollisionSprite = otherSprite;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!collisionSprite.isAlive) {\n\t\t\tthis.removeSprite(collisionSprite);\n\t\t}\n\t}\n\tcount =0;\n\ttotalTime =0;\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void {\n        //enable you to embed a scene as a sprite in another scene\n        location = {x: location.x + this.viewPort.x, y:location.y+this.viewPort.y}; \n\t\tsuper.paint(location, ctx, timeSinceLastAnimation);\n\t\tlet displayedSprites =0\n\t\tfor(let sprite of this.sprites){\n\t\t\tif(!sprite.isAlive)\n\t\t\t\tthrow Error(\"No Dead Sprites Should Make it to render step.\\n\" + sprite);\n\t\t\tlet pos = pointAsInt(sprite.position);\n\t\t\t\tif(!sprite.isFixedPosition){\n\t\t\t\t\tpos = {x: pos.x - location.x, y: pos.y - location.y}\n\t\t\t\t}\n\t\t\tif(pos.x > this.size.width || pos.y > this.size.height \n\t\t\t\t|| (sprite.size.width + pos.x < 0)\n\t\t\t\t|| (sprite.size.height + pos.y < 0)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsprite.paint(pos, ctx, timeSinceLastAnimation);\n\t\t\tdisplayedSprites++;\n\t\t}\n\t\tif(this.debug){\n\t\t\tif(++this.count % 300 === 0){\n\t\t\t\tthis.totalTime  = timeSinceLastAnimation;\n\t\t\t\tthis.count =1;\n\t\t\t}else{\n\t\t\t\tthis.totalTime +=timeSinceLastAnimation;\n\t\t\t}\n\t\t\tctx.fillStyle = \"red\"\n\t\t\tctx.fillText(`FPS: ${Math.round(1000 / (this.totalTime/ ++this.count))} Alive Sprites: ${this.sprites.length} On Screen Sprites: ${displayedSprites}` , 10, this.size.height -10);\n\t\t}\n\t}\n\n\taddSprites(sprites:Sprite[] ) {\n\t\tif(!sprites || !sprites.length)\n\t\t\tthrow Error(`Attempting to add empty array of sprites in scene (${this.name})`);\n\t\tif(this.debug){\n\t\t\tconsole.log(`Bulk adding ${sprites.length} of type (${sprites[0].name})`)\n\t\t}\n\t\tsprites.forEach( (s) => this.addSprite(s) )\n\t}\n\n\tpaintBackground?(ctx: CanvasRenderingContext2D):void;\n\t\n\t_validateSprite(sprite:Sprite){\n\t\tif(sprite.position.x < 0 || sprite.position.y < 0 )\n\t\t\tthrow Error(`Sprite position less 0 (${sprite.position.x}, ${sprite.position.y})`);\n\t\tif(this.modelSize.width !==0){\n\t\t\tif(sprite.position.x >= this.modelSize.width || sprite.position.y >= this.modelSize.height)\n\t\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y}) > model(${this.modelSize.width},${this.modelSize.height})`);\n\t\t}else if(sprite.position.x >= this.size.width || sprite.position.y >= this.size.height) {\n\t\t\tthrow Error(`Sprite position(${sprite.position.x}, ${sprite.position.y})  > screen(${this.size.width},${this.size.height}) `);\n\t\t}\n\t\tif(sprite.size.width <=0 || sprite.size.height <= 0)\n\t\t\tthrow Error(`Sprite size too small (${sprite.size.width}, ${sprite.size.height})`);\n\t\tif( (sprite.speed !== undefined &&  sprite.angle === undefined) \n\t\t\t|| (sprite.speed === undefined &&  sprite.angle !== undefined))\n\t\t\tthrow Error(`Either speed(${sprite.speed}) and angle(${sprite.angle}) are both defined or both undefined.`)\n\t}\n\t_handleWrap(position:Point, size:Size):boolean{\n\t\t// handle wrap around\n\t\tlet wrapped = false;\n\t\tif (this.wrapAround) {\n\t\t\tlet width = this.size.width;\n\t\t\tlet height = this.size.height;\n\t\t\tif(this.modelSize.width !==0){\n\t\t\t\twidth= this.modelSize.width;\n\t\t\t\theight = this.modelSize.height;\n\t\t\t}\n\t\t\tif (position.x < 0) {\n\t\t\t\tposition.x = width - size.width;\n\t\t\t\twrapped = true;\n\t\t\t} else if (position.x + size.width > width) {\n\t\t\t\tposition.x = 0;\n\t\t\t\twrapped = true;\n\t\t\t}\n\t\t\tif (position.y < 0) {\n\t\t\t\tposition.y = height - size.height;\n\t\t\t\twrapped = true;\n\t\t\t} else if (position.y + size.height > height) {\n\t\t\t\tposition.y = 0;\n\t\t\t\twrapped = true;\n\t\t\t}\n\t\t}\t\n\t\treturn wrapped;\n\t}\n\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { SpriteSheet } from \"../util/SpriteSheet\";\n\nexport class SpriteSheetBehavior implements Behavior{\n    spriteSheet:SpriteSheet;\n    framesPerSecond:number = 25;\n\tage:number = 0;\n    animateOnce:boolean;\n\trotate:boolean = false;\n\tconstructor(spriteSheet:SpriteSheet,  animateOnce:boolean = false) {\n\t\tthis.spriteSheet = spriteSheet;\n\t\tthis.animateOnce = animateOnce;\n\t}\n    init(sprite:Sprite){\n\t\tsprite.size = this.spriteSheet.size;\n\t}\n    paint(sprite:Sprite, location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number):void{\n\t\tlet frame;\n\t\tif(this.framesPerSecond && this.spriteSheet.frameCount !== 0){\n\t\t\tconst timePerFrame = 1.0 / this.framesPerSecond;\n\t\t\tframe = Math.floor( (this.age/timePerFrame ) % this.spriteSheet.frameCount);\n\t\t}else{\n\t\t\tframe =0;\n\t\t}\n\t\tconst column = Math.floor(frame % this.spriteSheet.columns) + 1;\n\t\tconst row = Math.floor( frame/this.spriteSheet.columns ) + 1 ;\n\t\tthis.spriteSheet.paint(location,ctx,this.getAngle(sprite),row,column);\t\t\n\n\t}\n\tupdateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n\t\tconst dx = timeSinceLastUpdate/1000;\n\t\tthis.age += dx;\n\t\tif(this.animateOnce){\n\t\t\tif (this.age > this.spriteSheet.frameCount / this.framesPerSecond) {\n\t\t\t\t// System.out.println(\"FPS:\" + getFramesPerSecond()\n\t\t\t\t// \t\t+ \"\\tFC:\" + getFrameCount() + \"\\tage:\" + age);\n\t\t\t\tsprite.isAlive = false;\n\t\t\t}\n\t\t}\n\t}\n\tgetAngle(sprite:Sprite){\n\t\treturn (sprite.angle) ? sprite.angle : 0;\n\t}\n}\n","import { Point } from \"../types/Point\";\nimport { SpriteSheetBehavior } from \"../behaviors/SpriteSheetBehavior\";\nimport { DefaultSprite } from \"../behaviors/DefaultSprite\";\nimport Scene from \"../Scene\";\nimport { GameInitializer } from \"../GameInitializer\";\n\n\nexport class AnimatedSprite<T extends GameInitializer<T>, S extends Scene<T>> extends DefaultSprite{\n    scene:S;\n    spriteSheetBehavior:SpriteSheetBehavior;\n\n    constructor(scene:S, name:string,position:Point ={x:0,y:0},animateOnce:boolean =false){\n        super(name, position);\n        this.scene = scene;\n        const spriteSheet = scene.controller.imagePreloader.getSpriteSheetFromCache(name)\n        this.spriteSheetBehavior =   new SpriteSheetBehavior(spriteSheet, animateOnce);\n        this.addBehavior(this.spriteSheetBehavior);\n    }\n    set animateOnce(animateOnce:boolean){\n        this.spriteSheetBehavior.animateOnce = animateOnce;\n    }\n    get animateOnce(){\n        return this.spriteSheetBehavior.animateOnce;\n    }\n}","import { GameController } from \"../gamelib/GameController\";\nimport { Point } from \"../gamelib/types/Point\";\nimport Scene from \"../gamelib/Scene\";\nimport { Sprite, xySpeed } from \"../gamelib/types/Sprite\";\nimport { Size } from \"../gamelib/types/Size\";\nimport { GameInitializer } from \"../gamelib/GameInitializer\";\nimport { AnimatedSprite } from \"../gamelib/sprites/AnimatedSprite\";\n\nfunction createWall(position:Point, size:Size, isVertical:boolean):Sprite{\n    const wall = {\n        name:'wall',\n        position,\n        size,\n        isAlive:true,\n        canCollide:false,\n        paint: function(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n            ctx.fillStyle =  \"\trgb(50,50,50)\";\n            ctx.fillRect(position.x, position.y, size.width, size.height);\n        },\n        handleCollision(otherSprite:Sprite):void{\n            const speed = xySpeed(otherSprite);\n            if(isVertical){\n                if(speed.x>0)\n                   otherSprite.position.x = this.position.x - otherSprite.size.width;\n                else\n                    otherSprite.position.x = this.position.x + this.size.width;\n                otherSprite.position.y = otherSprite.priorPosition!.y;\n                otherSprite.angle =  Math.PI - otherSprite.angle! + (Math.random() - .5 )*.2;\n            }else{\n                if(speed.y>0)\n                    otherSprite.position.y = this.position.y - otherSprite.size.height;\n                else\n                    otherSprite.position.y = this.position.y + this.size.height;\n                otherSprite.position.x = otherSprite.priorPosition!.x;\n                otherSprite.angle =  -1.0 * otherSprite.angle! + (Math.random() - .5 )*.2;\n            }\n        }\n    };\n    return wall;\n}\n\nexport class BouncingBall implements GameInitializer<BouncingBall>{\n\n    preloadImages = [{name:'ball', src:'/circles/assets/images/ball.png', rows:4, columns:8}];\n    preloadSounds = [{name:'boop', src:'/circles/assets/sounds/boop.wav'}\n                    ,{name:'error', src:'/circles/assets/sounds/error.wav'}];\n\n\tinit(controller:GameController<BouncingBall>):void {\n\t\tconst scene = new Scene('bouncing ball',controller);\n        controller.scene = scene;\n        let score =0;\n        controller.publishEvent({type:'score', value:(score)});\n        scene.handleMouseClick = function(x:number, y:number){\n            const sprites = scene.getSpritesAtPoint({x,y});\n            if(sprites.length){\n                sprites.filter( (s) => s.canCollide ).forEach( (s) => {\n                    scene.removeSprite(s);\n                    controller.publishEvent({type:'score', value:(score++)});\n                    controller.soundEffects.play('boop');\n                } );\n            }else{ \n                controller.publishEvent({type:'score', value:(score--)});\n                controller.soundEffects.play('error');\n            }\n        }\n        scene.wrapAround = false;\n        scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n                ctx.fillStyle = 'black';\n                ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n        }\n\n        const sz = scene.size;\n        const wallSize = 4;\n        //create walls\n        scene.addSprite( createWall({x:0,y:0},{width:sz.width-wallSize,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:sz.height-wallSize},{width:sz.width,height:wallSize}, false));\n        scene.addSprite( createWall({x:0,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n        scene.addSprite( createWall({x:sz.width-wallSize,y:0},{width:wallSize,height:sz.height-wallSize}, true));\n\n        const rand =  (min:number, max:number) => Math.random() * (max-min) + min;\n        for(let x=0; x<30;x++){\n            const ball = new AnimatedSprite(scene, 'ball');\n            const radius = ball.size.width/2;\n            ball.position = {x: rand(sz.width-(radius+wallSize)*2, radius+wallSize),y:rand(sz.height-(radius+wallSize)*2, radius+wallSize)};\n            ball.isAlive = true;\n            ball.speed = Math.random() * 250+100;\n            ball.angle = Math.random() * Math.PI *2;\n            ball.zOrder = Math.random() * 10 -5;\n            ball.canCollide = true;\n            ball.size = {width: ball.size.width -2, height: ball.size.height -2}\n            scene.addSprite(ball);\t\n        }\n\t}\n}","import { Point } from \"../../../gamelib/types/Point\";\nimport { Sprite } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\n\nexport function newSmallExplosion(scene:MainGameScene, position:Point):Sprite{\n    return newExplosion(scene, position, 'explosionSmall');\n}\n\nexport function newBigExplosion(scene:MainGameScene, position:Point):Sprite{\n    return newExplosion(scene, position, 'explosionBig');\n}\n\nfunction newExplosion(scene:MainGameScene, position:Point, name:string):Sprite {\n    const explosion = new AnimatedSprite(scene,name, position, true);\n    explosion.position = {x: position.x - explosion.size.width / 2\n        ,y: position.y - explosion.size.height / 2};\n    scene.controller.soundEffects.play(name);\n    return explosion;\n}","import { SpaceGame } from \"../SpaceGame\";\nimport { Sprite, centerPosition } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { newSmallExplosion } from \"./Explosion\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport Scene from \"../../../gamelib/Scene\";\n\nexport function generateOpenningSequenceAsteroids(scene:Scene<SpaceGame>, n:number):Sprite[]{\n    const sz = scene.controller.scene.size;\n    const rand =  (minn:number, max:number) => Math.random() * (max-minn) + minn;\n    const min =100;\n    const sprites:Sprite[] = [];\n    for(let x=0; x<n;x++){\n        const a = new AnimatedSprite(scene, 'asteroid', {x: rand(sz.width-min, min),y:rand(sz.height-min, min)});\n        a.speed = Math.random() * 200+50;\n        a.angle = Math.random() * Math.PI *2;\n        a.zOrder = -1;\n        a.canCollide = true;\n        a.size = {width: a.size.width, height: a.size.height}\n        sprites.push(a);\t\n    }\n    return sprites;\n}\nexport function generateGameAsteroids(scene:MainGameScene, n:number ):Sprite[]{\n    const roids = generateOpenningSequenceAsteroids(scene, n);\n    roids.forEach( (a) => {\n        a.position.x = Math.random() * scene.modelSize.width;\n        a.position.y = 0;\n        a.speed = Math.random() * 100 +50;\n        a.handleCollision = (otherSprite) =>{\n            if (otherSprite === scene.player && !scene.pause) {\n                scene.hit(10);\n                scene.addSprite(newSmallExplosion(scene, centerPosition(a)));\n                a.isAlive = false;\n            }\n        };\n    });\n    return roids;\n}","import { DefaultSprite } from \"../../../gamelib/behaviors/DefaultSprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { Point } from \"../../../gamelib/types/Point\";\n\n\nexport class Radar extends DefaultSprite{\n\n    scene:MainGameScene;\n\n    constructor(scene:MainGameScene){\n        super('Radar');\n        const margin = 3;\n        const x = Math.floor( scene.size.width * 14.0 / 16.0)- margin;\t\t\n        const width = scene.size.width - 3 - x;\n        const y = Math.floor( width / scene.modelSize.width * scene.modelSize.height);\n        this.position = {x: x-3,y:margin+50};\n        this.size = {width,height: y};\n        this.isFixedPosition = true;\n        this.zOrder = 100;\n\t\tthis.scene =scene;\n\t\tthis.canCollide = false;\n\t\tthis.handleCollision = undefined;\n    }\n    \n    paint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number) {\n\t\tctx.strokeStyle = 'white';\n\t\tctx.strokeRect(location.x-1, location.y-1, this.size.width+2, this.size.height+2);\n\t\tctx.fillStyle = 'white';\n\n\t\tconst scale = this.size.width/this.scene.modelSize.width;\n\t\tfor(let sprite of this.scene.sprites){\n\t\t\tif(sprite === this) continue;\n\t\t\tconst x1 = Math.floor(location.x + (sprite.position.x * scale));\n\t\t\tconst y1 = Math.floor(location.y + (sprite.position.y * scale));\n\t\t\tif(sprite.name === 'enemy' )\n\t\t\t\tctx.fillStyle = 'red';\n\t\t\telse if(sprite.name === 'player')\n\t\t\t\tctx.fillStyle = 'green';\n\t\t\tctx.fillRect(x1, y1,2,2);\n\t\t\tctx.fillStyle = 'white';\n\t\t}\n\t\tctx.strokeStyle = 'red';\n\t\tconst topX = Math.floor(this.scene.viewPort.x * scale + location.x);\n\t\tconst topY = Math.floor(this.scene.viewPort.y * scale + location.y)\n\t\tconst width = Math.floor(this.scene.size.width * scale);\n\t\tconst height = Math.floor(this.scene.size.height * scale);\n\t\tctx.strokeRect(topX, topY, width, height);\n\t}\n}","import { Behavior } from \"../types/Behavior\";\nimport { Sprite } from \"../types/Sprite\";\n\nexport class ExpirationBehavior implements Behavior{\n\tage = 0;\n\texpirationTime:number;\n\tpublic constructor(expirationTime:number){\n\t\tthis.expirationTime =  expirationTime;\n\t}\n    \n    updateModel(sprite:Sprite, timeSinceLastUpdate:number):void{\n        this.age+=timeSinceLastUpdate;\n\t\tif(this.age > this.expirationTime)\n\t\t\tsprite.isAlive = false;\n\t}\n}\n","import { MainGameScene } from \"../MainGameScene\";\nimport { Point } from \"../../../gamelib/types/Point\";\nimport { xySpeed } from \"../../../gamelib/types/Sprite\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport { SpaceGame } from \"../SpaceGame\";\nimport { Missle } from \"./Missle\";\n\nconst MAX_SPEED = 375;\n\nexport class Ship  extends AnimatedSprite<SpaceGame, MainGameScene> {\n\tshipAngle:number;\n\tlastMissleFired?:Missle;\n\n\tconstructor(scene:MainGameScene, position:Point, name:string) {\n\t\tsuper(scene,name, position);\n\t\tthis.shipAngle = 0;\n\t\tthis.speed = 0;\n\t\tthis.angle = 0;\n\t\tthis.acceleration = -.1;\n\t\tthis.canCollide = true;  \n\t\tthis.spriteSheetBehavior.getAngle = () => this.shipAngle;\n\t}\n\n\tleft() {\n\t\tthis.shipAngle += -.15;\n\t}\n\n\tright() {\n\t\tthis.shipAngle += +.15;\n\t}\n\n\tmove() {\n\t\tconst speed = xySpeed(this);\n\n\t\tlet xSpeed = speed.x + 15.0 * Math.cos(this.shipAngle);\n\t\tlet ySpeed = speed.y + 15.0 * Math.sin(this.shipAngle);\n\t\txSpeed = Math.max(Math.min(MAX_SPEED, xSpeed), MAX_SPEED * -1);\n\t\tySpeed = Math.max(Math.min(MAX_SPEED, ySpeed), MAX_SPEED * -1);\n\n\t\tthis.angle =Math.atan2(ySpeed, xSpeed);\n\t\tthis.speed =Math.hypot(xSpeed, ySpeed);\n\t}\n}\n","import { Ship } from \"./Ship\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { Point, pointAsInt } from \"../../../gamelib/types/Point\";\n\n\nexport class Player extends Ship {\n\tshield = 100;\n\tshieldAge =0;\n\t\n\tconstructor(scene:MainGameScene, position:Point) {\n\t\tsuper(scene, position, \"player\");\n\t}\n\n\t//handle viewport movement\n\tupdateModel(timeSinceLastUpdate: number):void{\n\t\tsuper.updateModel(timeSinceLastUpdate);\n\t\tlet viewport = this.scene.viewPort;\n\t\tconst size = this.scene.size;\n\t\tconst margin = {x:size.width / 3, y:size.height / 3};\n\t\tconst position = pointAsInt(this.position);\n\t\tif(position.x < viewport.x + margin.x)\n\t\t\tviewport.x = position.x - margin.x;\n\t\telse if(position.x > viewport.x + size.width - margin.x)\n\t\t\tviewport.x = position.x - size.width + margin.x;\n\t\tif(position.y < viewport.y + margin.y)\n\t\t\tviewport.y = position.y - margin.y;\n\t\telse if(position.y > viewport.y + size.height - margin.y)\n\t\t\tviewport.y = position.y - size.height + margin.y;\n\t\tthis.scene.viewPort = {x:Math.min(Math.max(viewport.x, 0), this.scene.modelSize.width- size.width)\n\t\t\t,y:Math.min(Math.max(viewport.y, 0), this.scene.modelSize.height- size.height)};\n\t}\n\n\tpaint(location:Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void{\n\t\tsuper.paint(location,ctx,timeSinceLastAnimation);\t\n\t\tif(this.shieldAge){\n\t\t\tthis.shieldAge -= timeSinceLastAnimation;\n\t\t\tif(this.shieldAge > 0){\n\t\t\t\t//TODO animate shield\n\t\t\t}else{\n\t\t\t\tthis.shieldAge = 0;\n\t\t\t}\n\t\t}\n\t}\n\tanimateShield(){\n\t\tthis.shieldAge = 1000;\n\t}\n}\n","import { MainGameScene } from \"../MainGameScene\";\nimport { Ship } from \"./Ship\";\n\nexport class Enemy extends Ship {\n\n    constructor(scene:MainGameScene) {\n        super(scene, {x:Math.floor(Math.random() * scene.modelSize.width), y:50}, \"enemy\");\n        this.speed = 100;\n        this.angle = Math.random();\n        this.shipAngle = 0;\n    }\n\n    private count:number =0;\n\n    updateModel(timeSinceLastUpdate: number):void{\n        super.updateModel(timeSinceLastUpdate);\n        const xDist = this.position.x - this.scene.player.position.x;\n        const yDist = this.position.y - this.scene.player.position.y;\n        const distance = Math.hypot(xDist, yDist);\n        if (distance > 1500)\n            return;\n        const requiredHeading = Math.atan2(yDist, xDist);\n        const crossproduct = Math.sin(requiredHeading - this.shipAngle);\n\n        if (crossproduct > .1) \n            this.shipAngle -= .1;\n        else if (crossproduct < -.1)\n            this.shipAngle += .1 ;\n        else if (this.count++ % Math.max(100 - this.scene.level * 20, 30) === 0 && distance < 600   )\n            this.scene.fire(this);\n        if (distance > 300) {\n            this.move();\n        }\n    }\n}","import { Sprite } from \"../../../gamelib/types/Sprite\";\nimport { MainGameScene } from \"../MainGameScene\";\nimport { AnimatedSprite } from \"../../../gamelib/sprites/AnimatedSprite\";\nimport { SpaceGame } from \"../SpaceGame\";\nimport { Point } from \"../../../gamelib/types/Point\";\nimport { ExpirationBehavior } from \"../../../gamelib/behaviors/ExpirationBehavior\";\n\nconst NAME = \"missle\";\n\nexport class Missle extends AnimatedSprite<SpaceGame, MainGameScene>{\n\towner:Sprite;\n\tbehavior:ExpirationBehavior;\n\tconstructor(position:Point,angle:number, speed:number,\n\t\t\towner:Sprite, scene:MainGameScene, expiration:number) {\n\t\tsuper(scene,NAME, position);\n\t\tthis.owner = owner;\n\t\tthis.angle = angle;\n\t\tthis.speed = speed;\n\t\tthis.acceleration = 10;\n\t\tthis.canCollide = true;\n\t\tthis.behavior =new ExpirationBehavior(expiration);\n\t\tthis.addBehavior(this.behavior);\n\t}\n\t\n\thandleCollision(otherSprite:Sprite):void{\n\t\tif(otherSprite === this.owner || otherSprite.name === NAME )\n\t\t\treturn;\n\t\tthis.isAlive = false;\n\t\tthis.scene.missleHit(this.owner,otherSprite);\n\t}\n}","import { Sprite } from \"../types/Sprite\";\nimport { Point } from \"../types/Point\";\nimport { Size } from \"../types/Size\";\n\nexport class TitleSprite implements Sprite{\n    name: string = 'Title';\n    position: Point = {x:0,y:0};\n    size: Size = {width:1, height:1};\n    isAlive: boolean = true;\n    zOrder: number = 100;\n    canCollide: boolean = false;\n    isFixedPosition = true;\n    title:string;\n    subtitle1:string;\n    subtitle2:string;\n\n    constructor(title:string, subtitle1:string, subtitle2:string){\n        this.title = title;\n        this.subtitle1 = subtitle1;\n        this.subtitle2 = subtitle2;\n    }\n\n    paint(location: Point, ctx: CanvasRenderingContext2D, timeSinceLastAnimation: number): void {\n        //ctx.measureText\n        const w = ctx.canvas.width,  h = ctx.canvas.height;\n        const oldFont = ctx.font;\n        function shadowText(txt:string, x:number,y:number, i:number){\n            ctx.fillStyle = \"grey\";\n            ctx.fillText(txt, x+i, y+i);\n            ctx.fillStyle = \"white\";\n            ctx.fillText(txt, x,y);\n        }\n\n        ctx.font = (w>500) ? (w>800) ? \"110px Electrolize\": \"60px Electrolize\" : \"45px Electrolize\";\n        let measure = ctx.measureText(this.title);\n        let hpos = h/3;\n        shadowText(this.title, (w-measure.width)/2, hpos, 3);\n        const subHeight = (w>500) ? (w>800) ? 30: 24 : 18;\n        ctx.font = `${subHeight}px Electrolize`;\n        measure = ctx.measureText(this.subtitle1);\n        hpos += subHeight*2;\n        shadowText(this.subtitle1, (w-measure.width)/2,hpos, 1);\n\n        measure = ctx.measureText(this.subtitle2);\n        hpos += subHeight*2;\n        shadowText(this.subtitle2, (w-measure.width)/2,hpos,1);\n\n        ctx.font = oldFont;\n    }\n\n}","import { GameController } from \"../../gamelib/GameController\";\nimport Scene from \"../../gamelib/Scene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { Point } from \"../../gamelib/types/Point\";\nimport { Radar } from \"./sprites/Radar\";\nimport { centerPosition, Sprite } from \"../../gamelib/types/Sprite\";\nimport { ExpirationBehavior } from \"../../gamelib/behaviors/ExpirationBehavior\";\nimport { launchOpenningSequence } from \"./OpenningSequence\";\nimport { newBigExplosion, newSmallExplosion } from \"./sprites/Explosion\";\nimport { Player } from \"./sprites/Player\";\nimport { Enemy } from \"./sprites/Enemy\";\nimport { Missle } from \"./sprites/Missle\";\nimport { launchBetweenLevelsScene } from \"./BetweenLevelScene\";\nimport { Ship } from \"./sprites/Ship\";\nimport { generateGameAsteroids } from \"./sprites/Asteroids\";\n\n\nexport class MainGameScene extends Scene<SpaceGame> {\n    _score:number=0;\n    level:number;\n\tstars:Point[] = []\n\tplayer:Player;\n\talienCount:number;\n\tpause:boolean = false;\n\n    constructor(controller:GameController<SpaceGame>, level:number, score:number){\n        super('MainGameScene', controller);\n        this.level = level;\n        this.score = score;\n        controller.scene = this;\n\t\tthis.modelSize = {width: this.size.width *3, height: this.size.height*3};\n\t\tconst area = this.modelSize.width * this.modelSize.height;\n        this.wrapAround = true;\n\t\t\n        this.addSprites(generateGameAsteroids(this, Math.floor( (area/300000)*level))) ;\n        \n\t\tthis.createStars( Math.floor(area/9000));\n        \n        this.addSprite(new Radar(this));\n\n\t\tconst center = { x:this.modelSize.width/2, y:this.modelSize.height/2};\n\t\tthis.viewPort = {x:center.x - this.size.width/2, y:center.y - this.size.height/2 };\n\t\t\n\t\tthis.player = new Player(this, center);\n\t\tthis.addSprite(this.player);\n\n\t\tthis.alienCount = level;\n\t\tfor (let i = 0; i < this.alienCount; i++)\n\t\t\tthis.addSprite(new Enemy(this));\n\n\t\tthis.speed = 1;\n\t}\n\n\tfire(ship:Ship) {\n\t\tif(ship.lastMissleFired && ship.lastMissleFired.behavior.age < 250 && ship.lastMissleFired.isAlive){\n\t\t\treturn;\n\t\t}\n\t\tconst center = centerPosition(ship);\n\t\tconst pos =  {x:center.x + Math.cos(ship.shipAngle) * ship.size.width,\n\t\t\t\t\ty:center.y + Math.sin(ship.shipAngle) * ship.size.height};\n\t\tlet expiration:number;\n\t\tif (this.player === ship) {\n\t\t\texpiration = 1500;\n\t\t\tthis.controller.soundEffects.play(\"missle\");\n\n\t\t} else {\n\t\t\texpiration = 1000;\n\t\t\tthis.controller.soundEffects.play(\"alienMissle\");\n\t\t}\n\t\tconst missle = new Missle(pos, ship.shipAngle, ship.speed + 50, ship, this, expiration);\n\t\tship.lastMissleFired = missle;\n\t\tthis.addSprite(missle);\n\t}\n\n\thandleKeyPressed(key: string): void {\n\t\tif(this.pause)\n\t\t\treturn;\n\t\tswitch(key){\n\t\t\tcase 'a':\n\t\t\tcase 'ArrowLeft':\n\t\t\t  \tthis.player.left();\n\t\t\t  \tbreak;\n\t\t\tcase 'w':\n\t\t\tcase 'ArrowUp':\n\t\t\t  \tthis.player.move();\n\t\t\t  \tbreak;\n\t\t\tcase 'd':\n\t\t\tcase 'ArrowRight':\n\t\t\t  \tthis.player.right();\n\t\t\t  \tbreak;\n\t\t\tcase ' ':\n\t\t\t\tthis.fire(this.player);\n\t\t\t\tbreak;\n\t\t  }\n\t}\n\n\tpaintBackground(ctx: CanvasRenderingContext2D) {\n\t\tctx.fillStyle = 'black';\n        ctx.fillRect(0, 0, this.size.width, this.size.height);\n        ctx.fillStyle = 'white';\n    \tfor(let star of this.stars){\n\t\t\tconst xP = star.x - this.viewPort.x;\n\t\t\tconst yP = star.y - this.viewPort.y;\n\t\t\tif (xP < this.size.width && yP < this.size.height && xP > 0 && yP > 0)\n\t\t\t\tctx.fillRect(xP, yP, 1, 1);\t\t\n\t\t}\n\t}\n\n\tgameOver() {\n\t\tthis.pause = true;\n\t\tthis.controller.soundEffects.play(\"gameOver\");\n\n\t\tthis.addBehavior(new ExpirationBehavior(4000));\n\t\tthis.addBehavior({ handleKill: () => {\n\t\t\tif(this.controller.gameInitializer.highscore < this.score){\n\t\t\t\tthis.controller.gameInitializer.highscore = this.score;\n\t\t\t\tthis.controller.soundEffects.play(\"newHighScore\");\n\t\t\t}\n\t\t\tlaunchOpenningSequence(this.controller);\n\t\t}});\n\t}\n\n\thit(hitPoints:number){\n\t\tif(this.player.shield-hitPoints <= 0){\n\t\t\tconst center = centerPosition(this.player);\n\t\t\tthis.addSprite(newBigExplosion(this, center));\n\t\t\tthis.player.isAlive = false;\n\t\t\tthis.gameOver();\n\t\t}else{\n\t\t\tthis.player.shield -= hitPoints;\n\t\t\tthis.player.animateShield();\n\t\t}\t\n\t}\n\tmissleHit(owner:Sprite, otherSprite:Sprite) {\n\t\tif(this.debug){\n\t\t\tconsole.log(`Missle from ${owner.name} hits sprite ${otherSprite.name}`);\n\t\t}\n\t\tif(this.pause)\n\t\t\treturn;\n\t\n\t\tif (otherSprite.name === 'player' || otherSprite.name === 'enemy') {\n\t\t\totherSprite.isAlive = false;\n\t\t\tthis.addSprite(newBigExplosion(this, centerPosition(otherSprite)));\n\t\t\tif(otherSprite !== this.player){\n\t\t\t\tthis.score += 50;\n\t\t\t\tif(--this.alienCount !== 0)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tthis.pause =true;\n\t\t\t\tthis.addBehavior(new ExpirationBehavior(4000));\n\t\t\t\tthis.addBehavior({ handleKill: ()=> launchBetweenLevelsScene(this.controller, this.level, this.score)});\n\t\t\t}else{\n\t\t\t\tthis.gameOver();\n\t\t\t}\n\t\t}else if(owner === this.player &&  otherSprite.name === 'asteroid'){\n\t\t\totherSprite.isAlive = false; \n\t\t\tthis.addSprite(newSmallExplosion(this, centerPosition(otherSprite)));\n\t\t\tthis.score += 5;\n\t\t}\n\t}\n\tset score(score:number){\n\t\tthis._score = score;\n\t\tthis.controller.publishEvent({type:'score', value:(this.score)});\n\t}\n\tget score():number{\n\t\treturn this._score;\n\t}\n\tprivate createStars(n:number){\n\t\tfor (let i = 0; i < n; i++)\n\t\t\tthis.stars.push( {x: Math.floor(Math.random()*this.modelSize.width),\n\t\t\ty:  Math.floor(Math.random()*this.modelSize.height)} );\n\t}\n}\n","import Scene from \"../../gamelib/Scene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { MainGameScene } from \"./MainGameScene\";\nimport { generateOpenningSequenceAsteroids } from \"./sprites/Asteroids\";\nimport { TitleSprite } from \"../../gamelib/sprites/TitleSprite\";\n\nexport function launchBetweenLevelsScene(controller:GameController<SpaceGame>, level:number, score:number){\n    const scene = new Scene('BetweenLevelScene',controller);\n    controller.scene = scene;\n    controller.publishEvent({type:'score', value:score});\n    scene.wrapAround = true;\n\n    scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n            ctx.fillStyle = 'black';\n            ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n    }\n    scene.handleKeyPressed = (key: string) => { if(key==='n') new MainGameScene(controller,level+1,score) };\n    scene.handleMouseClick = () => new MainGameScene(controller,level+1,score);\n    scene.addSprite( new TitleSprite(`LEVEL ${level} COMPLETE`, `Score ${score}`\n        , 'CLICK OR PRESS N FOR NEXT LEVEL' ) );\n    scene.addSprites(generateOpenningSequenceAsteroids(scene, 30));\n    scene.controller.soundEffects.play(\"levelComplete\");\n    return scene;\n}\n","import { GameController } from \"../../gamelib/GameController\";\nimport Scene from \"../../gamelib/Scene\";\nimport { generateOpenningSequenceAsteroids } from \"./sprites/Asteroids\";\nimport { MainGameScene } from \"./MainGameScene\";\nimport { SpaceGame } from \"./SpaceGame\";\nimport { TitleSprite } from \"../../gamelib/sprites/TitleSprite\";\n\nexport function launchOpenningSequence(controller:GameController<SpaceGame>){\n    const scene = new Scene('space game',controller);\n    controller.scene = scene;\n    controller.publishEvent({type:'score', value:0});\n    scene.wrapAround = true;\n\n    scene.paintBackground = function(ctx: CanvasRenderingContext2D) {\n            ctx.fillStyle = 'black';\n            ctx.fillRect(0, 0, scene.size.width, scene.size.height);\n    }\n    scene.handleKeyPressed = (key: string) => { if(key==='n') new MainGameScene(controller,1,0) };\n    scene.handleMouseClick = () => new MainGameScene(controller,1,0);\n\n    scene.addSprite( new TitleSprite('Space Hunter', `High Score ${controller.gameInitializer.highscore}`\n        , 'CLICK OR PRESS N FOR NEW GAME' ) );\n     scene.addSprites(generateOpenningSequenceAsteroids(scene, 30));\n}","import { GameInitializer } from \"../../gamelib/GameInitializer\";\nimport { GameController } from \"../../gamelib/GameController\";\nimport { launchOpenningSequence } from \"./OpenningSequence\";\n\nexport class SpaceGame implements GameInitializer<SpaceGame>{\n    \n    highscore:number =0;\n\n    preloadImages = [{name:'asteroid', src:'/circles/assets/images/asteroid.png', rows:2, columns:10}\n                    ,{name:'player' , src: '/circles/assets/images/Enemy.png'}\n                    ,{name: 'enemy', src:'/circles/assets/images/nightraider-small.png' }\n                    ,{name: 'explosionSmall', src: '/circles/assets/images/ExplosionSheetSmall.png', rows:4, columns:4}\n                    ,{name: 'explosionBig', src: '/circles/assets/images/ExplosionSheet2.png', rows:6, columns:8}                                        \n                    ,{name: 'missle', src: '/circles/assets/images/Laser.png'}                                        \n];\n    preloadSounds = [{name:'missle', src:'/circles/assets/sounds/missle_fire.wav'}\n                    ,{name:'alienMissle', src:'/circles/assets/sounds/alien_missle_fire.wav'}\n                    ,{name:'gameOver', src:'/circles/assets/sounds/game_over.wav'}\n                    ,{name:'levelComplete', src:'/circles/assets/sounds/level_complete.wav'}\n                    ,{name:'explosionSmall', src:'/circles/assets/sounds/small_explosion.wav'}\n                    ,{name:'explosionBig', src:'/circles/assets/sounds/big_explosion.wav'}\n                    ,{name:'newHighScore', src:'circles/assets/sounds/new_high_score.wav'}];\n\n\tinit(controller:GameController<SpaceGame>):void {\n        launchOpenningSequence(controller);  \n        controller.debug = true;      \n\t}\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link  as ReactLink, Box } from '@material-ui/core';\nimport {  AppBar, Toolbar,Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n      },\n    container:{\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n        overflowY:'auto',\n    },\n    root: {\n        maxWidth: 345,\n        marginBottom: theme.spacing(3),\n    },\n    media: {\n        height: 140,\n    },\n    link:{\n        textDecoration: 'none'\n    },\n    githublink:{\n        marginLeft: theme.spacing(3),\n    }\n}));\n\nexport  function Home() {\n    const classes = useStyles();\n\n    return (\n\n        <React.Fragment>\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Circles\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box component=\"div\" overflow=\"visible\">\n        <Grid container alignItems=\"center\" justify = \"center\" direction=\"column\" className={classes.container} >\n            <Card className={classes.root}>\n                <Link to=\"/circles/ball\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/balls-screen.png\"\n                            title=\"Play Bouncing Ball\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Bouncing Ball\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Try to catch the balls.  If you miss your score goes down, so be careful!\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n\n            <Card className={classes.root}>\n                <Link to=\"/circles/space\" className={classes.link}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"/circles/assets/images/asteroids-screen.png\"\n                            title=\"Play Asteroids\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Play Space Hunter\n      </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Shoot all the asteroids.  Use W-A-S-D to move around and space bar to fire.  Watch out for the enemy...\n      </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </Card>\n            <ReactLink  component=\"button\" variant=\"body2\" className={classes.githublink}\n          onClick={() => window.open('https://github.com/nickzinn/circles')} >\n            Github Repository\n          </ReactLink>\n        </Grid>\n        </Box>\n</React.Fragment>\n    );\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport GameComponent from './gamecontainer/GameComponent';\nimport { BouncingBall } from './sample/BouncingBall';\nimport { SpaceGame } from './sample/space/SpaceGame';\nimport { Home } from './Home';\n\nexport default function App() {\n  return (\n    <Router>\n        <Switch>\n          <Route path=\"/circles/space\">\n          <GameComponent gameInitializer={new SpaceGame()} ></GameComponent>\n          </Route>\n          <Route path=\"/circles/ball\">\n          <GameComponent gameInitializer={new BouncingBall()} ></GameComponent>\n          </Route>\n          <Route path=\"/circles\">\n            <Home />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Electrolize',\n  },\n    overrides: {\n\n        MuiCssBaseline: {\n          '@global': {\n            body: {\n                width: '100%',\n                height: '100%',\n                margin: '0',\n            }\n          },\n        },\n      },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-electrolize';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}